///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.30.3.3983 for 8051               05/Apr/2017  10:45:07
// Copyright 2004-2016 IAR Systems AB.
// Evaluation license - IAR Embedded Workbench for 8051, Evaluation version 9.30
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Components\stack\zdo\ZDObject.c
//    Command line       =  
//        -f
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0x0422
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
//        -DREJOIN_POLL_RATE=440
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Components\stack\zdo\ZDObject.c
//        -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC
//        -D LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -lC
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\List
//        -lA
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\List
//        --diag_suppress Pe001,Pa010 -o
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\Obj
//        -e --no_code_motion --debug --core=plain --dptr=16,1
//        --data_model=large --code_model=banked
//        --calling_convention=xdata_reentrant --place_constants=data_rom
//        --nr_virtual_regs 16 -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\Source\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -Ohz --require_prototypes
//    List file          =  
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\List\ZDObject.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDObject

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_TO_X
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN ?XSTORE_R0123
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??NLME_PermitJoiningTimeout::?relay`
        FUNCTION `??NLME_PermitJoiningTimeout::?relay`,0203H
        PUBLIC `??ZDO_AnyClusterMatches::?relay`
        FUNCTION `??ZDO_AnyClusterMatches::?relay`,0203H
        PUBLIC `??ZDO_BuildSimpleDescBuf::?relay`
        FUNCTION `??ZDO_BuildSimpleDescBuf::?relay`,0203H
        PUBLIC `??ZDO_ConvertOTAClusters::?relay`
        FUNCTION `??ZDO_ConvertOTAClusters::?relay`,0203H
        PUBLIC `??ZDO_EndDeviceTimeoutCB::?relay`
        FUNCTION `??ZDO_EndDeviceTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_Init::?relay`
        FUNCTION `??ZDO_Init::?relay`,0203H
        PUBLIC `??ZDO_ParseAddrRsp::?relay`
        FUNCTION `??ZDO_ParseAddrRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseBindUnbindReq::?relay`
        FUNCTION `??ZDO_ParseBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseDeviceAnnce::?relay`
        FUNCTION `??ZDO_ParseDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ParseEPListRsp::?relay`
        FUNCTION `??ZDO_ParseEPListRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseEndDeviceBindReq::?relay`
        FUNCTION `??ZDO_ParseEndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseEndDeviceTimeoutRsp::?relay`
        FUNCTION `??ZDO_ParseEndDeviceTimeoutRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmNwkDiscRsp::?relay`
        FUNCTION `??ZDO_ParseMgmNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtBindRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtLqiRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtRtgRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseNodeDescRsp::?relay`
        FUNCTION `??ZDO_ParseNodeDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParsePowerDescRsp::?relay`
        FUNCTION `??ZDO_ParsePowerDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseServerDiscRsp::?relay`
        FUNCTION `??ZDO_ParseServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescBuf::?relay`
        FUNCTION `??ZDO_ParseSimpleDescBuf::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescRsp::?relay`
        FUNCTION `??ZDO_ParseSimpleDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseUserDescRsp::?relay`
        FUNCTION `??ZDO_ParseUserDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessBindUnbindReq::?relay`
        FUNCTION `??ZDO_ProcessBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessDeviceAnnce::?relay`
        FUNCTION `??ZDO_ProcessDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ProcessEndDeviceTimeoutReq::?relay`
        FUNCTION `??ZDO_ProcessEndDeviceTimeoutReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtBindReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtBindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtDirectJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLeaveReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLqiReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLqiReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtNwkDiscReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtPermitJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtRtgReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtRtgReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessServerDiscReq::?relay`
        FUNCTION `??ZDO_ProcessServerDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescReq::?relay`
        FUNCTION `??ZDO_ProcessUserDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescSet::?relay`
        FUNCTION `??ZDO_ProcessUserDescSet::?relay`,0203H
        PUBLIC `??ZDO_StartDevice::?relay`
        FUNCTION `??ZDO_StartDevice::?relay`,0203H
        PUBLIC `??ZDO_UpdateAddrManager::?relay`
        FUNCTION `??ZDO_UpdateAddrManager::?relay`,0203H
        PUBLIC `??ZDO_UpdateNwkStatus::?relay`
        FUNCTION `??ZDO_UpdateNwkStatus::?relay`,0203H
        FUNCTION `??zdoSendStateChangeMsg::?relay`,0203H
        PUBLIC NLME_PermitJoiningTimeout
        FUNCTION NLME_PermitJoiningTimeout,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ZDO_AnyClusterMatches
        FUNCTION ZDO_AnyClusterMatches,080203H
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_BuildSimpleDescBuf
        FUNCTION ZDO_BuildSimpleDescBuf,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ConvertOTAClusters
        FUNCTION ZDO_ConvertOTAClusters,080203H
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_EndDeviceTimeoutCB
        FUNCTION ZDO_EndDeviceTimeoutCB,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_Init
        FUNCTION ZDO_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_ParseAddrRsp
        FUNCTION ZDO_ParseAddrRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseBindUnbindReq
        FUNCTION ZDO_ParseBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseDeviceAnnce
        FUNCTION ZDO_ParseDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseEPListRsp
        FUNCTION ZDO_ParseEPListRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseEndDeviceBindReq
        FUNCTION ZDO_ParseEndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseEndDeviceTimeoutRsp
        FUNCTION ZDO_ParseEndDeviceTimeoutRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_ParseMgmNwkDiscRsp
        FUNCTION ZDO_ParseMgmNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtBindRsp
        FUNCTION ZDO_ParseMgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseMgmtLqiRsp
        FUNCTION ZDO_ParseMgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateNotify
        FUNCTION ZDO_ParseMgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateReq
        FUNCTION ZDO_ParseMgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseMgmtRtgRsp
        FUNCTION ZDO_ParseMgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseNodeDescRsp
        FUNCTION ZDO_ParseNodeDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParsePowerDescRsp
        FUNCTION ZDO_ParsePowerDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseServerDiscRsp
        FUNCTION ZDO_ParseServerDiscRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseSimpleDescBuf
        FUNCTION ZDO_ParseSimpleDescBuf,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseSimpleDescRsp
        FUNCTION ZDO_ParseSimpleDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseUserDescRsp
        FUNCTION ZDO_ParseUserDescRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ProcessActiveEPReq
        FUNCTION ZDO_ProcessActiveEPReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDO_ProcessBindUnbindReq
        FUNCTION ZDO_ProcessBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC ZDO_ProcessDeviceAnnce
        FUNCTION ZDO_ProcessDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC ZDO_ProcessEndDeviceTimeoutReq
        FUNCTION ZDO_ProcessEndDeviceTimeoutReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMatchDescReq
        FUNCTION ZDO_ProcessMatchDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC ZDO_ProcessMgmtBindReq
        FUNCTION ZDO_ProcessMgmtBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_ProcessMgmtDirectJoinReq
        FUNCTION ZDO_ProcessMgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtLeaveReq
        FUNCTION ZDO_ProcessMgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDO_ProcessMgmtLqiReq
        FUNCTION ZDO_ProcessMgmtLqiReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 64, STACK
        PUBLIC ZDO_ProcessMgmtNwkDiscReq
        FUNCTION ZDO_ProcessMgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ProcessMgmtPermitJoinReq
        FUNCTION ZDO_ProcessMgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtRtgReq
        FUNCTION ZDO_ProcessMgmtRtgReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDO_ProcessNodeDescReq
        FUNCTION ZDO_ProcessNodeDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessPowerDescReq
        FUNCTION ZDO_ProcessPowerDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessServerDiscReq
        FUNCTION ZDO_ProcessServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessSimpleDescReq
        FUNCTION ZDO_ProcessSimpleDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ProcessUserDescReq
        FUNCTION ZDO_ProcessUserDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDO_ProcessUserDescSet
        FUNCTION ZDO_ProcessUserDescSet,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        PUBLIC ZDO_StartDevice
        FUNCTION ZDO_StartDevice,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_UpdateAddrManager
        FUNCTION ZDO_UpdateAddrManager,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_UpdateNwkStatus
        FUNCTION ZDO_UpdateNwkStatus,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBWEAK __Constant_3e8
        PUBLIC apsChannelMask
        PUBLIC matchED
        FUNCTION zdoSendStateChangeMsg,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zdpExternalStateTaskID
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
APSME_BindRequest   SYMBOL "APSME_BindRequest"
`??APSME_BindRequest::?relay` SYMBOL "?relay", APSME_BindRequest
APSME_GetRequest    SYMBOL "APSME_GetRequest"
`??APSME_GetRequest::?relay` SYMBOL "?relay", APSME_GetRequest
APSME_LookupNwkAddr SYMBOL "APSME_LookupNwkAddr"
`??APSME_LookupNwkAddr::?relay` SYMBOL "?relay", APSME_LookupNwkAddr
APSME_UnBindRequest SYMBOL "APSME_UnBindRequest"
`??APSME_UnBindRequest::?relay` SYMBOL "?relay", APSME_UnBindRequest
APS_ReflectorInit   SYMBOL "APS_ReflectorInit"
`??APS_ReflectorInit::?relay` SYMBOL "?relay", APS_ReflectorInit
AddrMgrEntryLookupExt SYMBOL "AddrMgrEntryLookupExt"
`??AddrMgrEntryLookupExt::?relay` SYMBOL "?relay", AddrMgrEntryLookupExt
AddrMgrEntryLookupNwk SYMBOL "AddrMgrEntryLookupNwk"
`??AddrMgrEntryLookupNwk::?relay` SYMBOL "?relay", AddrMgrEntryLookupNwk
AddrMgrEntryUpdate  SYMBOL "AddrMgrEntryUpdate"
`??AddrMgrEntryUpdate::?relay` SYMBOL "?relay", AddrMgrEntryUpdate
AddrMgrExtAddrSet   SYMBOL "AddrMgrExtAddrSet"
`??AddrMgrExtAddrSet::?relay` SYMBOL "?relay", AddrMgrExtAddrSet
AddrMgrExtAddrValid SYMBOL "AddrMgrExtAddrValid"
`??AddrMgrExtAddrValid::?relay` SYMBOL "?relay", AddrMgrExtAddrValid
AssocCount          SYMBOL "AssocCount"
`??AssocCount::?relay` SYMBOL "?relay", AssocCount
AssocFindDevice     SYMBOL "AssocFindDevice"
`??AssocFindDevice::?relay` SYMBOL "?relay", AssocFindDevice
HalLcdWriteScreen   SYMBOL "HalLcdWriteScreen"
`??HalLcdWriteScreen::?relay` SYMBOL "?relay", HalLcdWriteScreen
HalLcdWriteString   SYMBOL "HalLcdWriteString"
`??HalLcdWriteString::?relay` SYMBOL "?relay", HalLcdWriteString
NLME_CheckNewAddrSet SYMBOL "NLME_CheckNewAddrSet"
`??NLME_CheckNewAddrSet::?relay` SYMBOL "?relay", NLME_CheckNewAddrSet
NLME_DeviceJoiningInit SYMBOL "NLME_DeviceJoiningInit"
`??NLME_DeviceJoiningInit::?relay` SYMBOL "?relay", NLME_DeviceJoiningInit
NLME_DirectJoinRequest SYMBOL "NLME_DirectJoinRequest"
`??NLME_DirectJoinRequest::?relay` SYMBOL "?relay", NLME_DirectJoinRequest
NLME_GetCoordExtAddr SYMBOL "NLME_GetCoordExtAddr"
`??NLME_GetCoordExtAddr::?relay` SYMBOL "?relay", NLME_GetCoordExtAddr
NLME_GetCoordShortAddr SYMBOL "NLME_GetCoordShortAddr"
`??NLME_GetCoordShortAddr::?relay` SYMBOL "?relay", NLME_GetCoordShortAddr
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetRequest     SYMBOL "NLME_GetRequest"
`??NLME_GetRequest::?relay` SYMBOL "?relay", NLME_GetRequest
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
NLME_IsAddressBroadcast SYMBOL "NLME_IsAddressBroadcast"
`??NLME_IsAddressBroadcast::?relay` SYMBOL "?relay", NLME_IsAddressBroadcast
NLME_LeaveReq       SYMBOL "NLME_LeaveReq"
`??NLME_LeaveReq::?relay` SYMBOL "?relay", NLME_LeaveReq
NLME_NetworkDiscoveryRequest SYMBOL "NLME_NetworkDiscoveryRequest"
`??NLME_NetworkDiscoveryRequest::?relay` SYMBOL "?relay", NLME_NetworkDiscoveryRequest
NLME_NwkDiscReq2    SYMBOL "NLME_NwkDiscReq2"
`??NLME_NwkDiscReq2::?relay` SYMBOL "?relay", NLME_NwkDiscReq2
NLME_NwkDiscTerm    SYMBOL "NLME_NwkDiscTerm"
`??NLME_NwkDiscTerm::?relay` SYMBOL "?relay", NLME_NwkDiscTerm
NLME_OrphanJoinRequest SYMBOL "NLME_OrphanJoinRequest"
`??NLME_OrphanJoinRequest::?relay` SYMBOL "?relay", NLME_OrphanJoinRequest
NLME_PermitJoiningRequest SYMBOL "NLME_PermitJoiningRequest"
`??NLME_PermitJoiningRequest::?relay` SYMBOL "?relay", NLME_PermitJoiningRequest
NLME_SetPollRate    SYMBOL "NLME_SetPollRate"
`??NLME_SetPollRate::?relay` SYMBOL "?relay", NLME_SetPollRate
RTG_RemoveRtgEntry  SYMBOL "RTG_RemoveRtgEntry"
`??RTG_RemoveRtgEntry::?relay` SYMBOL "?relay", RTG_RemoveRtgEntry
ZDApp_GetEmptyPendingBindReq SYMBOL "ZDApp_GetEmptyPendingBindReq"
`??ZDApp_GetEmptyPendingBindReq::?relay` SYMBOL "?relay", ZDApp_GetEmptyPendingBindReq
ZDApp_NVUpdate      SYMBOL "ZDApp_NVUpdate"
`??ZDApp_NVUpdate::?relay` SYMBOL "?relay", ZDApp_NVUpdate
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZMacSetReq          SYMBOL "ZMacSetReq"
`??ZMacSetReq::?relay` SYMBOL "?relay", ZMacSetReq
afEndPoints         SYMBOL "afEndPoints"
`??afEndPoints::?relay` SYMBOL "?relay", afEndPoints
afFindSimpleDesc    SYMBOL "afFindSimpleDesc"
`??afFindSimpleDesc::?relay` SYMBOL "?relay", afFindSimpleDesc
afNumEndPoints      SYMBOL "afNumEndPoints"
`??afNumEndPoints::?relay` SYMBOL "?relay", afNumEndPoints
bindAddrIndexGet    SYMBOL "bindAddrIndexGet"
`??bindAddrIndexGet::?relay` SYMBOL "?relay", bindAddrIndexGet
nwkNeighborRemoveAllStranded SYMBOL "nwkNeighborRemoveAllStranded"
`??nwkNeighborRemoveAllStranded::?relay` SYMBOL "?relay", nwkNeighborRemoveAllStranded
nwkNeighborUpdateNwkAddr SYMBOL "nwkNeighborUpdateNwkAddr"
`??nwkNeighborUpdateNwkAddr::?relay` SYMBOL "?relay", nwkNeighborUpdateNwkAddr
nwk_ScanJoiningOrphan SYMBOL "nwk_ScanJoiningOrphan"
`??nwk_ScanJoiningOrphan::?relay` SYMBOL "?relay", nwk_ScanJoiningOrphan
osal_build_uint32   SYMBOL "osal_build_uint32"
`??osal_build_uint32::?relay` SYMBOL "?relay", osal_build_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_find       SYMBOL "osal_msg_find"
`??osal_msg_find::?relay` SYMBOL "?relay", osal_msg_find
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
osal_nv_read        SYMBOL "osal_nv_read"
`??osal_nv_read::?relay` SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
`??osal_nv_write::?relay` SYMBOL "?relay", osal_nv_write
osal_set_event      SYMBOL "osal_set_event"
`??osal_set_event::?relay` SYMBOL "?relay", osal_set_event
osal_start_timerEx  SYMBOL "osal_start_timerEx"
`??osal_start_timerEx::?relay` SYMBOL "?relay", osal_start_timerEx
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
NLME_PermitJoiningTimeout SYMBOL "NLME_PermitJoiningTimeout"
`??NLME_PermitJoiningTimeout::?relay` SYMBOL "?relay", NLME_PermitJoiningTimeout
ZDO_AnyClusterMatches SYMBOL "ZDO_AnyClusterMatches"
`??ZDO_AnyClusterMatches::?relay` SYMBOL "?relay", ZDO_AnyClusterMatches
ZDO_BuildSimpleDescBuf SYMBOL "ZDO_BuildSimpleDescBuf"
`??ZDO_BuildSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_BuildSimpleDescBuf
ZDO_ConvertOTAClusters SYMBOL "ZDO_ConvertOTAClusters"
`??ZDO_ConvertOTAClusters::?relay` SYMBOL "?relay", ZDO_ConvertOTAClusters
ZDO_EndDeviceTimeoutCB SYMBOL "ZDO_EndDeviceTimeoutCB"
`??ZDO_EndDeviceTimeoutCB::?relay` SYMBOL "?relay", ZDO_EndDeviceTimeoutCB
ZDO_Init            SYMBOL "ZDO_Init"
`??ZDO_Init::?relay` SYMBOL "?relay", ZDO_Init
ZDO_ParseAddrRsp    SYMBOL "ZDO_ParseAddrRsp"
`??ZDO_ParseAddrRsp::?relay` SYMBOL "?relay", ZDO_ParseAddrRsp
ZDO_ParseBindUnbindReq SYMBOL "ZDO_ParseBindUnbindReq"
`??ZDO_ParseBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ParseBindUnbindReq
ZDO_ParseDeviceAnnce SYMBOL "ZDO_ParseDeviceAnnce"
`??ZDO_ParseDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ParseDeviceAnnce
ZDO_ParseEPListRsp  SYMBOL "ZDO_ParseEPListRsp"
`??ZDO_ParseEPListRsp::?relay` SYMBOL "?relay", ZDO_ParseEPListRsp
ZDO_ParseEndDeviceBindReq SYMBOL "ZDO_ParseEndDeviceBindReq"
`??ZDO_ParseEndDeviceBindReq::?relay` SYMBOL "?relay", ZDO_ParseEndDeviceBindReq
ZDO_ParseEndDeviceTimeoutRsp SYMBOL "ZDO_ParseEndDeviceTimeoutRsp"
`??ZDO_ParseEndDeviceTimeoutRsp::?relay` SYMBOL "?relay", ZDO_ParseEndDeviceTimeoutRsp
ZDO_ParseMgmNwkDiscRsp SYMBOL "ZDO_ParseMgmNwkDiscRsp"
`??ZDO_ParseMgmNwkDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmNwkDiscRsp
ZDO_ParseMgmtBindRsp SYMBOL "ZDO_ParseMgmtBindRsp"
`??ZDO_ParseMgmtBindRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtBindRsp
ZDO_ParseMgmtLqiRsp SYMBOL "ZDO_ParseMgmtLqiRsp"
`??ZDO_ParseMgmtLqiRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtLqiRsp
ZDO_ParseMgmtNwkUpdateNotify SYMBOL "ZDO_ParseMgmtNwkUpdateNotify"
`??ZDO_ParseMgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateNotify
ZDO_ParseMgmtNwkUpdateReq SYMBOL "ZDO_ParseMgmtNwkUpdateReq"
`??ZDO_ParseMgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateReq
ZDO_ParseMgmtRtgRsp SYMBOL "ZDO_ParseMgmtRtgRsp"
`??ZDO_ParseMgmtRtgRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtRtgRsp
ZDO_ParseNodeDescRsp SYMBOL "ZDO_ParseNodeDescRsp"
`??ZDO_ParseNodeDescRsp::?relay` SYMBOL "?relay", ZDO_ParseNodeDescRsp
ZDO_ParsePowerDescRsp SYMBOL "ZDO_ParsePowerDescRsp"
`??ZDO_ParsePowerDescRsp::?relay` SYMBOL "?relay", ZDO_ParsePowerDescRsp
ZDO_ParseServerDiscRsp SYMBOL "ZDO_ParseServerDiscRsp"
`??ZDO_ParseServerDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseServerDiscRsp
ZDO_ParseSimpleDescBuf SYMBOL "ZDO_ParseSimpleDescBuf"
`??ZDO_ParseSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescBuf
ZDO_ParseSimpleDescRsp SYMBOL "ZDO_ParseSimpleDescRsp"
`??ZDO_ParseSimpleDescRsp::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescRsp
ZDO_ParseUserDescRsp SYMBOL "ZDO_ParseUserDescRsp"
`??ZDO_ParseUserDescRsp::?relay` SYMBOL "?relay", ZDO_ParseUserDescRsp
ZDO_ProcessActiveEPReq SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", ZDO_ProcessActiveEPReq
ZDO_ProcessBindUnbindReq SYMBOL "ZDO_ProcessBindUnbindReq"
`??ZDO_ProcessBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ProcessBindUnbindReq
ZDO_ProcessDeviceAnnce SYMBOL "ZDO_ProcessDeviceAnnce"
`??ZDO_ProcessDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ProcessDeviceAnnce
ZDO_ProcessEndDeviceTimeoutReq SYMBOL "ZDO_ProcessEndDeviceTimeoutReq"
`??ZDO_ProcessEndDeviceTimeoutReq::?relay` SYMBOL "?relay", ZDO_ProcessEndDeviceTimeoutReq
ZDO_ProcessMatchDescReq SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", ZDO_ProcessMatchDescReq
ZDO_ProcessMgmtBindReq SYMBOL "ZDO_ProcessMgmtBindReq"
`??ZDO_ProcessMgmtBindReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtBindReq
ZDO_ProcessMgmtDirectJoinReq SYMBOL "ZDO_ProcessMgmtDirectJoinReq"
`??ZDO_ProcessMgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtDirectJoinReq
ZDO_ProcessMgmtLeaveReq SYMBOL "ZDO_ProcessMgmtLeaveReq"
`??ZDO_ProcessMgmtLeaveReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLeaveReq
ZDO_ProcessMgmtLqiReq SYMBOL "ZDO_ProcessMgmtLqiReq"
`??ZDO_ProcessMgmtLqiReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLqiReq
ZDO_ProcessMgmtNwkDiscReq SYMBOL "ZDO_ProcessMgmtNwkDiscReq"
`??ZDO_ProcessMgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtNwkDiscReq
ZDO_ProcessMgmtPermitJoinReq SYMBOL "ZDO_ProcessMgmtPermitJoinReq"
`??ZDO_ProcessMgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtPermitJoinReq
ZDO_ProcessMgmtRtgReq SYMBOL "ZDO_ProcessMgmtRtgReq"
`??ZDO_ProcessMgmtRtgReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtRtgReq
ZDO_ProcessNodeDescReq SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", ZDO_ProcessNodeDescReq
ZDO_ProcessPowerDescReq SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", ZDO_ProcessPowerDescReq
ZDO_ProcessServerDiscReq SYMBOL "ZDO_ProcessServerDiscReq"
`??ZDO_ProcessServerDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessServerDiscReq
ZDO_ProcessSimpleDescReq SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", ZDO_ProcessSimpleDescReq
ZDO_ProcessUserDescReq SYMBOL "ZDO_ProcessUserDescReq"
`??ZDO_ProcessUserDescReq::?relay` SYMBOL "?relay", ZDO_ProcessUserDescReq
ZDO_ProcessUserDescSet SYMBOL "ZDO_ProcessUserDescSet"
`??ZDO_ProcessUserDescSet::?relay` SYMBOL "?relay", ZDO_ProcessUserDescSet
ZDO_StartDevice     SYMBOL "ZDO_StartDevice"
`??ZDO_StartDevice::?relay` SYMBOL "?relay", ZDO_StartDevice
ZDO_UpdateAddrManager SYMBOL "ZDO_UpdateAddrManager"
`??ZDO_UpdateAddrManager::?relay` SYMBOL "?relay", ZDO_UpdateAddrManager
ZDO_UpdateNwkStatus SYMBOL "ZDO_UpdateNwkStatus"
`??ZDO_UpdateNwkStatus::?relay` SYMBOL "?relay", ZDO_UpdateNwkStatus

        EXTERN `??APSME_BindRequest::?relay`
        FUNCTION `??APSME_BindRequest::?relay`,00H
        EXTERN `??APSME_GetRequest::?relay`
        FUNCTION `??APSME_GetRequest::?relay`,00H
        EXTERN `??APSME_LookupNwkAddr::?relay`
        FUNCTION `??APSME_LookupNwkAddr::?relay`,00H
        EXTERN `??APSME_UnBindRequest::?relay`
        FUNCTION `??APSME_UnBindRequest::?relay`,00H
        EXTERN `??APS_ReflectorInit::?relay`
        FUNCTION `??APS_ReflectorInit::?relay`,00H
        EXTERN `??AddrMgrEntryLookupExt::?relay`
        FUNCTION `??AddrMgrEntryLookupExt::?relay`,00H
        EXTERN `??AddrMgrEntryLookupNwk::?relay`
        FUNCTION `??AddrMgrEntryLookupNwk::?relay`,00H
        EXTERN `??AddrMgrEntryUpdate::?relay`
        FUNCTION `??AddrMgrEntryUpdate::?relay`,00H
        EXTERN `??AddrMgrExtAddrSet::?relay`
        FUNCTION `??AddrMgrExtAddrSet::?relay`,00H
        EXTERN `??AddrMgrExtAddrValid::?relay`
        FUNCTION `??AddrMgrExtAddrValid::?relay`,00H
        EXTERN `??AssocCount::?relay`
        FUNCTION `??AssocCount::?relay`,00H
        EXTERN `??AssocFindDevice::?relay`
        FUNCTION `??AssocFindDevice::?relay`,00H
        EXTERN `??HalLcdWriteScreen::?relay`
        FUNCTION `??HalLcdWriteScreen::?relay`,00H
        EXTERN `??HalLcdWriteString::?relay`
        FUNCTION `??HalLcdWriteString::?relay`,00H
        EXTERN `??NLME_CheckNewAddrSet::?relay`
        FUNCTION `??NLME_CheckNewAddrSet::?relay`,00H
        EXTERN `??NLME_DeviceJoiningInit::?relay`
        FUNCTION `??NLME_DeviceJoiningInit::?relay`,00H
        EXTERN `??NLME_DirectJoinRequest::?relay`
        FUNCTION `??NLME_DirectJoinRequest::?relay`,00H
        EXTERN `??NLME_GetCoordExtAddr::?relay`
        FUNCTION `??NLME_GetCoordExtAddr::?relay`,00H
        EXTERN `??NLME_GetCoordShortAddr::?relay`
        FUNCTION `??NLME_GetCoordShortAddr::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetRequest::?relay`
        FUNCTION `??NLME_GetRequest::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??NLME_IsAddressBroadcast::?relay`
        FUNCTION `??NLME_IsAddressBroadcast::?relay`,00H
        EXTERN `??NLME_LeaveReq::?relay`
        FUNCTION `??NLME_LeaveReq::?relay`,00H
        EXTERN `??NLME_NetworkDiscoveryRequest::?relay`
        FUNCTION `??NLME_NetworkDiscoveryRequest::?relay`,00H
        EXTERN `??NLME_NwkDiscReq2::?relay`
        FUNCTION `??NLME_NwkDiscReq2::?relay`,00H
        EXTERN `??NLME_NwkDiscTerm::?relay`
        FUNCTION `??NLME_NwkDiscTerm::?relay`,00H
        EXTERN `??NLME_OrphanJoinRequest::?relay`
        FUNCTION `??NLME_OrphanJoinRequest::?relay`,00H
        EXTERN `??NLME_PermitJoiningRequest::?relay`
        FUNCTION `??NLME_PermitJoiningRequest::?relay`,00H
        EXTERN `??NLME_SetPollRate::?relay`
        FUNCTION `??NLME_SetPollRate::?relay`,00H
        EXTERN `??RTG_RemoveRtgEntry::?relay`
        FUNCTION `??RTG_RemoveRtgEntry::?relay`,00H
        EXTERN `??ZDApp_GetEmptyPendingBindReq::?relay`
        FUNCTION `??ZDApp_GetEmptyPendingBindReq::?relay`,00H
        EXTERN `??ZDApp_NVUpdate::?relay`
        FUNCTION `??ZDApp_NVUpdate::?relay`,00H
        EXTERN `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,00H
        EXTERN `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,00H
        EXTERN `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,00H
        EXTERN `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,00H
        EXTERN `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,00H
        EXTERN `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,00H
        EXTERN `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,00H
        EXTERN `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,00H
        EXTERN `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,00H
        EXTERN `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,00H
        EXTERN `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,00H
        EXTERN `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,00H
        EXTERN `??ZMacSetReq::?relay`
        FUNCTION `??ZMacSetReq::?relay`,00H
        EXTERN `??afEndPoints::?relay`
        FUNCTION `??afEndPoints::?relay`,00H
        EXTERN `??afFindSimpleDesc::?relay`
        FUNCTION `??afFindSimpleDesc::?relay`,00H
        EXTERN `??afNumEndPoints::?relay`
        FUNCTION `??afNumEndPoints::?relay`,00H
        EXTERN `??bindAddrIndexGet::?relay`
        FUNCTION `??bindAddrIndexGet::?relay`,00H
        EXTERN `??nwkNeighborRemoveAllStranded::?relay`
        FUNCTION `??nwkNeighborRemoveAllStranded::?relay`,00H
        EXTERN `??nwkNeighborUpdateNwkAddr::?relay`
        FUNCTION `??nwkNeighborUpdateNwkAddr::?relay`,00H
        EXTERN `??nwk_ScanJoiningOrphan::?relay`
        FUNCTION `??nwk_ScanJoiningOrphan::?relay`,00H
        EXTERN `??osal_build_uint32::?relay`
        FUNCTION `??osal_build_uint32::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_find::?relay`
        FUNCTION `??osal_msg_find::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??osal_nv_read::?relay`
        FUNCTION `??osal_nv_read::?relay`,00H
        EXTERN `??osal_nv_write::?relay`
        FUNCTION `??osal_nv_write::?relay`,00H
        EXTERN `??osal_set_event::?relay`
        FUNCTION `??osal_set_event::?relay`,00H
        EXTERN `??osal_start_timerEx::?relay`
        FUNCTION `??osal_start_timerEx::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AIB_apsUseExtendedPANID
        EXTERN APSME_BindRequest
        FUNCTION APSME_BindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_GetRequest
        FUNCTION APSME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_LookupNwkAddr
        FUNCTION APSME_LookupNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_UnBindRequest
        FUNCTION APSME_UnBindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_ReflectorInit
        FUNCTION APS_ReflectorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupExt
        FUNCTION AddrMgrEntryLookupExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupNwk
        FUNCTION AddrMgrEntryLookupNwk,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryUpdate
        FUNCTION AddrMgrEntryUpdate,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrSet
        FUNCTION AddrMgrExtAddrSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrValid
        FUNCTION AddrMgrExtAddrValid,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocCount
        FUNCTION AssocCount,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocFindDevice
        FUNCTION AssocFindDevice,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLcdWriteScreen
        FUNCTION HalLcdWriteScreen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLcdWriteString
        FUNCTION HalLcdWriteString,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CheckNewAddrSet
        FUNCTION NLME_CheckNewAddrSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DeviceJoiningInit
        FUNCTION NLME_DeviceJoiningInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DirectJoinRequest
        FUNCTION NLME_DirectJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordExtAddr
        FUNCTION NLME_GetCoordExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordShortAddr
        FUNCTION NLME_GetCoordShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetRequest
        FUNCTION NLME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_IsAddressBroadcast
        FUNCTION NLME_IsAddressBroadcast,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_LeaveReq
        FUNCTION NLME_LeaveReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NetworkDiscoveryRequest
        FUNCTION NLME_NetworkDiscoveryRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscReq2
        FUNCTION NLME_NwkDiscReq2,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscTerm
        FUNCTION NLME_NwkDiscTerm,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_OrphanJoinRequest
        FUNCTION NLME_OrphanJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_PermitJoiningRequest
        FUNCTION NLME_PermitJoiningRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_SetPollRate
        FUNCTION NLME_SetPollRate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RTG_RemoveRtgEntry
        FUNCTION RTG_RemoveRtgEntry,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_GetEmptyPendingBindReq
        FUNCTION ZDApp_GetEmptyPendingBindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_NVUpdate
        FUNCTION ZDApp_NVUpdate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_Config_Node_Descriptor
        EXTERN ZDO_Config_Power_Descriptor
        EXTERN ZDO_UseExtendedPANID
        EXTERN ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 64, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SendData
        FUNCTION ZDP_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacSetReq
        FUNCTION ZMacSetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN _NIB
        EXTERN afEndPoints
        FUNCTION afEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afFindSimpleDesc
        FUNCTION afFindSimpleDesc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afNumEndPoints
        FUNCTION afNumEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bindAddrIndexGet
        FUNCTION bindAddrIndexGet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN devState
        EXTERN epList
        EXTERN nwkNeighborRemoveAllStranded
        FUNCTION nwkNeighborRemoveAllStranded,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwkNeighborUpdateNwkAddr
        FUNCTION nwkNeighborUpdateNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwk_ScanJoiningOrphan
        FUNCTION nwk_ScanJoiningOrphan,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_build_uint32
        FUNCTION osal_build_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_find
        FUNCTION osal_msg_find,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zdappMgmtNwkDiscReqInProgress
        EXTERN zdappMgmtNwkDiscRspAddr
        EXTERN zdappMgmtNwkDiscRspTransSeq
        EXTERN zdappMgmtNwkDiscStartIndex
        EXTERN zgChildAgingEnable
        EXTERN zgDefaultChannelList
        EXTERN zgDefaultStartingScanDuration

// C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Components\stack\zdo\ZDObject.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDObject.c
//    3   Revised:        $Date: 2014-08-04 18:42:36 -0700 (Mon, 04 Aug 2014) $
//    4   Revision:       $Revision: 39656 $
//    5 
//    6   Description:    This is the Zigbee Device Object.
//    7 
//    8 
//    9   Copyright 2004-2014 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License"). You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product. Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "OSAL_Nv.h"
//   46 #include "rtg.h"
//   47 #include "NLMEDE.h"
//   48 #include "nwk_globals.h"
//   49 #include "APS.h"
//   50 #include "APSMEDE.h"
//   51 #include "AssocList.h"
//   52 #include "BindingTable.h"
//   53 #include "AddrMgr.h"
//   54 #include "AF.h"
//   55 #include "ZDObject.h"
//   56 #include "ZDProfile.h"
//   57 #include "ZDConfig.h"
//   58 #include "ZDSecMgr.h"
//   59 #include "ZDApp.h"
//   60 #include "nwk_util.h"   // NLME_IsAddressBroadcast()
//   61 #include "ZGlobals.h"
//   62 #if defined MT_ZDO_CB_FUNC
//   63 #include "MT.h"
//   64 #endif
//   65 
//   66 #if defined( LCD_SUPPORTED )
//   67   #include "OnBoard.h"
//   68 #endif
//   69 
//   70 /* HAL */
//   71 #include "hal_lcd.h"
//   72 
//   73 /*********************************************************************
//   74  * MACROS
//   75  */
//   76 
//   77 /*********************************************************************
//   78  * CONSTANTS
//   79  */
//   80 // NLME Stub Implementations
//   81 #define ZDO_ProcessMgmtPermitJoinTimeout NLME_PermitJoiningTimeout
//   82 
//   83 /*********************************************************************
//   84  * TYPEDEFS
//   85  */
//   86 #if defined ( REFLECTOR )
//   87 typedef struct
//   88 {
//   89   byte SrcTransSeq;
//   90   zAddrType_t SrcAddr;
//   91   uint16 LocalCoordinator;
//   92   byte epIntf;
//   93   uint16 ProfileID;
//   94   byte numInClusters;
//   95   uint16 *inClusters;
//   96   byte numOutClusters;
//   97   uint16 *outClusters;
//   98   byte SecurityUse;
//   99   byte status;
//  100 } ZDO_EDBind_t;
//  101 #endif // defined ( REFLECTOR )
//  102 
//  103 enum
//  104 {
//  105   ZDMATCH_INIT,           // Initialized
//  106   ZDMATCH_WAIT_REQ,       // Received first request, waiting for second
//  107   ZDMATCH_SENDING_BINDS   // Received both requests, sending unbind/binds
//  108 };
//  109 
//  110 enum
//  111 {
//  112   ZDMATCH_SENDING_NOT,
//  113   ZDMATCH_SENDING_UNBIND,
//  114   ZDMATCH_SENDING_BIND
//  115 };
//  116 
//  117 /*********************************************************************
//  118  * GLOBAL VARIABLES
//  119  */
//  120 
//  121 /*********************************************************************
//  122  * EXTERNAL VARIABLES
//  123  */
//  124 
//  125 /*********************************************************************
//  126  * EXTERNAL FUNCTIONS
//  127  */
//  128 
//  129 /*********************************************************************
//  130  * LOCAL VARIABLES
//  131  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  132 static uint16 ZDOBuildBuf[26];  // temp area to build data without allocation
ZDOBuildBuf:
        DS 52
        REQUIRE __INIT_XDATA_Z
//  133 
//  134 #if defined ( REFLECTOR )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  135 static ZDO_EDBind_t *ZDO_EDBind;     // Null when not used
ZDO_EDBind:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  136 #endif
//  137 
//  138 #if defined ( MANAGED_SCAN )
//  139   uint32 managedScanNextChannel = 0;
//  140   uint32 managedScanChannelMask = 0;
//  141   uint8  managedScanTimesPerChannel = 0;
//  142 #endif
//  143 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  144 ZDMatchEndDeviceBind_t *matchED = (ZDMatchEndDeviceBind_t *)NULL;
matchED:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  145 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//  146 uint32 apsChannelMask = 0;
apsChannelMask:
        DS 4
        REQUIRE __INIT_XDATA_Z
//  147 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  148 int16 zdpExternalStateTaskID = -1;
zdpExternalStateTaskID:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zdpExternalStateTaskID>`
        REQUIRE __INIT_XDATA_I
//  149 
//  150 /*********************************************************************
//  151  * LOCAL FUNCTIONS
//  152  */
//  153 static void ZDODeviceSetup( void );
//  154 #if defined ( MANAGED_SCAN )
//  155   static void ZDOManagedScan_Next( void );
//  156 #endif
//  157 #if defined ( REFLECTOR )
//  158   static void ZDO_RemoveEndDeviceBind( void );
//  159   static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse );
//  160 #endif
//  161 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  162   static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  163                                        byte numList2, uint16 *list2, uint16 *pMatches );
//  164   static void ZDO_RemoveMatchMemory( void );
//  165   static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq );
//  166   static void ZDO_EndDeviceBindMatchTimeoutCB( void );
//  167 #endif
//  168 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList );
//  169 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId);
//  170 
//  171 /*********************************************************************
//  172  * @fn          ZDO_Init
//  173  *
//  174  * @brief       ZDObject and ZDProfile initialization.
//  175  *
//  176  * @param       none
//  177  *
//  178  * @return      none
//  179  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  180 void ZDO_Init( void )
ZDO_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ZDO_Init
        CODE
//  181 {
        FUNCALL ZDO_Init, sAddrExtCpy
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, APS_ReflectorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, NLME_DeviceJoiningInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  182   // Initialize ZD items
//  183   #if defined ( REFLECTOR )
//  184   ZDO_EDBind = NULL;
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  185   #endif
//  186 
//  187   // Initialize default ZDO_UseExtendedPANID to the APS one.
//  188   osal_cpyExtAddr( ZDO_UseExtendedPANID, AIB_apsUseExtendedPANID );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#AIB_apsUseExtendedPANID & 0xff
        MOV     R5,#(AIB_apsUseExtendedPANID >> 8) & 0xff
        MOV     R2,#ZDO_UseExtendedPANID & 0xff
        MOV     R3,#(ZDO_UseExtendedPANID >> 8) & 0xff
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  189 
//  190   // Setup the device - type of device to create.
//  191   ZDODeviceSetup();
        ; Setup parameters for call to function APS_ReflectorInit
        LCALL   `??APS_ReflectorInit::?relay`; Banked call to: APS_ReflectorInit
        ; Setup parameters for call to function NLME_DeviceJoiningInit
        LCALL   `??NLME_DeviceJoiningInit::?relay`; Banked call to: NLME_DeviceJoiningInit
//  192 }
          CFI EndBlock cfiBlock0
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock1
//  193 
//  194 #if defined ( MANAGED_SCAN )
//  195 /*********************************************************************
//  196  * @fn      ZDOManagedScan_Next()
//  197  *
//  198  * @brief   Setup a managed scan.
//  199  *
//  200  * @param   none
//  201  *
//  202  * @return  none
//  203  */
//  204 static void ZDOManagedScan_Next( void )
//  205 {
//  206   // Is it the first time
//  207   if ( managedScanNextChannel == 0 && managedScanTimesPerChannel == 0 )
//  208   {
//  209     // Setup the defaults
//  210     managedScanNextChannel  = 1;
//  211 
//  212     while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  213       managedScanNextChannel <<= 1;
//  214 
//  215     managedScanChannelMask = managedScanNextChannel;
//  216     managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  217   }
//  218   else
//  219   {
//  220     // Do we need to go to the next channel
//  221     if ( managedScanTimesPerChannel == 0 )
//  222     {
//  223       // Find next active channel
//  224       managedScanChannelMask  = managedScanNextChannel;
//  225       managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  226     }
//  227     else
//  228     {
//  229       managedScanTimesPerChannel--;
//  230 
//  231       if ( managedScanTimesPerChannel == 0 )
//  232       {
//  233         managedScanNextChannel  <<= 1;
//  234         while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  235           managedScanNextChannel <<= 1;
//  236 
//  237         if ( managedScanNextChannel == 0 )
//  238           zdoDiscCounter  = NUM_DISC_ATTEMPTS + 1; // Stop
//  239       }
//  240     }
//  241   }
//  242 }
//  243 #endif // MANAGED_SCAN
//  244 
//  245 /*********************************************************************
//  246  * @fn      ZDODeviceSetup()
//  247  *
//  248  * @brief   Call set functions depending on the type of device compiled.
//  249  *
//  250  * @param   none
//  251  *
//  252  * @return  none
//  253  */
//  254 static void ZDODeviceSetup( void )
//  255 {
//  256   if ( ZG_BUILD_COORDINATOR_TYPE )
//  257   {
//  258     NLME_CoordinatorInit();
//  259   }
//  260 
//  261 #if defined ( REFLECTOR )
//  262   APS_ReflectorInit();
//  263 #endif
//  264 
//  265   if ( ZG_BUILD_JOINING_TYPE )
//  266   {
//  267     NLME_DeviceJoiningInit();
//  268   }
//  269 }
//  270 
//  271 /*********************************************************************
//  272  * @fn          ZDO_StartDevice
//  273  *
//  274  * @brief       This function starts a device in a network.
//  275  *
//  276  * @param       logicalType     - Device type to start
//  277  *              startMode       - indicates mode of device startup
//  278  *              beaconOrder     - indicates time betwen beacons
//  279  *              superframeOrder - indicates length of active superframe
//  280  *
//  281  * @return      none
//  282  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  283 void ZDO_StartDevice( byte logicalType, devStartModes_t startMode, byte beaconOrder, byte superframeOrder )
ZDO_StartDevice:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ZDO_StartDevice
        CODE
//  284 {
        FUNCALL ZDO_StartDevice, NLME_NetworkDiscoveryRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, nwk_ScanJoiningOrphan
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_OrphanJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0,R1
        MOV     ?V1,R2
//  285   ZStatus_t ret;
//  286 #if defined ( ZIGBEE_FREQ_AGILITY )
//  287   static uint8 discRetries = 0;
//  288 #endif
//  289 #if defined ( ZIGBEE_COMMISSIONING )
//  290   static uint8 scanCnt = 0;
//  291 #endif
//  292 
//  293   ret = ZUnsupportedMode;
//  294 
//  295   
//  296  
//  297   if ( ZG_BUILD_COORDINATOR_TYPE && logicalType == NODETYPE_COORDINATOR )
//  298   {
//  299    
//  300     
//  301     if ( startMode == MODE_HARD )
//  302     {
//  303       devState = DEV_COORD_STARTING;
//  304       ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, zgDefaultChannelList,
//  305                                           zgDefaultStartingScanDuration, beaconOrder,
//  306                                           superframeOrder, false );
//  307     }
//  308     else if ( startMode == MODE_RESUME )
//  309     {
//  310       // Just start the coordinator
//  311       devState = DEV_COORD_STARTING;
//  312       ret = NLME_StartRouterRequest( beaconOrder, beaconOrder, false );
//  313     }
//  314     else
//  315     {
//  316 #if defined( LCD_SUPPORTED )
//  317       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  318 #endif
//  319     }
//  320   }
//  321 
//  322   if ( ZG_BUILD_JOINING_TYPE && (logicalType == NODETYPE_ROUTER || logicalType == NODETYPE_DEVICE) )
        MOV     A,#0x1
        XRL     A,?V0
        JZ      ??ZDO_StartDevice_0
        MOV     A,#0x2
        XRL     A,?V0
        JZ      $+5
        LJMP    ??ZDO_StartDevice_1 & 0xFFFF
//  323   {
//  324     if ( (startMode == MODE_JOIN) || (startMode == MODE_REJOIN) )
??ZDO_StartDevice_0:
        MOV     A,R2
        JZ      ??ZDO_StartDevice_2
        MOV     A,#0x3
        XRL     A,?V1
        JNZ     ??ZDO_StartDevice_3
//  325     {
//  326       devState = DEV_NWK_DISC;
??ZDO_StartDevice_2:
        MOV     DPTR,#devState
        MOV     A,#0x2
        LCALL   ?Subroutine44 & 0xFFFF
//  327 
//  328   #if defined( MANAGED_SCAN )
//  329       ZDOManagedScan_Next();
//  330       ret = NLME_NetworkDiscoveryRequest( managedScanChannelMask, BEACON_ORDER_15_MSEC );
//  331   #else
//  332       ret = NLME_NetworkDiscoveryRequest( zgDefaultChannelList, zgDefaultStartingScanDuration );
??CrossCallReturnLabel_68:
        LCALL   ?XLOAD_R2345
        LCALL   `??NLME_NetworkDiscoveryRequest::?relay`; Banked call to: NLME_NetworkDiscoveryRequest
        MOV     A,R1
        MOV     R1,A
//  333     #if defined ( ZIGBEE_FREQ_AGILITY )
//  334       if ( !( ZDO_Config_Node_Descriptor.CapabilityFlags & CAPINFO_RCVR_ON_IDLE ) &&
//  335             ( ret == ZSuccess ) && ( ++discRetries == 4 ) )
//  336       {
//  337         // For devices with RxOnWhenIdle equals to FALSE, any network channel
//  338         // change will not be recieved. On these devices or routers that have
//  339         // lost the network, an active scan shall be conducted on the Default
//  340         // Channel list using the extended PANID to find the network. If the
//  341         // extended PANID isn't found using the Default Channel list, an scan
//  342         // should be completed using all channels.
//  343         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
//  344       }
//  345     #endif // ZIGBEE_FREQ_AGILITY
//  346     #if defined ( ZIGBEE_COMMISSIONING )
//  347       if (startMode == MODE_REJOIN && scanCnt++ >= 5 )
        MOV     A,#0x3
        XRL     A,?V1
        JNZ     ??ZDO_StartDevice_4
        MOV     DPTR,#??scanCnt
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x1
        ADD     A,R0
        MOVX    @DPTR,A
        MOV     A,R0
        CLR     C
        SUBB    A,#0x5
        JC      ??ZDO_StartDevice_4
//  348       {
//  349         // When ApsUseExtendedPanID is commissioned to a non zero value via
//  350         // application specific means, the device shall conduct an active scan
//  351         // on the Default Channel list and join the PAN with the same
//  352         // ExtendedPanID. If the PAN is not found, an scan should be completed
//  353         // on all channels.
//  354         // When devices rejoin the network and the PAN is not found from
//  355         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
        MOV     DPTR,#zgDefaultChannelList
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x8
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7
        MOVX    @DPTR,A
        SJMP    ??ZDO_StartDevice_4
//  356       }
//  357     #endif // ZIGBEE_COMMISSIONING
//  358   #endif
//  359     }
//  360     else if ( startMode == MODE_RESUME )
??ZDO_StartDevice_3:
        MOV     A,#0x1
        XRL     A,?V1
        JNZ     ??ZDO_StartDevice_5
//  361     {
//  362       if ( logicalType == NODETYPE_ROUTER )
        MOV     A,#0x1
        XRL     A,?V0
        MOV     DPTR,#devState
        JNZ     ??ZDO_StartDevice_6
//  363       {
//  364         ZMacScanCnf_t scanCnf;
//  365         devState = DEV_NWK_ORPHAN;
        MOV     A,#0xa
        MOVX    @DPTR,A
//  366 
//  367         /* if router and nvram is available, fake successful orphan scan */
//  368         scanCnf.hdr.Status = ZSUCCESS;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//  369         scanCnf.ScanType = ZMAC_ORPHAN_SCAN;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//  370         scanCnf.UnscannedChannels = 0;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  371         scanCnf.ResultListSize = 0;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//  372         nwk_ScanJoiningOrphan(&scanCnf);
        ; Setup parameters for call to function nwk_ScanJoiningOrphan
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??nwk_ScanJoiningOrphan::?relay`; Banked call to: nwk_ScanJoiningOrphan
//  373 
//  374         ret = ZSuccess;
        SJMP    ??ZDO_StartDevice_7
//  375       }
//  376       else
//  377       {
//  378         devState = DEV_NWK_ORPHAN;
??ZDO_StartDevice_6:
        MOV     A,#0xa
        LCALL   ?Subroutine44 & 0xFFFF
//  379         ret = NLME_OrphanJoinRequest( zgDefaultChannelList,
//  380                                       zgDefaultStartingScanDuration );
//  381       }
//  382     }
??CrossCallReturnLabel_69:
        LCALL   ?XLOAD_R2345
        LCALL   `??NLME_OrphanJoinRequest::?relay`; Banked call to: NLME_OrphanJoinRequest
        MOV     A,R1
        MOV     R1,A
//  383     else
//  384     {
//  385 #if defined( LCD_SUPPORTED )
//  386       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  387 #endif
//  388     }
//  389   }
//  390 
//  391   if ( ret != ZSuccess )
??ZDO_StartDevice_4:
        MOV     A,R1
        JNZ     ??ZDO_StartDevice_1
        SJMP    ??ZDO_StartDevice_7
??ZDO_StartDevice_5:
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "MODE unknown">` & 0xff
        MOV     R5,#(`?<Constant "MODE unknown">` >> 8) & 0xff
        MOV     R2,#`?<Constant "StartDevice ERR">` & 0xff
        MOV     R3,#(`?<Constant "StartDevice ERR">` >> 8) & 0xff
        LCALL   `??HalLcdWriteScreen::?relay`; Banked call to: HalLcdWriteScreen
//  392   {
//  393     osal_start_timerEx(ZDAppTaskID, ZDO_NETWORK_INIT, NWK_RETRY_DELAY );
??ZDO_StartDevice_1:
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_3e8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
//  394   }
//  395 }
??ZDO_StartDevice_7:
        MOV     A,#0xb
        SJMP    ??Subroutine154_0
          CFI EndBlock cfiBlock2

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond3 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond4 Using cfiCommon0
          CFI (cfiCond4) Function ZDO_StartDevice
          CFI (cfiCond4) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond4) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond4) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond4) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond4) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond4) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond4) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond4) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond4) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond4) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond4) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond4) CFA_SP SP+-2
          CFI (cfiCond4) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker5 Using cfiCommon1
          CFI (cfiPicker5) NoFunction
          CFI (cfiPicker5) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function NLME_NetworkDiscoveryRequest
        ; Setup parameters for call to function NLME_OrphanJoinRequest
        MOV     DPTR,#zgDefaultStartingScanDuration
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPTR,#zgDefaultChannelList
        RET
          CFI EndBlock cfiCond3
          CFI EndBlock cfiCond4
          CFI EndBlock cfiPicker5

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??scanCnt:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  396 
//  397 /**************************************************************************************************
//  398  * @fn          zdoSendStateChangeMsg
//  399  *
//  400  * @brief       Helper function for ZDO_UpdateNwkStatus.
//  401  *
//  402  * input parameters
//  403  *
//  404  * @param       taskId - The OSAL task identifier to which to send the ZDO_STATE_CHANGE_EVT.
//  405  * @param       state - The current device state.
//  406  *
//  407  * output parameters
//  408  *
//  409  * None.
//  410  *
//  411  * @return      None.
//  412  **************************************************************************************************
//  413  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  414 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId)
zdoSendStateChangeMsg:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function zdoSendStateChangeMsg
        CODE
//  415 {
        FUNCALL zdoSendStateChangeMsg, osal_msg_find
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        MOV     R6,A
//  416   osal_event_hdr_t *pMsg = (osal_event_hdr_t *)osal_msg_find(taskId, ZDO_STATE_CHANGE);
        ; Setup parameters for call to function osal_msg_find
        MOV     R2,#-0x2f
        MOV     R1,A
        LCALL   `??osal_msg_find::?relay`; Banked call to: osal_msg_find
        MOV     DPL,R2
        MOV     DPH,R3
//  417 
//  418   if (NULL == pMsg)
        MOV     A,DPL
        ORL     A,DPH
        JNZ     ??zdoSendStateChangeMsg_0
//  419   {
//  420     if (NULL == (pMsg = (osal_event_hdr_t *)osal_msg_allocate(sizeof(osal_event_hdr_t))))
        ; Setup parameters for call to function osal_msg_allocate
        MOV     R2,#0x2
        MOV     R3,#0x0
        LCALL   `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV     A,R2
        ORL     A,R3
        JNZ     ??zdoSendStateChangeMsg_1
//  421     {
//  422       // Upon failure to notify any EndPoint of the state change, re-set the ZDO event to
//  423       // try again later when more Heap may be available.
//  424       osal_set_event(ZDAppTaskID, ZDO_STATE_CHANGE_EVT);
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x10
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_set_event::?relay`; Banked call to: osal_set_event
        SJMP    ??zdoSendStateChangeMsg_2
//  425     }
//  426     else
//  427     {
//  428       pMsg->event = ZDO_STATE_CHANGE;
??zdoSendStateChangeMsg_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2f
        MOVX    @DPTR,A
//  429       pMsg->status = state;
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
//  430 
//  431       (void)osal_msg_send(taskId, (uint8 *)pMsg);
        ; Setup parameters for call to function osal_msg_send
        MOV     A,R6
        MOV     R1,A
        LCALL   `??osal_msg_send::?relay`; Banked call to: osal_msg_send
        SJMP    ??zdoSendStateChangeMsg_2
//  432     }
//  433   }
//  434   else
//  435   {
//  436     // Modify in place the status of an existing ZDO_STATE_CHANGE message to the EndPoint.
//  437     pMsg->status = state;
??zdoSendStateChangeMsg_0:
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
//  438   }
//  439 }
??zdoSendStateChangeMsg_2:
        SJMP    ??Subroutine155_0
          CFI EndBlock cfiBlock6

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
          CFI EndBlock cfiBlock7
        REQUIRE ??Subroutine154_0
        ; // Fall through to label ??Subroutine154_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine154_0:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock8
        REQUIRE ??Subroutine155_0
        ; // Fall through to label ??Subroutine155_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine155_0:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock9
//  440 
//  441 /**************************************************************************************************
//  442  * @fn          ZDO_UpdateNwkStatus
//  443  *
//  444  * @brief       This function sends a ZDO_STATE_CHANGE message to the task of every EndPoint
//  445  *              registered with AF (except, of course, the ZDO_EP). Even if a single task has more
//  446  *              than one registered EndPoint, it will only receive one notification per state
//  447  *              change. Although the device may go through a sequence of state changes, the
//  448  *              Application task may only receive notification of the final, steady-state state
//  449  *              because it has the lowest priority and never even runs to receive the intermediate
//  450  *              state change notifications.
//  451  *
//  452  * input parameters
//  453  *
//  454  * @param       state - The current device state.
//  455  *
//  456  * output parameters
//  457  *
//  458  * None.
//  459  *
//  460  * @return      None.
//  461  **************************************************************************************************
//  462  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  463 void ZDO_UpdateNwkStatus(devStates_t state)
ZDO_UpdateNwkStatus:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
        CODE
//  464 {
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     ?V0,R1
//  465   epList_t *pItem = epList;
        MOV     DPTR,#epList
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_351:
        SJMP    ??CrossCallReturnLabel_129
//  466 
//  467 #if defined MT_ZDO_CB_FUNC
//  468   if ( zdpExternalStateTaskID == -1 )
//  469   {
//  470     zdpExternalStateTaskID = MT_TaskID;
//  471   }
//  472 #endif
//  473 
//  474   while (pItem != NULL)
//  475   {
//  476     if (pItem->epDesc->endPoint != ZDO_EP)
??ZDO_UpdateNwkStatus_0:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_288:
        JZ      ??ZDO_UpdateNwkStatus_1
//  477     {
//  478       zdoSendStateChangeMsg(state, *(pItem->epDesc->task_id));
        ; Setup parameters for call to function zdoSendStateChangeMsg
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine54 & 0xFFFF
//  479     }
??CrossCallReturnLabel_290:
        MOV     R2,A
        MOV     R1,?V0
        LCALL   `??zdoSendStateChangeMsg::?relay`; Banked call to: zdoSendStateChangeMsg
//  480 
//  481     pItem = pItem->nextDesc;
??ZDO_UpdateNwkStatus_1:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine86 & 0xFFFF
//  482   }
??CrossCallReturnLabel_129:
        MOV     R7,A
        MOV     A,R6
        ORL     A,R7
        JNZ     ??ZDO_UpdateNwkStatus_0
//  483   
//  484   if ( zdpExternalStateTaskID != -1 )
        MOV     DPTR,#zdpExternalStateTaskID
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_UpdateNwkStatus_2
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDO_UpdateNwkStatus_2:
        JZ      ??ZDO_UpdateNwkStatus_3
//  485   {  
//  486     zdoSendStateChangeMsg( state, zdpExternalStateTaskID );
        ; Setup parameters for call to function zdoSendStateChangeMsg
        MOV     DPTR,#zdpExternalStateTaskID
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     R1,?V0
        LCALL   `??zdoSendStateChangeMsg::?relay`; Banked call to: zdoSendStateChangeMsg
//  487   }
//  488   
//  489   ZDAppNwkAddr.addr.shortAddr = NLME_GetShortAddr();
??ZDO_UpdateNwkStatus_3:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?Subroutine47 & 0xFFFF
//  490   (void)NLME_GetExtAddr();  // Load the saveExtAddr pointer.
??CrossCallReturnLabel_233:
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
//  491 }
          CFI EndBlock cfiBlock10
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock11
//  492 
//  493 #if defined ( REFLECTOR )
//  494 /*********************************************************************
//  495  * @fn          ZDO_RemoveEndDeviceBind
//  496  *
//  497  * @brief       Remove the end device bind
//  498  *
//  499  * @param  none
//  500  *
//  501  * @return      none
//  502  */
//  503 static void ZDO_RemoveEndDeviceBind( void )
//  504 {
//  505   if ( ZDO_EDBind != NULL )
//  506   {
//  507     // Free the RAM
//  508     if ( ZDO_EDBind->inClusters != NULL )
//  509     {
//  510       osal_mem_free( ZDO_EDBind->inClusters );
//  511     }
//  512     if ( ZDO_EDBind->outClusters != NULL )
//  513     {
//  514       osal_mem_free( ZDO_EDBind->outClusters );
//  515     }
//  516     osal_mem_free( ZDO_EDBind );
//  517     ZDO_EDBind = NULL;
//  518   }
//  519 }
//  520 #endif // REFLECTOR
//  521 
//  522 #if defined ( REFLECTOR )
//  523 /*********************************************************************
//  524  * @fn          ZDO_RemoveEndDeviceBind
//  525  *
//  526  * @brief       Remove the end device bind
//  527  *
//  528  * @param  none
//  529  *
//  530  * @return      none
//  531  */
//  532 static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse )
//  533 {
//  534   ZDP_EndDeviceBindRsp( TransSeq, dstAddr, Status, secUse );
//  535 
//  536 #if defined( LCD_SUPPORTED )
//  537   HalLcdWriteString( "End Device Bind", HAL_LCD_LINE_1 );
//  538   if ( Status == ZDP_SUCCESS )
//  539   {
//  540     HalLcdWriteString( "Success Sent", HAL_LCD_LINE_2 );
//  541   }
//  542   else
//  543   {
//  544     HalLcdWriteString( "Timeout", HAL_LCD_LINE_2 );
//  545   }
//  546 #endif
//  547 
//  548 }
//  549 #endif // REFLECTOR
//  550 
//  551 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  552 /*********************************************************************
//  553  * @fn          ZDO_CompareClusterLists
//  554  *
//  555  * @brief       Compare one list to another list
//  556  *
//  557  * @param       numList1 - number of items in list 1
//  558  * @param       list1 - first list of cluster IDs
//  559  * @param       numList2 - number of items in list 2
//  560  * @param       list2 - second list of cluster IDs
//  561  * @param       pMatches - buffer to put matches
//  562  *
//  563  * @return      number of matches
//  564  */
//  565 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  566                           byte numList2, uint16 *list2, uint16 *pMatches )
//  567 {
//  568   byte x, y;
//  569   uint16 z;
//  570   byte numMatches = 0;
//  571 
//  572   // Check the first in against the seconds out
//  573   for ( x = 0; x < numList1; x++ )
//  574   {
//  575     for ( y = 0; y < numList2; y++ )
//  576     {
//  577       z = list2[y];
//  578       if ( list1[x] == z )
//  579       {
//  580         pMatches[numMatches++] = z;
//  581       }
//  582     }
//  583   }
//  584 
//  585   return ( numMatches );
//  586 }
//  587 #endif // ZG_BUILD_COORDINATOR_TYPE
//  588 
//  589 /*********************************************************************
//  590  * Utility functions
//  591  */
//  592 
//  593 /*********************************************************************
//  594  * @fn          ZDO_CompareByteLists
//  595  *
//  596  * @brief       Compares two lists for matches.
//  597  *
//  598  * @param       ACnt  - number of entries in list A
//  599  * @param       AList  - List A
//  600  * @param       BCnt  - number of entries in list B
//  601  * @param       BList  - List B
//  602  *
//  603  * @return      true if a match is found
//  604  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  605 byte ZDO_AnyClusterMatches( byte ACnt, uint16 *AList, byte BCnt, uint16 *BList )
ZDO_AnyClusterMatches:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
        CODE
//  606 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V3,R1
        MOV     ?V2,R4
//  607   byte x, y;
//  608 
//  609   for ( x = 0; x < ACnt; x++ )
        MOV     ?V0,#0x0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_418:
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        SJMP    ??ZDO_AnyClusterMatches_0
??ZDO_AnyClusterMatches_1:
        INC     ?V0
??ZDO_AnyClusterMatches_0:
        MOV     A,?V0
        CLR     C
        SUBB    A,?V3
        JNC     ??ZDO_AnyClusterMatches_2
//  610   {
//  611     for ( y = 0; y < BCnt; y++ )
        MOV     ?V1,#0x0
        SJMP    ??ZDO_AnyClusterMatches_3
??ZDO_AnyClusterMatches_4:
        INC     ?V1
??ZDO_AnyClusterMatches_3:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V2
        JNC     ??ZDO_AnyClusterMatches_1
//  612     {
//  613       if ( AList[x] == BList[y] )
        MOV     R0,?V0
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_201:
        MOV     A,R2
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R1
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_355:
        MOV     R7,A
        MOV     R0,?V1
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_133:
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_AnyClusterMatches_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_AnyClusterMatches_5:
        JNZ     ??ZDO_AnyClusterMatches_4
//  614       {
//  615         return true;
        MOV     R1,#0x1
        SJMP    ??ZDO_AnyClusterMatches_6
//  616       }
//  617     }
//  618   }
//  619 
//  620   return false;
??ZDO_AnyClusterMatches_2:
        MOV     R1,#0x0
??ZDO_AnyClusterMatches_6:
        LJMP    ??Subroutine179_0 & 0xFFFF
//  621 }
          CFI EndBlock cfiBlock12
//  622 
//  623 /*********************************************************************
//  624  * Callback functions from ZDProfile
//  625  */
//  626 
//  627 /*********************************************************************
//  628  * @fn          ZDO_ProcessNodeDescReq
//  629  *
//  630  * @brief       This function processes and responds to the
//  631  *              Node_Desc_req message.
//  632  *
//  633  * @param       inMsg - incoming message
//  634  *
//  635  * @return      none
//  636  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  637 void ZDO_ProcessNodeDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescReq:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
        CODE
//  638 {
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_NodeDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine55 & 0xFFFF
//  639   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  640   NodeDescriptorFormat_t *desc = NULL;
//  641 
//  642   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_81:
        JNZ     ??ZDO_ProcessNodeDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessNodeDescReq_0:
        JNZ     ??ZDO_ProcessNodeDescReq_1
//  643   {
//  644     desc = &ZDO_Config_Node_Descriptor;
//  645   }
//  646 
//  647   if ( desc != NULL )
//  648   {
//  649     ZDP_NodeDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_NodeDescMsg
        MOV     ?V0,#ZDO_Config_Node_Descriptor & 0xff
        MOV     ?V1,#(ZDO_Config_Node_Descriptor >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   `??ZDP_NodeDescMsg::?relay`; Banked call to: ZDP_NodeDescMsg
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessNodeDescReq_2
//  650   }
//  651   else
//  652   {
//  653     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  654               ZDP_INVALID_REQTYPE, aoi, Node_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessNodeDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0,#0x2
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0,R4
        MOV     ?V1,R5
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine57 & 0xFFFF
//  655   }
??CrossCallReturnLabel_85:
        LCALL   `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  656 }
??ZDO_ProcessNodeDescReq_2:
        LJMP    ??Subroutine155_0 & 0xFFFF
          CFI EndBlock cfiBlock13
//  657 
//  658 /*********************************************************************
//  659  * @fn          ZDO_ProcessPowerDescReq
//  660  *
//  661  * @brief       This function processes and responds to the
//  662  *              Node_Power_req message.
//  663  *
//  664  * @param       inMsg  - incoming request
//  665  *
//  666  * @return      none
//  667  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  668 void ZDO_ProcessPowerDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessPowerDescReq:
          CFI Block cfiBlock14 Using cfiCommon0
          CFI Function ZDO_ProcessPowerDescReq
        CODE
//  669 {
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_PowerDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine55 & 0xFFFF
//  670   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  671   NodePowerDescriptorFormat_t *desc = NULL;
//  672 
//  673   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_82:
        JNZ     ??ZDO_ProcessPowerDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessPowerDescReq_0:
        JNZ     ??ZDO_ProcessPowerDescReq_1
//  674   {
//  675     desc = &ZDO_Config_Power_Descriptor;
//  676   }
//  677 
//  678   if ( desc != NULL )
//  679   {
//  680     ZDP_PowerDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_PowerDescMsg
        MOV     ?V0,#ZDO_Config_Power_Descriptor & 0xff
        MOV     ?V1,#(ZDO_Config_Power_Descriptor >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   `??ZDP_PowerDescMsg::?relay`; Banked call to: ZDP_PowerDescMsg
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessPowerDescReq_2
//  681   }
//  682   else
//  683   {
//  684     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  685               ZDP_INVALID_REQTYPE, aoi, Power_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessPowerDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0,#0x3
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0,R4
        MOV     ?V1,R5
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine57 & 0xFFFF
//  686   }
??CrossCallReturnLabel_86:
        LCALL   `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  687 }
??ZDO_ProcessPowerDescReq_2:
        LJMP    ??Subroutine155_0 & 0xFFFF
          CFI EndBlock cfiBlock14

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond15 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-2
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker17 Using cfiCommon1
          CFI (cfiPicker17) NoFunction
          CFI (cfiPicker17) Picker
        MOV     A,R6
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_304:
        LCALL   ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_338:
        MOV     R5,A
        MOV     R4,#-0x80
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_205:
        RET
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiPicker17

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond18 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond19) CFA_SP SP+-2
          CFI (cfiCond19) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker20 Using cfiCommon1
          CFI (cfiPicker20) NoFunction
          CFI (cfiPicker20) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_197:
        MOV     R4,A
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R4
        RET
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiPicker20
//  688 
//  689 /*********************************************************************
//  690  * @fn          ZDO_ProcessSimpleDescReq
//  691  *
//  692  * @brief       This function processes and responds to the
//  693  *              Simple_Desc_req message.
//  694  *
//  695  * @param       inMsg - incoming message (request)
//  696  *
//  697  * @return      none
//  698  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  699 void ZDO_ProcessSimpleDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescReq:
          CFI Block cfiBlock21 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
        CODE
//  700 {
        FUNCALL ZDO_ProcessSimpleDescReq, afFindSimpleDesc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, ZDP_SimpleDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  701   SimpleDescriptionFormat_t *sDesc = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine29 & 0xFFFF
//  702   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??CrossCallReturnLabel_36:
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_315:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
//  703   byte endPoint = inMsg->asdu[2];
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
//  704   byte free = false;
        MOV     ?V1,#0x0
//  705   byte stat = ZDP_SUCCESS;
        MOV     ?V0,#0x0
//  706 
//  707   if ( (endPoint == ZDO_EP) || (endPoint > MAX_ENDPOINTS) )
        JZ      ??ZDO_ProcessSimpleDescReq_0
        MOV     A,#-0x1
        XRL     A,R1
        JNZ     ??ZDO_ProcessSimpleDescReq_1
//  708   {
//  709     stat = ZDP_INVALID_EP;
??ZDO_ProcessSimpleDescReq_0:
        MOV     ?V0,#-0x7e
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  710   }
//  711   else if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??ZDO_ProcessSimpleDescReq_1:
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??ZDO_ProcessSimpleDescReq_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??ZDO_ProcessSimpleDescReq_3:
        JNZ     ??ZDO_ProcessSimpleDescReq_4
//  712   {
//  713     free = afFindSimpleDesc( &sDesc, endPoint );
        ; Setup parameters for call to function afFindSimpleDesc
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??afFindSimpleDesc::?relay`; Banked call to: afFindSimpleDesc
        MOV     A,R1
        MOV     R2,A
//  714     if ( sDesc == NULL )
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_272:
        JNZ     ??ZDO_ProcessSimpleDescReq_5
//  715     {
//  716       stat = ZDP_NOT_ACTIVE;
        MOV     ?V0,#-0x7d
??ZDO_ProcessSimpleDescReq_5:
        MOV     ?V1,R2
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  717     }
//  718   }
//  719   else
//  720   {
//  721     if ( ZSTACK_ROUTER_BUILD )
//  722     {
//  723       stat = ZDP_DEVICE_NOT_FOUND;
//  724     }
//  725     else if ( ZSTACK_END_DEVICE_BUILD )
//  726     {
//  727       stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessSimpleDescReq_4:
        MOV     ?V0,#-0x80
//  728     }
//  729   }
//  730 
//  731   ZDP_SimpleDescMsg( inMsg, stat, sDesc );
??ZDO_ProcessSimpleDescReq_2:
        ; Setup parameters for call to function ZDP_SimpleDescMsg
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R1,?V0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??ZDP_SimpleDescMsg::?relay`; Banked call to: ZDP_SimpleDescMsg
//  732 
//  733   if ( free && sDesc )
        MOV     A,?V1
        JZ      ??ZDO_ProcessSimpleDescReq_6
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_273:
        JZ      ??ZDO_ProcessSimpleDescReq_6
//  734   {
//  735     osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??Subroutine198_0 & 0xFFFF
//  736   }
??CrossCallReturnLabel_461:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  737 }
??ZDO_ProcessSimpleDescReq_6:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock21
//  738 
//  739 /*********************************************************************
//  740  * @fn          ZDO_ProcessActiveEPReq
//  741  *
//  742  * @brief       This function processes and responds to the
//  743  *              Active_EP_req message.
//  744  *
//  745  * @param       inMsg  - incoming message (request)
//  746  *
//  747  * @return      none
//  748  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  749 void ZDO_ProcessActiveEPReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessActiveEPReq:
          CFI Block cfiBlock22 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
        CODE
//  750 {
        FUNCALL ZDO_ProcessActiveEPReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afNumEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  751   byte cnt = 0;
        MOV     ?V0,#0x0
//  752   uint16 aoi;
//  753   byte stat = ZDP_SUCCESS;
        MOV     ?V1,#0x0
//  754 
//  755   aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_87:
        MOV     ?V2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V3,A
//  756 
//  757   if ( aoi == NLME_GetShortAddr() )
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     A,R2
        XRL     A,?V2
        JNZ     ??ZDO_ProcessActiveEPReq_0
        MOV     A,R3
        XRL     A,?V3
??ZDO_ProcessActiveEPReq_0:
        JNZ     ??ZDO_ProcessActiveEPReq_1
//  758   {
//  759     cnt = afNumEndPoints() - 1;  // -1 for ZDO endpoint descriptor
        ; Setup parameters for call to function afNumEndPoints
        LCALL   `??afNumEndPoints::?relay`; Banked call to: afNumEndPoints
        MOV     A,R1
        DEC     A
        MOV     ?V0,A
//  760     afEndPoints( (uint8 *)ZDOBuildBuf, true );
        ; Setup parameters for call to function afEndPoints
        MOV     R1,#0x1
        MOV     R2,#ZDOBuildBuf & 0xff
        MOV     R3,#(ZDOBuildBuf >> 8) & 0xff
        LCALL   `??afEndPoints::?relay`; Banked call to: afEndPoints
        SJMP    ??ZDO_ProcessActiveEPReq_2
//  761   }
//  762   else
//  763   {
//  764     stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessActiveEPReq_1:
        MOV     ?V1,#-0x80
//  765   }
//  766 
//  767   ZDP_ActiveEPRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
//  768                   aoi, cnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
??ZDO_ProcessActiveEPReq_2:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_335:
        MOV     ?V4,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V4,#ZDOBuildBuf & 0xff
        MOV     ?V5,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V1
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_297:
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_329:
        MOV     R1,A
        MOV     R2,#0x5
        MOV     R3,#-0x80
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
//  769 }
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock22
//  770 
//  771 /*********************************************************************
//  772  * @fn          ZDO_ConvertOTAClusters
//  773  *
//  774  * @brief       This function will convert the over-the-air cluster list
//  775  *              format to an internal format.
//  776  *
//  777  * @param       inMsg  - incoming message (request)
//  778  *
//  779  * @return      pointer to incremented inBuf
//  780  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  781 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList )
ZDO_ConvertOTAClusters:
          CFI Block cfiBlock23 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
        CODE
//  782 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V1,R1
//  783   uint8 x;
//  784 
//  785   for ( x = 0; x < cnt; x++ )
        MOV     ?V0,#0x0
        SJMP    ??ZDO_ConvertOTAClusters_0
//  786   {
//  787     // convert ota format to internal
//  788     outList[x] = BUILD_UINT16( inBuf[0], inBuf[1] );
??ZDO_ConvertOTAClusters_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_352:
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R6
        ADD     A,R0
        CLR     A
        ADDC    A,R1
        MOV     R7,A
        MOV     R0,?V0
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_134:
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
//  789     inBuf += sizeof( uint16 );
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        JNC     ??ZDO_ConvertOTAClusters_2
        INC     R3
//  790   }
??ZDO_ConvertOTAClusters_2:
        INC     ?V0
??ZDO_ConvertOTAClusters_0:
        MOV     A,?V0
        CLR     C
        SUBB    A,?V1
        JC      ??ZDO_ConvertOTAClusters_1
//  791   return ( inBuf );
        LJMP    ??Subroutine155_0 & 0xFFFF
//  792 }
          CFI EndBlock cfiBlock23

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond24 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function ZDO_ConvertOTAClusters
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_134
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+-2
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker26 Using cfiCommon1
          CFI (cfiPicker26) NoFunction
          CFI (cfiPicker26) Picker
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_204:
        MOV     A,R4
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,R1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiPicker26
//  793 
//  794 /*********************************************************************
//  795  * @fn          ZDO_ProcessMatchDescReq
//  796  *
//  797  * @brief       This function processes and responds to the
//  798  *              Match_Desc_req message.
//  799  *
//  800  * @param       inMsg  - incoming message (request)
//  801  *
//  802  * @return      none
//  803  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  804 void ZDO_ProcessMatchDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMatchDescReq:
          CFI Block cfiBlock27 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
        CODE
//  805 {
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V14,R2
        MOV     ?V15,R3
//  806   uint8 epCnt = 0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
//  807   uint8 numInClusters;
//  808   uint16 *inClusters = NULL;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  809   uint8 numOutClusters;
//  810   uint16 *outClusters = NULL;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  811   epList_t *epDesc;
//  812   SimpleDescriptionFormat_t *sDesc = NULL;
//  813   uint8 allocated;
//  814   uint8 *msg;
//  815   uint16 aoi;
//  816   uint16 profileID;
//  817 
//  818   // Parse the incoming message
//  819   msg = inMsg->asdu;
        LCALL   ??Subroutine169_0 & 0xFFFF
??CrossCallReturnLabel_278:
        ADDC    A,?V15
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_239:
        MOV     ?V3,A
//  820   aoi = BUILD_UINT16( msg[0], msg[1] );
        MOV     DPL,?V2
        MOV     DPH,A
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_472:
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
//  821   profileID = BUILD_UINT16( msg[2], msg[3] );
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
//  822   msg += 4;
//  823 
//  824   if ( ADDR_BCAST_NOT_ME == NLME_IsAddressBroadcast(aoi) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        XRL     A,#0x1
        JZ      ??ZDO_ProcessMatchDescReq_0
//  825   {
//  826     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  827                           ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
//  828     return;
//  829   }
//  830   else if ( (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi)) && (aoi != ZDAppNwkAddr.addr.shortAddr) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_1
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_ProcessMatchDescReq_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_ProcessMatchDescReq_2:
        JZ      ??ZDO_ProcessMatchDescReq_1
//  831   {
//  832     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  833                              ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
??ZDO_ProcessMatchDescReq_0:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_245:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        CLR     A
        MOV     ?V0,A
        MOV     ?V1,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_119:
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  834     return;
        LJMP    ??ZDO_ProcessMatchDescReq_3 & 0xFFFF
//  835   }
//  836 
//  837   if ((numInClusters = *msg++) &&
//  838       (inClusters = (uint16*)osal_mem_alloc( numInClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_1:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V8,A
        MOV     A,?V2
        ADD     A,#0x5
        MOV     ?V2,A
        JNC     ??ZDO_ProcessMatchDescReq_4
        INC     ?V3
??ZDO_ProcessMatchDescReq_4:
        MOV     A,?V8
        JZ      ??ZDO_ProcessMatchDescReq_5
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_441:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_67:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_261:
        JZ      ??ZDO_ProcessMatchDescReq_5
//  839   {
//  840     msg = ZDO_ConvertOTAClusters( numInClusters, msg, inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine82 & 0xFFFF
//  841   }
??CrossCallReturnLabel_124:
        MOV     R1,?V8
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV     ?V2,R2
        MOV     ?V3,R3
        SJMP    ??ZDO_ProcessMatchDescReq_6
//  842   else
//  843   {
//  844     numInClusters = 0;
??ZDO_ProcessMatchDescReq_5:
        MOV     ?V8,#0x0
//  845   }
//  846 
//  847   if ((numOutClusters = *msg++) &&
//  848       (outClusters = (uint16 *)osal_mem_alloc( numOutClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_6:
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_115:
        JZ      ??ZDO_ProcessMatchDescReq_7
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_442:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_234:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_262:
        JZ      ??ZDO_ProcessMatchDescReq_7
//  849   {
//  850     msg = ZDO_ConvertOTAClusters( numOutClusters, msg, outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine82 & 0xFFFF
//  851   }
??CrossCallReturnLabel_125:
        MOV     R1,?V7
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP    ??ZDO_ProcessMatchDescReq_8
//  852   else
//  853   {
//  854     numOutClusters = 0;
??ZDO_ProcessMatchDescReq_7:
        MOV     ?V7,#0x0
//  855   }
//  856 
//  857   // First count the number of endpoints that match.
//  858   epDesc = epList;
??ZDO_ProcessMatchDescReq_8:
        MOV     DPTR,#epList
        SJMP    ??ZDO_ProcessMatchDescReq_9
//  859   while ( epDesc )
//  860   {
//  861     // Don't search endpoint 0 and check if response is allowed
//  862     if ( epDesc->epDesc->endPoint != ZDO_EP && (epDesc->flags&eEP_AllowMatch) )
//  863     {
//  864       if ( epDesc->pfnDescCB )
//  865       {
//  866         sDesc = (SimpleDescriptionFormat_t *)epDesc->pfnDescCB( AF_DESCRIPTOR_SIMPLE, epDesc->epDesc->endPoint );
//  867         allocated = TRUE;
//  868       }
//  869       else
//  870       {
//  871         sDesc = epDesc->epDesc->simpleDesc;
//  872         allocated = FALSE;
//  873       }
//  874 
//  875       // Allow specific ProfileId or Wildcard ProfileID
//  876       if ( sDesc && ( ( sDesc->AppProfId == profileID ) || ( profileID == ZDO_WILDCARD_PROFILE_ID ) ) )
//  877       {
//  878         uint8 *uint8Buf = (uint8 *)ZDOBuildBuf;
//  879 
//  880         // Are there matching input clusters?
//  881         if ((ZDO_AnyClusterMatches( numInClusters, inClusters,
//  882                    sDesc->AppNumInClusters, sDesc->pAppInClusterList )) ||
//  883             // Are there matching output clusters?
//  884             (ZDO_AnyClusterMatches( numOutClusters, outClusters,
//  885                    sDesc->AppNumOutClusters, sDesc->pAppOutClusterList )))
//  886         {
//  887           // Notify the endpoint of the match.
//  888           uint8 bufLen = sizeof( ZDO_MatchDescRspSent_t ) + (numOutClusters + numInClusters) * sizeof(uint16);
//  889           ZDO_MatchDescRspSent_t *pRspSent = (ZDO_MatchDescRspSent_t *) osal_msg_allocate( bufLen );
//  890 
//  891           if (pRspSent)
//  892           {
//  893             pRspSent->hdr.event = ZDO_MATCH_DESC_RSP_SENT;
//  894             pRspSent->nwkAddr = inMsg->srcAddr.addr.shortAddr;
//  895             pRspSent->numInClusters = numInClusters;
//  896             pRspSent->numOutClusters = numOutClusters;
//  897 
//  898             if (numInClusters)
//  899             {
//  900               pRspSent->pInClusters = (uint16*) (pRspSent + 1);
//  901               osal_memcpy(pRspSent->pInClusters, inClusters, numInClusters * sizeof(uint16));
//  902             }
//  903             else
//  904             {
//  905               pRspSent->pInClusters = NULL;
//  906             }
//  907 
//  908             if (numOutClusters)
//  909             {
//  910               pRspSent->pOutClusters = (uint16*)(pRspSent + 1) + numInClusters;
//  911               osal_memcpy(pRspSent->pOutClusters, outClusters, numOutClusters * sizeof(uint16));
//  912             }
//  913             else
//  914             {
//  915               pRspSent->pOutClusters = NULL;
??ZDO_ProcessMatchDescReq_10:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  916             }
//  917 
//  918             osal_msg_send( *epDesc->epDesc->task_id, (uint8 *)pRspSent );
??ZDO_ProcessMatchDescReq_11:
        ; Setup parameters for call to function osal_msg_send
        MOV     R2,?V2
        MOV     R3,?V3
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_291:
        MOV     R1,A
        LCALL   `??osal_msg_send::?relay`; Banked call to: osal_msg_send
//  919           }
//  920 
//  921           uint8Buf[epCnt++] = sDesc->EndPoint;
??ZDO_ProcessMatchDescReq_12:
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#ZDOBuildBuf & 0xff
        ADD     A,R0
        MOV     DPL,A
        CLR     A
        ADDC    A,#(ZDOBuildBuf >> 8) & 0xff
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_78:
        INC     A
        MOVX    @DPTR,A
//  922         }
//  923       }
//  924 
//  925       if ( allocated )
??ZDO_ProcessMatchDescReq_13:
        MOV     A,?V9
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_14
//  926       {
//  927         osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V10
        MOV     R3,?V11
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  928       }
//  929     }
//  930     epDesc = epDesc->nextDesc;
??ZDO_ProcessMatchDescReq_14:
        MOV     DPL,?V12
        MOV     DPH,?V13
??ZDO_ProcessMatchDescReq_9:
        MOVX    A,@DPTR
        MOV     ?V12,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V13,A
        MOV     A,?V12
        ORL     A,?V13
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_15 & 0xFFFF
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_289:
        JZ      ??ZDO_ProcessMatchDescReq_14
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_14
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_263:
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        JZ      ??ZDO_ProcessMatchDescReq_16
        ; Setup parameters for indirect call
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_282:
        MOV     R2,A
        MOV     R1,#0x1
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_131:
        LCALL   ?CALL_IND
        MOV     ?V10,R2
        MOV     ?V11,R3
        MOV     ?V9,#0x1
        SJMP    ??ZDO_ProcessMatchDescReq_17
??ZDO_ProcessMatchDescReq_16:
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_132:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V10,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V11,A
        MOV     ?V9,#0x0
??ZDO_ProcessMatchDescReq_17:
        MOV     A,?V10
        ORL     A,?V11
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_ProcessMatchDescReq_18
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_ProcessMatchDescReq_18:
        JZ      ??ZDO_ProcessMatchDescReq_19
        MOV     A,#-0x1
        XRL     A,?V0
        JNZ     ??ZDO_ProcessMatchDescReq_20
        MOV     A,#-0x1
        XRL     A,?V1
??ZDO_ProcessMatchDescReq_20:
        JZ      $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
??ZDO_ProcessMatchDescReq_19:
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_452:
        MOV     R1,?V8
        LCALL   `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_21
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_453:
        MOV     R1,?V7
        LCALL   `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
??ZDO_ProcessMatchDescReq_21:
        ; Setup parameters for call to function osal_msg_allocate
        MOV     A,?V7
        ADD     A,?V8
        CLR     C
        RLC     A
        ADD     A,#0xa
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2e
        MOVX    @DPTR,A
        MOV     DPL,?V14
        MOV     DPH,?V15
        LCALL   ??Subroutine194_0 & 0xFFFF
??CrossCallReturnLabel_426:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_25:
        INC     DPTR
        MOV     A,?V8
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_8:
        MOV     A,?V7
        MOVX    @DPTR,A
        MOV     A,?V8
        JZ      ??ZDO_ProcessMatchDescReq_22
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_360:
        ADDC    A,?V3
        MOV     R3,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_65:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_103:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,?V8
        MOV     A,R4
        ADD     A,R4
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        SJMP    ??ZDO_ProcessMatchDescReq_23
??ZDO_ProcessMatchDescReq_22:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
??ZDO_ProcessMatchDescReq_23:
        MOV     A,?V7
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_10 & 0xFFFF
        MOV     R0,?V8
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_202:
        MOV     A,?V2
        ADD     A,R0
        MOV     R0,A
        MOV     A,?V3
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        LCALL   ??Subroutine185_0 & 0xFFFF
??CrossCallReturnLabel_357:
        ADDC    A,R1
        MOV     R3,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_235:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine69 & 0xFFFF
//  931   }
??CrossCallReturnLabel_104:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,?V7
        MOV     A,R4
        ADD     A,R4
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        LJMP    ??ZDO_ProcessMatchDescReq_11 & 0xFFFF
//  932 
//  933   if ( epCnt )
??ZDO_ProcessMatchDescReq_15:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessMatchDescReq_24
//  934   {
//  935     // Send the message if at least one match found.
//  936     if ( ZSuccess == ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  937               ZDAppNwkAddr.addr.shortAddr, epCnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse ) )
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_246:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0,#ZDOBuildBuf & 0xff
        MOV     ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_242:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_120:
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_25
//  938     {
//  939 #if defined( LCD_SUPPORTED )
//  940       HalLcdWriteScreen( "Match Desc Req", "Rsp Sent" );
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "Rsp Sent">` & 0xff
        MOV     R5,#(`?<Constant "Rsp Sent">` >> 8) & 0xff
        SJMP    ??ZDO_ProcessMatchDescReq_26
//  941 #endif
//  942     }
//  943   }
//  944   else
//  945   {
//  946     // No match found
//  947     if (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi))
??ZDO_ProcessMatchDescReq_24:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_27
//  948     {
//  949       // send response message with match length = 0
//  950       ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  951                         ZDAppNwkAddr.addr.shortAddr, 0, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_247:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0,#ZDOBuildBuf & 0xff
        MOV     ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_121:
        LCALL   `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  952 #if defined( LCD_SUPPORTED )
//  953       HalLcdWriteScreen( "Match Desc Req", "Rsp Non Matched" );
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "Rsp Non Matched">` & 0xff
        MOV     R5,#(`?<Constant "Rsp Non Matched">` >> 8) & 0xff
        SJMP    ??ZDO_ProcessMatchDescReq_26
//  954 #endif
//  955     }
//  956     else
//  957     {
//  958       // no response mesage for broadcast message
//  959 #if defined( LCD_SUPPORTED )
//  960       HalLcdWriteScreen( "Match Desc Req", "Non Matched" );
??ZDO_ProcessMatchDescReq_27:
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "Non Matched">` & 0xff
        MOV     R5,#(`?<Constant "Non Matched">` >> 8) & 0xff
??ZDO_ProcessMatchDescReq_26:
        MOV     R2,#`?<Constant "Match Desc Req">` & 0xff
        MOV     R3,#(`?<Constant "Match Desc Req">` >> 8) & 0xff
        LCALL   `??HalLcdWriteScreen::?relay`; Banked call to: HalLcdWriteScreen
//  961 #endif
//  962     }
//  963   }
//  964 
//  965   if ( inClusters != NULL )
??ZDO_ProcessMatchDescReq_25:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_264:
        JZ      ??ZDO_ProcessMatchDescReq_28
//  966   {
//  967     osal_mem_free( inClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine199_0 & 0xFFFF
//  968   }
??CrossCallReturnLabel_454:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  969 
//  970   if ( outClusters != NULL )
??ZDO_ProcessMatchDescReq_28:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_265:
        JZ      ??ZDO_ProcessMatchDescReq_3
//  971   {
//  972     osal_mem_free( outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine199_0 & 0xFFFF
//  973   }
??CrossCallReturnLabel_455:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  974 }
??ZDO_ProcessMatchDescReq_3:
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock27

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine133:
          CFI Block cfiCond28 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_201
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond29 Using cfiCommon0
          CFI (cfiCond29) Function ZDO_AnyClusterMatches
          CFI (cfiCond29) Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_133
          CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond29) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond29) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond29) CFA_SP SP+-4
          CFI (cfiCond29) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond30 Using cfiCommon0
          CFI (cfiCond30) Function ZDO_ConvertOTAClusters
          CFI (cfiCond30) Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_134
          CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond30) CFA_SP SP+-4
          CFI (cfiCond30) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond31 Using cfiCommon0
          CFI (cfiCond31) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond31) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond31) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond31) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond31) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond31) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond31) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond31) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond31) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond31) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond31) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond31) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond31) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond31) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond31) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond31) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond31) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond31) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond31) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond31) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond31) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond31) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond31) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond31) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond31) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond31) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond31) CFA_SP SP+-2
          CFI (cfiCond31) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond32 Using cfiCommon0
          CFI (cfiCond32) Function ZDO_ParseAddrRsp
          CFI (cfiCond32) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond32) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond32) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond32) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond32) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond32) CFA_SP SP+-2
          CFI (cfiCond32) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker33 Using cfiCommon1
          CFI (cfiPicker33) NoFunction
          CFI (cfiPicker33) Picker
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        RET
          CFI EndBlock cfiCond28
          CFI EndBlock cfiCond29
          CFI EndBlock cfiCond30
          CFI EndBlock cfiCond31
          CFI EndBlock cfiCond32
          CFI EndBlock cfiPicker33

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond34 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond35) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond35) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond35) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond35) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond35) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond35) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond35) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond35) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond35) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond35) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond35) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+-2
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker36 Using cfiCommon1
          CFI (cfiPicker36) NoFunction
          CFI (cfiPicker36) Picker
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_292:
        RET
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiPicker36

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine131:
          CFI Block cfiCond37 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_132
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond38) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond38) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond38) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond38) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond38) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond38) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond38) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond38) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond38) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond38) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond38) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond38) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+-4
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function ZDO_UpdateNwkStatus
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-4
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond40) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond40) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond40) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond40) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond40) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond40) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond40) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-4
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function ZDO_UpdateNwkStatus
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_288
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+-4
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond42 Using cfiCommon0
          CFI (cfiCond42) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond42) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_289
          CFI (cfiCond42) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond42) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond42) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond42) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond42) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond42) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond42) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond42) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond42) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond42) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond42) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond42) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond42) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond42) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond42) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond42) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond42) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond42) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond42) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond42) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond42) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond42) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond42) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond42) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond42) CFA_SP SP+-4
          CFI (cfiCond42) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_282
          CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond43) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond43) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond43) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond43) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond43) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond43) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond43) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond43) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond43) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond43) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond43) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond43) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond43) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond43) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond43) CFA_SP SP+-4
          CFI (cfiCond43) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_283
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond44) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond44) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond44) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond44) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond44) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond44) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond44) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-4
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_284
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-4
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_285
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond46) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-4
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_286
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+-4
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_287
          CFI (cfiCond48) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond48) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond48) CFA_SP SP+-9
          CFI Block cfiPicker49 Using cfiCommon1
          CFI (cfiPicker49) NoFunction
          CFI (cfiPicker49) Picker
        LCALL   ??Subroutine163_0 & 0xFFFF
??CrossCallReturnLabel_439:
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiPicker49

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond50 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_124
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond51) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond51) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond51) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond51) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond51) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond51) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond51) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond51) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond51) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond51) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond51) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond51) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+-2
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker52 Using cfiCommon1
          CFI (cfiPicker52) NoFunction
          CFI (cfiPicker52) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R2,?V2
        MOV     R3,?V3
        RET
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiPicker52

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond53 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_119
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-2
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond55) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond55) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond55) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond55) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond55) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond55) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond55) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-2
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker56 Using cfiCommon1
          CFI (cfiPicker56) NoFunction
          CFI (cfiPicker56) Picker
        MOV     A,?V14
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V15
        MOV     R5,A
        MOV     A,?V14
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_227:
        ADDC    A,?V15
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R2,#0x6
        MOV     R3,#-0x80
        RET
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiPicker56

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond57 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_103
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond58) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond58) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond58) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond58) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond58) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond58) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond58) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond58) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond58) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond58) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond58) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-2
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker59 Using cfiCommon1
          CFI (cfiPicker59) NoFunction
          CFI (cfiPicker59) Picker
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiPicker59

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond60 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_233
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond61) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-2
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond62) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond62) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond62) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond62) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-2
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+-2
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-2
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker65 Using cfiCommon1
          CFI (cfiPicker65) NoFunction
          CFI (cfiPicker65) Picker
        MOV     A,R2
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiPicker65
        REQUIRE ??Subroutine156_0
        ; // Fall through to label ??Subroutine156_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine156_0:
          CFI Block cfiCond66 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_232
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function ZDO_UpdateNwkStatus
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+-2
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond68) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond68) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond68) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond68) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond69) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond69) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond69) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond69) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond69) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond69) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond69) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond69) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond69) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond69) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+-2
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond70 Using cfiCommon0
          CFI (cfiCond70) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond70) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond70) CFA_SP SP+-2
          CFI (cfiCond70) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-2
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker72 Using cfiCommon1
          CFI (cfiPicker72) NoFunction
          CFI (cfiPicker72) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiPicker72
//  975 
//  976 #if defined ( REFLECTOR )
//  977 /*********************************************************************
//  978  * @fn      ZDO_ProcessBindUnbindReq()
//  979  *
//  980  * @brief   Called to process a Bind or Unbind Request message.
//  981  *
//  982  * @param   inMsg  - incoming message (request)
//  983  * @param   pReq - place to put parsed information
//  984  *
//  985  * @return  none
//  986  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  987 void ZDO_ProcessBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ProcessBindUnbindReq:
          CFI Block cfiBlock73 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
        CODE
//  988 {
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_LookupNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_GetEmptyPendingBindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, bindAddrIndexGet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_NwkAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_BindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_UnBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  989   zAddrType_t SourceAddr;       // Binding Source addres
//  990   byte bindStat;
//  991 
//  992   SourceAddr.addrMode = Addr64Bit;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//  993   osal_cpyExtAddr( SourceAddr.addr.extAddr, pReq->srcAddress );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  994 
//  995   // If the local device is not the primary binding cache
//  996   // check the src address of the bind request.
//  997   // If it is not the local device's extended address
//  998   // discard the request.
//  999   if ( !osal_ExtAddrEqual( SourceAddr.addr.extAddr, NLME_GetExtAddr()) ||
// 1000         (pReq->dstAddress.addrMode != Addr64Bit &&
// 1001          pReq->dstAddress.addrMode != AddrGroup) )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R4,?V2
        MOV     R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessBindUnbindReq_0
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_141:
        JZ      ??ZDO_ProcessBindUnbindReq_1
        MOVX    A,@DPTR
        XRL     A,#0x1
        JZ      ??ZDO_ProcessBindUnbindReq_1
// 1002   {
// 1003     bindStat = ZDP_NOT_SUPPORTED;
??ZDO_ProcessBindUnbindReq_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1004   }
// 1005   else
// 1006   {
// 1007     // Check source & destination endpoints
// 1008     if ( (pReq->srcEndpoint == 0 || pReq->srcEndpoint > MAX_ENDPOINTS)
// 1009         || (( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1010             (pReq->dstEndpoint == 0 || pReq->dstEndpoint > MAX_ENDPOINTS)) )
??ZDO_ProcessBindUnbindReq_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessBindUnbindReq_3
        CPL     A
        JZ      ??ZDO_ProcessBindUnbindReq_3
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_142:
        JNZ     ??ZDO_ProcessBindUnbindReq_4
        MOV     A,R6
        ADD     A,#0x14
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_330:
        JZ      ??ZDO_ProcessBindUnbindReq_3
        CPL     A
        JNZ     ??ZDO_ProcessBindUnbindReq_4
// 1011     {
// 1012       bindStat = ZDP_INVALID_EP;
??ZDO_ProcessBindUnbindReq_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7e
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1013     }
// 1014     else
// 1015     {
// 1016       if ( inMsg->clusterID == Bind_req )
??ZDO_ProcessBindUnbindReq_4:
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_376:
        MOVX    A,@DPTR
        XRL     A,#0x21
        JNZ     ??ZDO_ProcessBindUnbindReq_5
        INC     DPTR
        MOVX    A,@DPTR
??ZDO_ProcessBindUnbindReq_5:
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_6 & 0xFFFF
// 1017       {
// 1018         // Assume the table is full
// 1019         bindStat = ZDP_TABLE_FULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x74
        LCALL   ?Subroutine29 & 0xFFFF
// 1020 
// 1021 #if defined( APP_TP ) || defined( APP_TP2 )
// 1022         // For ZigBee Conformance Testing
// 1023         if ( bindNumOfEntries() < gNWK_MAX_BINDING_ENTRIES )
// 1024 #endif
// 1025         {
// 1026 #if !defined ( ZDP_BIND_SKIP_VALIDATION )
// 1027           uint16 nwkAddr;
// 1028 
// 1029           // Verifies that a valid NWK address exists for the device
// 1030           // before creating a Binding entry. If NWK address does not
// 1031           // exist the request is sent out and the BindReq is saved, to
// 1032           // create the Bind Entry once the NwkAddrRsp is received
// 1033           if ( ( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1034                ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE ) )
??CrossCallReturnLabel_37:
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_7 & 0xFFFF
        ; Setup parameters for call to function APSME_LookupNwkAddr
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP102_8
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_165:
        LCALL   `??APSME_LookupNwkAddr::?relay`; Banked call to: APSME_LookupNwkAddr
        MOV     A,R1
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_7 & 0xFFFF
// 1035           {
// 1036             // find an empty bind slot in the pending Bind Req list
// 1037             ZDO_PendingBindReq_t *pPendingBind;
// 1038 
// 1039             if ( ( pPendingBind = ZDApp_GetEmptyPendingBindReq() ) != NULL )
        ; Setup parameters for call to function ZDApp_GetEmptyPendingBindReq
        LCALL   `??ZDApp_GetEmptyPendingBindReq::?relay`; Banked call to: ZDApp_GetEmptyPendingBindReq
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_8 & 0xFFFF
// 1040             {
// 1041               // copy the received request into the empty slot and all required info
// 1042               osal_memcpy( &(pPendingBind->bindReq), pReq, sizeof( ZDO_BindUnbindReq_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,R6
        MOV     ?V5,R7
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R4,#0x15
        MOV     R5,#0x0
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1043 
// 1044               pPendingBind->srcAddr = inMsg->srcAddr;
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        MOV     A,?V2
        ADD     A,#0x15
        MOV     R4,A
        CLR     A
        ADDC    A,?V3
        MOV     R5,A
        MOV     A,#0x9
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1045               pPendingBind->securityUse = inMsg->SecurityUse;
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_163:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V2
        ADD     A,#0x1e
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine24 & 0xFFFF
// 1046               pPendingBind->transSeq = inMsg->TransSeq;
??CrossCallReturnLabel_28:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V2
        ADD     A,#0x1f
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1047               pPendingBind->age = MAX_TIME_ADDR_REQ;
        MOV     A,?V2
        ADD     A,#0x20
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        MOV     A,#0x5
        MOVX    @DPTR,A
// 1048 
// 1049               // create an entry in Address Manager
// 1050               ( void )bindAddrIndexGet( &(pReq->dstAddress) );
        MOV     A,R6
        ADD     A,#0xb
        MOV     R6,A
        JNC     ??ZDO_ProcessBindUnbindReq_9
        INC     R7
??ZDO_ProcessBindUnbindReq_9:
        ; Setup parameters for call to function bindAddrIndexGet
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??bindAddrIndexGet::?relay`; Banked call to: bindAddrIndexGet
// 1051 
// 1052               ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
        ; Setup parameters for call to function ZDP_NwkAddrReq
        MOV     R5,#0x0
        MOV     R4,#0x0
        MOV     R1,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??ZDP_NwkAddrReq::?relay`; Banked call to: ZDP_NwkAddrReq
// 1053 
// 1054               osal_start_timerEx( ZDAppTaskID, ZDO_PENDING_BIND_REQ_EVT,
// 1055                                   AGE_OUT_PEND_BIND_REQ_DELAY );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_3e8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R2,#0x0
        MOV     R3,#0x10
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1056               return;
        SJMP    ??ZDO_ProcessBindUnbindReq_10
// 1057             }
// 1058           }
// 1059           // Add Bind entry
// 1060           else if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1061                                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_7:
        ; Setup parameters for call to function APSME_BindRequest
        LCALL   ?Subroutine102 & 0xFFFF
// 1062           {
// 1063             // valid entry
// 1064             bindStat = ZDP_SUCCESS;
// 1065 
// 1066             // Notify to save info into NV
// 1067             ZDApp_NVUpdate();
// 1068           }
// 1069 #else // ZDP_BIND_SKIP_VALIDATION  is defined
// 1070           // Create binding entry first independently of existance of  valid NWK addres
// 1071           // if NWK address does not exist a request is sent out
// 1072           if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1073                          &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
// 1074           {
// 1075             uint16 nwkAddr;
// 1076 
// 1077             // valid entry
// 1078             bindStat = ZDP_SUCCESS;
// 1079 
// 1080             // Notify to save info into NV
// 1081             ZDApp_NVUpdate();
// 1082 
// 1083             // Check for the destination address
// 1084             if ( pReq->dstAddress.addrMode == Addr64Bit )
// 1085             {
// 1086               if ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE )
// 1087               {
// 1088                 ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
// 1089               }
// 1090             }
// 1091           }
// 1092 #endif
// 1093         }
// 1094       }
??CrossCallReturnLabel_153:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_89:
        LCALL   `??APSME_BindRequest::?relay`; Banked call to: APSME_BindRequest
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_8
        SJMP    ??ZDO_ProcessBindUnbindReq_11
// 1095       else // Unbind_req
// 1096       {
// 1097         if ( APSME_UnBindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1098                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_6:
        ; Setup parameters for call to function APSME_UnBindRequest
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_154:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_90:
        LCALL   `??APSME_UnBindRequest::?relay`; Banked call to: APSME_UnBindRequest
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_12
// 1099         {
// 1100           bindStat = ZDP_SUCCESS;
??ZDO_ProcessBindUnbindReq_11:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1101 
// 1102           // Notify to save info into NV
// 1103           ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
        SJMP    ??ZDO_ProcessBindUnbindReq_8
// 1104         }
// 1105         else
// 1106           bindStat = ZDP_NO_ENTRY;
??ZDO_ProcessBindUnbindReq_12:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
??ZDO_ProcessBindUnbindReq_2:
        MOVX    @DPTR,A
// 1107       }
// 1108     }
// 1109   }
// 1110 
// 1111   // Send back a response message
// 1112   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr),
// 1113                (inMsg->clusterID | ZDO_RESPONSE_BIT), 1, &bindStat,
// 1114                inMsg->SecurityUse );
??ZDO_ProcessBindUnbindReq_8:
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_164:
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,?V0
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_240:
        ORL     A,#0x80
        MOV     ?V3,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_155:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1115 }
??ZDO_ProcessBindUnbindReq_10:
        MOV     A,#0xc
          CFI EndBlock cfiBlock73
        REQUIRE ?Subroutine10
        ; // Fall through to label ?Subroutine10

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiBlock74 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Valid
        SJMP    ??Subroutine160_0
          CFI EndBlock cfiBlock74

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond75 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_163
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_SP SP+-2
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker77 Using cfiCommon1
          CFI (cfiPicker77) NoFunction
          CFI (cfiPicker77) Picker
        MOV     A,?V0
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_306:
        ADDC    A,?V1
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiPicker77

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond78 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_153
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-2
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker80 Using cfiCommon1
          CFI (cfiPicker80) NoFunction
          CFI (cfiPicker80) Picker
        MOV     A,R6
        ADD     A,#0x14
        LCALL   ??Subroutine158_0 & 0xFFFF
??CrossCallReturnLabel_341:
        MOV     ?V2,A
        MOV     R0,#?V2
        RET
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiPicker80

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond81 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_141
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-2
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker83 Using cfiCommon1
          CFI (cfiPicker83) NoFunction
          CFI (cfiPicker83) Picker
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_343:
        XRL     A,#0x3
        RET
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiPicker83

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond84 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_239
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond85) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_SP SP+-2
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond86) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond86) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond86) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+-2
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker87 Using cfiCommon1
          CFI (cfiPicker87) NoFunction
          CFI (cfiPicker87) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiPicker87
        REQUIRE ??Subroutine157_0
        ; // Fall through to label ??Subroutine157_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine157_0:
          CFI Block cfiCond88 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_238
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond89) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond89) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond89) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond89) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond89) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond89) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond89) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+-2
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+-2
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-2
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker92 Using cfiCommon1
          CFI (cfiPicker92) NoFunction
          CFI (cfiPicker92) Picker
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiPicker92

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond93 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond94) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+-2
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker95 Using cfiCommon1
          CFI (cfiPicker95) NoFunction
          CFI (cfiPicker95) Picker
        MOV     A,R6
        ADD     A,#0xb
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_478:
        MOV     R3,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiPicker95

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond96 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_36
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+-2
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker98 Using cfiCommon1
          CFI (cfiPicker98) NoFunction
          CFI (cfiPicker98) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_342:
        RET
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiPicker98

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine135:
          CFI Block cfiCond99 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_141
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_142
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond100) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+-4
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_36
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-4
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_37
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond102) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond102) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+-4
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker103 Using cfiCommon1
          CFI (cfiPicker103) NoFunction
          CFI (cfiPicker103) Picker
        MOV     A,R6
        ADD     A,#0x13
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiPicker103
        REQUIRE ??Subroutine158_0
        ; // Fall through to label ??Subroutine158_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine158_0:
          CFI Block cfiCond104 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_153
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_154
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond105) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond105) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+-4
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_113
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+-4
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_114
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+-4
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_335
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-4
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_336
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-4
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function ZDO_ProcessUserDescReq
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_337
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-4
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_329
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-4
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_330
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-4
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_331
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-4
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_332
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-4
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_333
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-4
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function ZDO_ParseAddrRsp
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_334
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-4
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_38
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-4
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_39
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+-4
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_141
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond119) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond119) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+-4
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_142
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-4
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_36
          CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond121) CFA_SP SP+-4
          CFI (cfiCond121) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_37
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond122) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond122) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+-4
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker123 Using cfiCommon1
          CFI (cfiPicker123) NoFunction
          CFI (cfiPicker123) Picker
        MOV     DPL,A
        CLR     A
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiPicker123
        REQUIRE ??Subroutine159_0
        ; // Fall through to label ??Subroutine159_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine159_0:
          CFI Block cfiCond124 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_86
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-4
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_153
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-4
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_154
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-4
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_113
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-4
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_114
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-4
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_335
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond130) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+-4
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_336
          CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond131) CFA_SP SP+-4
          CFI (cfiCond131) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function ZDO_ProcessUserDescReq
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_337
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-4
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_329
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-4
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_330
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+-4
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_331
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-4
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_332
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-4
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_333
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+-4
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function ZDO_ParseAddrRsp
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_334
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond138) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+-4
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_38
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-4
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_39
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+-4
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_141
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-4
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_142
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-4
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_36
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+-4
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_37
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond144) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond144) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+-4
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker145 Using cfiCommon1
          CFI (cfiPicker145) NoFunction
          CFI (cfiPicker145) Picker
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiPicker145

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock146 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
          CFI EndBlock cfiBlock146
        REQUIRE ??Subroutine160_0
        ; // Fall through to label ??Subroutine160_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine160_0:
          CFI Block cfiBlock147 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock147
// 1116 #endif // REFLECTOR
// 1117 
// 1118 /*********************************************************************
// 1119  * @fn      ZDO_UpdateAddrManager
// 1120  *
// 1121  * @brief   Update the Address Manager.
// 1122  *
// 1123  * @param   nwkAddr - network address
// 1124  * @param   extAddr - extended address
// 1125  *
// 1126  * @return  none
// 1127  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1128 void ZDO_UpdateAddrManager( uint16 nwkAddr, uint8 *extAddr )
ZDO_UpdateAddrManager:
          CFI Block cfiBlock148 Using cfiCommon0
          CFI Function ZDO_UpdateAddrManager
        CODE
// 1129 {
        FUNCALL ZDO_UpdateAddrManager, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateAddrManager, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 13
        MOV     A,#-0xd
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1130   AddrMgrEntry_t addrEntry;
// 1131 
// 1132   // Update the address manager
// 1133   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1134   addrEntry.nwkAddr = nwkAddr;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine42 & 0xFFFF
// 1135   AddrMgrExtAddrSet( addrEntry.extAddr, extAddr );
??CrossCallReturnLabel_66:
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 1136   AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 1137 }
        MOV     A,#0xd
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock148

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond149 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond150) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond150) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond150) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond150) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond150) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond150) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond150) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-2
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ZDO_UpdateAddrManager
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond151) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond151) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond151) CFA_SP SP+-7
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker152 Using cfiCommon1
          CFI (cfiPicker152) NoFunction
          CFI (cfiPicker152) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x3
        RET
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiPicker152
// 1138 
// 1139 /*********************************************************************
// 1140  * @fn      ZDO_ProcessServerDiscReq
// 1141  *
// 1142  * @brief   Process the Server_Discovery_req message.
// 1143  *
// 1144  * @param   inMsg  - incoming message (request)
// 1145  *
// 1146  * @return  none
// 1147  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1148 void ZDO_ProcessServerDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessServerDiscReq:
          CFI Block cfiBlock153 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
        CODE
// 1149 {
        FUNCALL ZDO_ProcessServerDiscReq, ZDP_ServerDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine73 & 0xFFFF
// 1150   uint16 serverMask = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
// 1151   uint16 matchMask = serverMask & ZDO_Config_Node_Descriptor.ServerMask;
??CrossCallReturnLabel_109:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        MOV     DPTR,#ZDO_Config_Node_Descriptor + 8
        MOVX    A,@DPTR
        ANL     A,R0
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,R1
        MOV     ?V1,A
// 1152 
// 1153   if ( matchMask )
        MOV     A,?V0
        ORL     A,?V1
        JZ      ??ZDO_ProcessServerDiscReq_0
// 1154   {
// 1155     ZDP_ServerDiscRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSUCCESS,
// 1156                 ZDAppNwkAddr.addr.shortAddr, matchMask, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_ServerDiscRsp
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine103 & 0xFFFF
// 1157   }
??CrossCallReturnLabel_336:
        MOV     R5,A
        MOV     R4,#0x0
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_148:
        LCALL   `??ZDP_ServerDiscRsp::?relay`; Banked call to: ZDP_ServerDiscRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1158 }
??ZDO_ProcessServerDiscReq_0:
        LJMP    ??Subroutine155_0 & 0xFFFF
          CFI EndBlock cfiBlock153
// 1159 
// 1160 #if defined ( ZIGBEE_CHILD_AGING )
// 1161 /*********************************************************************
// 1162  * @fn          ZDO_ProcessEndDeviceTimeoutReq
// 1163  *
// 1164  * @brief       This function processes and responds to the
// 1165  *              End_Device_Timeout_Req message.
// 1166  *
// 1167  * @param       inMsg  - incoming message (request)
// 1168  *
// 1169  * @return      none
// 1170  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1171 void ZDO_ProcessEndDeviceTimeoutReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessEndDeviceTimeoutReq:
          CFI Block cfiBlock154 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
        CODE
// 1172 {
        FUNCALL ZDO_ProcessEndDeviceTimeoutReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1173   uint8 stat = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1174   uint8 *ieee = NULL;
// 1175   uint16 reqTimeout;
// 1176 
// 1177   // Only process this message if Child Table Management is enabled OR
// 1178   // If message was broadcast OR multicast OR
// 1179   // if the NWK src and the MAC src are not the same) drop message
// 1180   if ( ( zgChildAgingEnable == FALSE ) ||
// 1181        ( inMsg->wasBroadcast == TRUE ) ||
// 1182        ( inMsg->srcAddr.addr.shortAddr != inMsg->macSrcAddr ) )
        MOV     DPTR,#zgChildAgingEnable
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_0
        MOV     A,R2
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,#0x1
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_0
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine194_0 & 0xFFFF
??CrossCallReturnLabel_427:
        MOV     A,R2
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessEndDeviceTimeoutReq_1
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessEndDeviceTimeoutReq_1:
        JNZ     ??ZDO_ProcessEndDeviceTimeoutReq_0
// 1183   {
// 1184     // the message does not come from a child, drop it
// 1185     return;
// 1186   }
// 1187 
// 1188   ieee = inMsg->asdu;
// 1189 
// 1190   reqTimeout = BUILD_UINT16( inMsg->asdu[Z_EXTADDR_LEN], inMsg->asdu[Z_EXTADDR_LEN+1] );
// 1191 
// 1192   if ( ( ( reqTimeout < ZDO_MIN_REQ_TIMEOUT ) || ( reqTimeout > ZDO_MAX_REQ_TIMEOUT ) ) ||
// 1193        ( ZSTACK_END_DEVICE_BUILD ) )
// 1194   {
// 1195     stat = ZDP_INVALID_REQTYPE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x80
        LCALL   ?Subroutine31 & 0xFFFF
// 1196   }
// 1197   else
// 1198   {
// 1199     associated_devices_t *pAssoc;
// 1200 
// 1201     if ( ( ( pAssoc = AssocGetWithExt( ieee ) ) != NULL ) &&
// 1202          ( ( pAssoc->nodeRelation >= CHILD_RFD ) &&
// 1203            ( pAssoc->nodeRelation <= CHILD_RFD_RX_IDLE ) ) )
// 1204     {
// 1205       pAssoc->timeoutCounter = reqTimeout;
// 1206       pAssoc->endDevKaTimeout = reqTimeout;
// 1207 
// 1208       // Set event to save NV
// 1209       ZDApp_NVUpdate();
// 1210     }
// 1211     else
// 1212     {
// 1213       stat = ZDP_DEVICE_NOT_FOUND;
// 1214     }
// 1215 
// 1216   }
// 1217 
// 1218   ZDP_EndDeviceTimeoutRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
// 1219                            inMsg->SecurityUse );
??CrossCallReturnLabel_40:
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x1f
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     R1,#0x1
        MOV     A,R2
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R3
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0xf
        MOV     R2,A
        JNC     ??ZDO_ProcessEndDeviceTimeoutReq_2
        INC     R3
??ZDO_ProcessEndDeviceTimeoutReq_2:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1220 }
??ZDO_ProcessEndDeviceTimeoutReq_0:
          CFI EndBlock cfiBlock154
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock155 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        LJMP    ??Subroutine154_0 & 0xFFFF
          CFI EndBlock cfiBlock155
// 1221 #endif // ZIGBEE_CHILD_AGING
// 1222 
// 1223 /*********************************************************************
// 1224  * Call Back Functions from APS  - API
// 1225  */
// 1226 
// 1227 /*********************************************************************
// 1228  * @fn          ZDO_EndDeviceTimeoutCB
// 1229  *
// 1230  * @brief       This function handles the binding timer for the End
// 1231  *              Device Bind command.
// 1232  *
// 1233  * @param       none
// 1234  *
// 1235  * @return      none
// 1236  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1237 void ZDO_EndDeviceTimeoutCB( void )
ZDO_EndDeviceTimeoutCB:
          CFI Block cfiBlock156 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
        CODE
// 1238 {
        FUNCALL ZDO_EndDeviceTimeoutCB, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1239 #if defined ( REFLECTOR )
// 1240   byte stat;
// 1241   if ( ZDO_EDBind )
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_266:
        JNZ     $+5
        LJMP    ??ZDO_EndDeviceTimeoutCB_0 & 0xFFFF
// 1242   {
// 1243     stat = ZDO_EDBind->status;
// 1244 
// 1245     // Send the response message to the first sent
// 1246     ZDO_SendEDBindRsp( ZDO_EDBind->SrcTransSeq, &(ZDO_EDBind->SrcAddr),
// 1247                         stat, ZDO_EDBind->SecurityUse );
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_80:
        MOV     DPH,A
        MOV     DPL,R0
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_79:
        XCH     A,R0
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_243:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R1,#0x1
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        ADD     A,R1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        ; Setup parameters for call to function HalLcdWriteString
        MOV     R1,#0x1
        MOV     R2,#`?<Constant "End Device Bind">` & 0xff
        MOV     R3,#(`?<Constant "End Device Bind">` >> 8) & 0xff
        LCALL   `??HalLcdWriteString::?relay`; Banked call to: HalLcdWriteString
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R1,#0x2
        JNZ     ??ZDO_EndDeviceTimeoutCB_1
        ; Setup parameters for call to function HalLcdWriteString
        MOV     R2,#`?<Constant "Success Sent">` & 0xff
        MOV     R3,#(`?<Constant "Success Sent">` >> 8) & 0xff
        SJMP    ??ZDO_EndDeviceTimeoutCB_2
??ZDO_EndDeviceTimeoutCB_1:
        ; Setup parameters for call to function HalLcdWriteString
        MOV     R2,#`?<Constant "Timeout">` & 0xff
        MOV     R3,#(`?<Constant "Timeout">` >> 8) & 0xff
??ZDO_EndDeviceTimeoutCB_2:
        LCALL   `??HalLcdWriteString::?relay`; Banked call to: HalLcdWriteString
// 1248 
// 1249     ZDO_RemoveEndDeviceBind();
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_267:
        JZ      ??ZDO_EndDeviceTimeoutCB_0
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_117:
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_268:
        JZ      ??ZDO_EndDeviceTimeoutCB_3
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_456:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_3:
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_97:
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_269:
        JZ      ??ZDO_EndDeviceTimeoutCB_4
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_98:
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_457:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_4:
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_458:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1250   }
// 1251 #endif  // REFLECTOR
// 1252 }
??ZDO_EndDeviceTimeoutCB_0:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock156

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond157 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_117
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+-2
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker159 Using cfiCommon1
          CFI (cfiPicker159) NoFunction
          CFI (cfiPicker159) Picker
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x10
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiPicker159

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond160 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_245
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond161) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond161) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-2
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond162) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond162) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond162) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond162) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond162) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+-2
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker163 Using cfiCommon1
          CFI (cfiPicker163) NoFunction
          CFI (cfiPicker163) Picker
        MOV     A,?V14
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_305:
        ADDC    A,?V15
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiPicker163
        REQUIRE ??Subroutine161_0
        ; // Fall through to label ??Subroutine161_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine161_0:
          CFI Block cfiCond164 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_243
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDO_ProcessUserDescSet
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+-2
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond166) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond166) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond166) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond166) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond166) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+-2
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-2
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond168) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond168) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond168) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond168) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond168) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+-2
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker169 Using cfiCommon1
          CFI (cfiPicker169) NoFunction
          CFI (cfiPicker169) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiPicker169
        REQUIRE ??Subroutine162_0
        ; // Fall through to label ??Subroutine162_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine162_0:
          CFI Block cfiCond170 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_242
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-2
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function ZDO_ProcessUserDescSet
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-2
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-2
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond174) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond174) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond174) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+-2
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-2
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker176 Using cfiCommon1
          CFI (cfiPicker176) NoFunction
          CFI (cfiPicker176) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiPicker176

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond177 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_97
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+-2
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker179 Using cfiCommon1
          CFI (cfiPicker179) NoFunction
          CFI (cfiPicker179) Picker
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_438:
        XCH     A,R0
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_308:
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiPicker179

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond180 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-2
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker182 Using cfiCommon1
          CFI (cfiPicker182) NoFunction
          CFI (cfiPicker182) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_437:
        RET
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiPicker182

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine148:
          CFI Block cfiCond183 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_97
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_98
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-4
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_80
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-4
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_79
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+-4
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker187 Using cfiCommon1
          CFI (cfiPicker187) NoFunction
          CFI (cfiPicker187) Picker
        MOV     DPTR,#ZDO_EDBind
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiPicker187
        REQUIRE ??Subroutine163_0
        ; // Fall through to label ??Subroutine163_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine163_0:
          CFI Block cfiCond188 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_132
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond189) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond189) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond189) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond189) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond189) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond189) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond189) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond189) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond189) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond189) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond189) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+-6
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function ZDO_UpdateNwkStatus
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_290
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+-6
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_291
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-6
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function ZDO_UpdateNwkStatus
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_288
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-6
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_289
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond193) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond193) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond193) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-6
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_282
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-6
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_283
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond195) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond195) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond195) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond195) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond195) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-6
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_284
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-6
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_285
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond197) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond197) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-6
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_286
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-6
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_287
          CFI (cfiCond199) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond199) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond199) CFA_SP SP+-11
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_81
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-6
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_82
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-6
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_87
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+-6
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ZDO_ProcessUserDescReq
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_88
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-6
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function ZDO_ParseAddrRsp
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-2
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_272
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-6
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_273
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-6
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_261
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond207) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond207) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-6
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_262
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond208) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond208) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond208) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond208) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond208) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond208) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-6
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_263
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond209) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond209) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond209) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond209) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-6
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_264
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-6
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_265
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+-6
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_266
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+-6
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_267
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-6
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_268
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-6
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_269
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-6
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_270
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-6
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_271
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-6
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_16
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-6
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_17
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-6
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_431, ??CrossCallReturnLabel_54
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond220) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond220) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond220) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond220) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond220) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond220) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond220) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+-6
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_431, ??CrossCallReturnLabel_55
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-6
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_428
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-6
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_429
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-6
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_426
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond224) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond224) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond224) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond224) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond224) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond224) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond224) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond224) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond224) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond224) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond224) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-6
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_427
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-6
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function ZDO_AnyClusterMatches
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_418
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+-6
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_419
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond227) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond227) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond227) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+-6
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_420
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-6
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_421
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-6
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_422
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+-6
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_423
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+-6
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_424
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-6
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function ZDO_ParseUserDescRsp
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_425
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-6
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function ZDO_UpdateNwkStatus
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_432, ??CrossCallReturnLabel_129
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-6
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_432, ??CrossCallReturnLabel_130
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+-6
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_97
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+-4
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_438, ??CrossCallReturnLabel_98
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+-4
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_80
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+-4
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_79
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-4
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker240 Using cfiCommon1
          CFI (cfiPicker240) NoFunction
          CFI (cfiPicker240) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiPicker240
// 1253 
// 1254 /*********************************************************************
// 1255  * Optional Management Messages
// 1256  */
// 1257 
// 1258 /*********************************************************************
// 1259  * @fn          ZDO_ProcessMgmtLqiReq
// 1260  *
// 1261  * @brief       This function handles parsing the incoming Management
// 1262  *              LQI request and generate the response.
// 1263  *
// 1264  *   Note:      This function will limit the number of items returned
// 1265  *              to ZDO_MAX_LQI_ITEMS items.
// 1266  *
// 1267  * @param       inMsg - incoming message (request)
// 1268  *
// 1269  * @return      none
// 1270  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1271 void ZDO_ProcessMgmtLqiReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLqiReq:
          CFI Block cfiBlock241 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
        CODE
// 1272 {
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocCount
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocFindDevice
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, ZDP_MgmtLqiRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 64, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 64, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 37
        MOV     A,#-0x25
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 59)
        MOV     ?V12,R2
        MOV     ?V13,R3
// 1273   byte x;
// 1274   byte index;
// 1275   byte numItems;
// 1276   byte maxItems;
// 1277   ZDP_MgmtLqiItem_t* table = NULL;
        MOV     ?V10,#0x0
        MOV     ?V11,#0x0
// 1278   ZDP_MgmtLqiItem_t* item;
// 1279   neighborEntry_t    entry;
// 1280   byte aItems;
// 1281   associated_devices_t *aDevice;
// 1282   AddrMgrEntry_t  nwkEntry;
// 1283   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ??Subroutine169_0 & 0xFFFF
??CrossCallReturnLabel_279:
        ADDC    A,?V13
        MOV     DPH,A
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_283:
        MOV     ?V6,A
// 1284 
// 1285   // Get the number of neighbor items
// 1286   NLME_GetRequest( nwkNumNeighborTableEntries, 0, &maxItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x64
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1287 
// 1288   // Get the number of associated items
// 1289   aItems = (uint8)AssocCount( PARENT, CHILD_FFD_RX_IDLE );
        ; Setup parameters for call to function AssocCount
        MOV     R2,#0x4
        MOV     R1,#0x0
        LCALL   `??AssocCount::?relay`; Banked call to: AssocCount
        MOV     A,R2
        MOV     ?V4,A
// 1290 
// 1291   // Total number of items
// 1292   maxItems += aItems;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,R2
        MOVX    @DPTR,A
// 1293 
// 1294   // Start with the supplied index
// 1295   if ( maxItems > StartIndex )
        MOV     R0,A
        MOV     A,?V6
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_0 & 0xFFFF
// 1296   {
// 1297     numItems = maxItems - StartIndex;
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V6
        MOV     ?V1,A
// 1298 
// 1299     // limit the size of the list
// 1300     if ( numItems > ZDO_MAX_LQI_ITEMS )
        CLR     C
        SUBB    A,#0x4
        JC      ??ZDO_ProcessMgmtLqiReq_1
// 1301       numItems = ZDO_MAX_LQI_ITEMS;
        MOV     ?V1,#0x3
// 1302 
// 1303     // Allocate the memory to build the table
// 1304     table = (ZDP_MgmtLqiItem_t*)osal_mem_alloc( (short)
// 1305               ( numItems * sizeof( ZDP_MgmtLqiItem_t ) ) );
??ZDO_ProcessMgmtLqiReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V1
        MOV     B,#0x1a
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V10,R2
        MOV     ?V11,R3
// 1306 
// 1307     if ( table != NULL )
        MOV     A,R2
        ORL     A,?V11
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_2 & 0xFFFF
// 1308     {
// 1309       x = 0;
        MOV     ?V5,#0x0
// 1310       item = table;
        MOV     R6,?V10
        MOV     R7,?V11
// 1311       index = StartIndex;
        MOV     ?V0,?V6
        SJMP    ??ZDO_ProcessMgmtLqiReq_3
// 1312 
// 1313       // Loop through associated items and build list
// 1314       for ( ; x < numItems; x++ )
// 1315       {
// 1316         if ( index < aItems )
// 1317         {
// 1318           // get next associated device
// 1319           aDevice = AssocFindDevice( index++ );
// 1320 
// 1321           // set basic fields
// 1322           item->panID   = _NIB.nwkPanId;
// 1323           osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1324           item->nwkAddr = aDevice->shortAddr;
// 1325           item->permit  = ZDP_MGMT_BOOL_UNKNOWN;
// 1326           item->depth   = 0xFF;
// 1327           item->lqi     = aDevice->linkInfo.rxLqi;
// 1328 
// 1329           // set extented address
// 1330           nwkEntry.user    = ADDRMGR_USER_DEFAULT;
// 1331           nwkEntry.nwkAddr = aDevice->shortAddr;
// 1332 
// 1333           if ( AddrMgrEntryLookupNwk( &nwkEntry ) == TRUE )
// 1334           {
// 1335             osal_cpyExtAddr( item->extAddr, nwkEntry.extAddr );
// 1336           }
// 1337           else
// 1338           {
// 1339             osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
??ZDO_ProcessMgmtLqiReq_4:
        ; Setup parameters for call to function osal_memset
        LCALL   ?Subroutine111 & 0xFFFF
// 1340           }
??CrossCallReturnLabel_249:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
// 1341 
// 1342           // use association info to set other fields
// 1343           if ( aDevice->nodeRelation == PARENT )
??ZDO_ProcessMgmtLqiReq_5:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JNZ     ??ZDO_ProcessMgmtLqiReq_6
// 1344           {
// 1345             if (  aDevice->shortAddr == 0 )
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_270:
        JNZ     ??ZDO_ProcessMgmtLqiReq_7
// 1346             {
// 1347               item->devType = ZDP_MGMT_DT_COORD;
        LCALL   ?Subroutine99 & 0xFFFF
// 1348               item->depth = 0;
??CrossCallReturnLabel_259:
        LCALL   ?Subroutine114 & 0xFFFF
// 1349             }
??CrossCallReturnLabel_168:
        CLR     A
        SJMP    ??ZDO_ProcessMgmtLqiReq_8
// 1350             else
// 1351             {
// 1352               item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_7:
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_254:
        MOVX    @DPTR,A
// 1353               item->depth = _NIB.nodeDepth - 1;
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        DEC     A
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine114 & 0xFFFF
// 1354             }
// 1355 
// 1356             item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1357             item->relation = ZDP_MGMT_REL_PARENT;
// 1358           }
??CrossCallReturnLabel_169:
        POP     A
          CFI CFA_SP SP+0
??ZDO_ProcessMgmtLqiReq_8:
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_6:
        CLR     A
        SJMP    ??CrossCallReturnLabel_252
// 1359           else
// 1360           {
// 1361             // If not parent, then it's a child
// 1362             item->depth = _NIB.nodeDepth + 1;
??ZDO_ProcessMgmtLqiReq_6:
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        INC     A
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_170:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine16 & 0xFFFF
// 1363 
// 1364             if ( aDevice->nodeRelation < CHILD_FFD )
??CrossCallReturnLabel_11:
        CLR     C
        SUBB    A,#0x3
        MOV     A,R6
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_9 & 0xFFFF
// 1365             {
// 1366               item->devType = ZDP_MGMT_DT_ENDDEV;
        LCALL   ??Subroutine180_0 & 0xFFFF
// 1367 
// 1368               if ( aDevice->nodeRelation == CHILD_RFD )
// 1369               {
// 1370                 item->rxOnIdle = FALSE;
// 1371               }
// 1372               else
// 1373               {
// 1374                 item->rxOnIdle = TRUE;
// 1375               }
// 1376             }
??CrossCallReturnLabel_324:
        MOV     A,#0x2
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_12:
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_10 & 0xFFFF
// 1377             else
// 1378             {
// 1379               item->devType = ZDP_MGMT_DT_ROUTER;
// 1380 
// 1381               if ( aDevice->nodeRelation == CHILD_FFD )
// 1382               {
// 1383                 item->rxOnIdle = FALSE;
// 1384               }
// 1385               else
// 1386               {
// 1387                 item->rxOnIdle = TRUE;
??ZDO_ProcessMgmtLqiReq_11:
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine166_0 & 0xFFFF
// 1388               }
??CrossCallReturnLabel_251:
        MOVX    @DPTR,A
// 1389             }
// 1390 
// 1391             item->relation = ZDP_MGMT_REL_CHILD;
        MOV     A,R6
        ADD     A,#0x16
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_252:
        MOVX    @DPTR,A
// 1392           }
// 1393 
// 1394           item++;
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        JNC     ??ZDO_ProcessMgmtLqiReq_12
        INC     R7
??ZDO_ProcessMgmtLqiReq_12:
        INC     ?V5
??ZDO_ProcessMgmtLqiReq_3:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V1
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_13 & 0xFFFF
        MOV     A,?V0
        CLR     C
        SUBB    A,?V4
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_14 & 0xFFFF
        ; Setup parameters for call to function AssocFindDevice
        MOV     R2,?V0
        MOV     R3,#0x0
        LCALL   `??AssocFindDevice::?relay`; Banked call to: AssocFindDevice
        MOV     ?V2,R2
        MOV     ?V3,R3
        INC     ?V0
        MOV     DPTR,#_NIB + 33
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_16:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_419:
        MOV     A,R6
        ADD     A,#0x12
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_4:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_171:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_420:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine192_0 & 0xFFFF
??CrossCallReturnLabel_411:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV     A,R1
        XRL     A,#0x1
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_4 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_248:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        LJMP    ??ZDO_ProcessMgmtLqiReq_5 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_9:
        LCALL   ??Subroutine165_0 & 0xFFFF
??CrossCallReturnLabel_253:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_13:
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_11 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_10:
        LCALL   ?Subroutine141 & 0xFFFF
// 1395         }
??CrossCallReturnLabel_214:
        CLR     A
        LJMP    ??CrossCallReturnLabel_251 & 0xFFFF
// 1396         else
// 1397         {
// 1398           if ( StartIndex <= aItems )
??ZDO_ProcessMgmtLqiReq_14:
        MOV     A,?V4
        CLR     C
        SUBB    A,?V6
        JC      ??ZDO_ProcessMgmtLqiReq_15
// 1399             // Start with 1st neighbor
// 1400             index = 0;
        MOV     ?V0,#0x0
        SJMP    ??ZDO_ProcessMgmtLqiReq_16
// 1401           else
// 1402             // Start with >1st neighbor
// 1403             index = StartIndex - aItems;
??ZDO_ProcessMgmtLqiReq_15:
        MOV     A,?V6
        CLR     C
        SUBB    A,?V4
        MOV     ?V0,A
        SJMP    ??ZDO_ProcessMgmtLqiReq_16
// 1404           break;
// 1405         }
// 1406       }
// 1407 
// 1408       // Loop through neighbor items and finish list
// 1409       for ( ; x < numItems; x++ )
// 1410       {
// 1411         // Add next neighbor table item
// 1412         NLME_GetRequest( nwkNeighborTable, index++, &entry );
// 1413 
// 1414         // set ZDP_MgmtLqiItem_t fields
// 1415         item->panID    = entry.panId;
// 1416         osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1417         osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
// 1418         item->nwkAddr  = entry.neighborAddress;
// 1419         item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1420         item->relation = ZDP_MGMT_REL_UNKNOWN;
// 1421         item->permit   = ZDP_MGMT_BOOL_UNKNOWN;
// 1422         item->depth    = 0xFF;
// 1423         item->lqi      = entry.linkInfo.rxLqi;
// 1424 
// 1425         if ( item->nwkAddr == 0 )
// 1426         {
// 1427           item->devType = ZDP_MGMT_DT_COORD;
// 1428         }
// 1429         else
// 1430         {
// 1431           item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_17:
        LCALL   ?Subroutine100 & 0xFFFF
// 1432         }
??CrossCallReturnLabel_255:
        MOVX    @DPTR,A
// 1433 
// 1434         item++;
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        JNC     ??ZDO_ProcessMgmtLqiReq_18
        INC     R7
??ZDO_ProcessMgmtLqiReq_18:
        INC     ?V5
??ZDO_ProcessMgmtLqiReq_13:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V1
        JNC     ??ZDO_ProcessMgmtLqiReq_2
??ZDO_ProcessMgmtLqiReq_16:
        ; Setup parameters for call to function NLME_GetRequest
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP102_8
        MOV     R2,?V0
        MOV     R3,#0x0
        MOV     R1,#-0x79
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        INC     ?V0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_17:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        ; Setup parameters for call to function osal_memset
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_250:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,R6
        ADD     A,#0x12
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_459:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_7:
        MOV     A,#0x3
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_5:
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_172:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_54:
        MOV     A,R0
        ORL     A,R1
        JNZ     ??ZDO_ProcessMgmtLqiReq_17
        LCALL   ?Subroutine109 & 0xFFFF
// 1435       }
// 1436     }
// 1437   }
??CrossCallReturnLabel_325:
        CLR     A
        SJMP    ??CrossCallReturnLabel_255
// 1438   else
// 1439   {
// 1440     numItems = 0;
??ZDO_ProcessMgmtLqiReq_0:
        MOV     ?V1,#0x0
// 1441   }
// 1442 
// 1443   // Send response
// 1444   ZDP_MgmtLqiRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxItems,
// 1445                   StartIndex, numItems, table, false );
??ZDO_ProcessMgmtLqiReq_2:
        ; Setup parameters for call to function ZDP_MgmtLqiRsp
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 60)
        MOV     R0,#?V10
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 62)
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 63)
        MOV     A,?V6
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 64)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V12
        LCALL   ??Subroutine182_0 & 0xFFFF
??CrossCallReturnLabel_345:
        ADDC    A,?V13
        MOV     R3,A
        MOV     A,?V12
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_157:
        ADDC    A,?V13
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_MgmtLqiRsp::?relay`; Banked call to: ZDP_MgmtLqiRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 59)
// 1446 
// 1447   if ( table )
        MOV     A,?V10
        ORL     A,?V11
        JZ      ??ZDO_ProcessMgmtLqiReq_19
// 1448   {
// 1449     osal_mem_free( table );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V10
        MOV     R3,?V11
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1450   }
// 1451 }
??ZDO_ProcessMgmtLqiReq_19:
        MOV     A,#0x25
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock241
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock242 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock242

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond243 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_171
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker245 Using cfiCommon1
          CFI (cfiPicker245) NoFunction
          CFI (cfiPicker245) Picker
        MOV     A,R6
        ADD     A,#0x19
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiPicker245

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond246 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond247) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond247) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond247) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond247) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond247) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond248) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond248) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond248) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond248) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond248) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker249 Using cfiCommon1
          CFI (cfiPicker249) NoFunction
          CFI (cfiPicker249) Picker
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_217:
        RET
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiPicker249

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine142:
          CFI Block cfiCond250 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_169
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-5
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_170
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-5
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_4
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond253) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond253) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-4
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_5
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-4
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker255 Using cfiCommon1
          CFI (cfiPicker255) NoFunction
          CFI (cfiPicker255) Picker
        MOV     A,R6
        ADD     A,#0x18
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiPicker255

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond256 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_249
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond257) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond257) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond257) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-2
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker258 Using cfiCommon1
          CFI (cfiPicker258) NoFunction
          CFI (cfiPicker258) Picker
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#-0x1
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiPicker258
        REQUIRE ??Subroutine164_0
        ; // Fall through to label ??Subroutine164_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine164_0:
          CFI Block cfiCond259 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_248
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond260) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond260) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond260) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond260) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond260) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond260) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond260) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+-2
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond261) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond261) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond261) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond261) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond261) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond261) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond261) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond261) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+-2
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker262 Using cfiCommon1
          CFI (cfiPicker262) NoFunction
          CFI (cfiPicker262) Picker
        MOV     A,R6
        LCALL   ??Subroutine185_0 & 0xFFFF
??CrossCallReturnLabel_362:
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiPicker262

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond263 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_254
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond264) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond264) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond264) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond264) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond264) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond264) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond264) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond264) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond264) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond264) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond264) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond264) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond264) CFA_SP SP+-2
          CFI (cfiCond264) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker265 Using cfiCommon1
          CFI (cfiPicker265) NoFunction
          CFI (cfiPicker265) Picker
        MOV     A,R6
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiPicker265
        REQUIRE ??Subroutine165_0
        ; // Fall through to label ??Subroutine165_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine165_0:
          CFI Block cfiCond266 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_253
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond267) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond267) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond267) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond267) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond267) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+-2
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-2
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker269 Using cfiCommon1
          CFI (cfiPicker269) NoFunction
          CFI (cfiPicker269) Picker
        ADD     A,#0x14
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiPicker269
        REQUIRE ??Subroutine166_0
        ; // Fall through to label ??Subroutine166_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine166_0:
          CFI Block cfiCond270 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_251
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond271) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond271) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond271) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond271) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond271) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond271) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond271) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-2
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-2
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond273) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-2
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-2
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker275 Using cfiCommon1
          CFI (cfiPicker275) NoFunction
          CFI (cfiPicker275) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiPicker275

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond276 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_259
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+-2
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker278 Using cfiCommon1
          CFI (cfiPicker278) NoFunction
          CFI (cfiPicker278) Picker
        MOV     A,R6
        ADD     A,#0x14
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiPicker278
        REQUIRE ??Subroutine167_0
        ; // Fall through to label ??Subroutine167_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine167_0:
          CFI Block cfiCond279 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_256
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+-2
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-2
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-2
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-2
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker284 Using cfiCommon1
          CFI (cfiPicker284) NoFunction
          CFI (cfiPicker284) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiPicker284

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond285 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_272
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-2
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker287 Using cfiCommon1
          CFI (cfiPicker287) NoFunction
          CFI (cfiPicker287) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiPicker287
        REQUIRE ??Subroutine168_0
        ; // Fall through to label ??Subroutine168_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine168_0:
          CFI Block cfiCond288 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_261
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond289) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond289) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond289) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond289) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond289) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-2
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond290) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond290) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond290) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-2
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond291) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-2
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond292) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond292) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond292) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond292) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond292) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond292) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond292) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-2
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-2
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-2
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-2
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-2
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond297) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-2
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_271
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-2
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-2
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-2
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker301 Using cfiCommon1
          CFI (cfiPicker301) NoFunction
          CFI (cfiPicker301) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_433:
        MOV     A,R0
        ORL     A,R1
        RET
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiPicker301

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond302 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond303) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond303) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond303) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond303) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-2
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker304 Using cfiCommon1
          CFI (cfiPicker304) NoFunction
          CFI (cfiPicker304) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_430:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#(_NIB + 53) & 0xff
        MOV     R5,#((_NIB + 53) >> 8) & 0xff
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiPicker304

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond305 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond306) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-2
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-2
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker308 Using cfiCommon1
          CFI (cfiPicker308) NoFunction
          CFI (cfiPicker308) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiPicker308

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond309 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond310) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond310) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond310) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond310) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond310) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-2
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker311 Using cfiCommon1
          CFI (cfiPicker311) NoFunction
          CFI (cfiPicker311) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_215:
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiPicker311

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine141:
          CFI Block cfiCond312 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_214
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_6
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond313) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-4
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_7
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond314) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond314) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond314) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-4
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker315 Using cfiCommon1
          CFI (cfiPicker315) NoFunction
          CFI (cfiPicker315) Picker
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiPicker315

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond316 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond317) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond317) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond317) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-2
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker318 Using cfiCommon1
          CFI (cfiPicker318) NoFunction
          CFI (cfiPicker318) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x17
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,#0x2
        MOVX    @DPTR,A
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_216:
        MOV     A,#-0x1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiPicker318
// 1452 
// 1453 /*********************************************************************
// 1454  * @fn          ZDO_ProcessMgmtNwkDiscReq
// 1455  *
// 1456  * @brief       This function handles parsing the incoming Management
// 1457  *              Network Discover request and starts the request.
// 1458  *
// 1459  * @param       inMsg - incoming message (request)
// 1460  *
// 1461  * @return      none
// 1462  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1463 void ZDO_ProcessMgmtNwkDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtNwkDiscReq:
          CFI Block cfiBlock319 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
        CODE
// 1464 {
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscReq2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        LCALL   ?Subroutine96 & 0xFFFF
// 1465   NLME_ScanFields_t scan;
// 1466   uint8             index;
// 1467   uint8             *msg;
// 1468 
// 1469   msg = inMsg->asdu;
??CrossCallReturnLabel_274:
        ADDC    A,?V1
        LCALL   ?Subroutine71 & 0xFFFF
// 1470   scan.channels = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_107:
        LCALL   `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?XSTORE_R0123
// 1471   msg += 4;
// 1472   scan.duration = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine33 & 0xFFFF
// 1473   index         = *msg;
??CrossCallReturnLabel_44:
        MOV     R0,A
// 1474   scan.scanType = ZMAC_ACTIVE_SCAN;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1475   scan.scanApp  = NLME_DISC_SCAN;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1476 
// 1477   // Save off the information to be used for the response
// 1478   zdappMgmtNwkDiscReqInProgress          = true;
        MOV     DPTR,#zdappMgmtNwkDiscReqInProgress
        MOVX    @DPTR,A
// 1479   zdappMgmtNwkDiscRspAddr.addrMode       = Addr16Bit;
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr + 8
        INC     A
        LCALL   ?Subroutine34 & 0xFFFF
// 1480   zdappMgmtNwkDiscRspAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_46:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr
        LCALL   ?Subroutine47 & 0xFFFF
// 1481   zdappMgmtNwkDiscStartIndex             = index;
??CrossCallReturnLabel_236:
        MOV     A,R0
        MOV     DPTR,#zdappMgmtNwkDiscStartIndex
        LCALL   ?Subroutine24 & 0xFFFF
// 1482   zdappMgmtNwkDiscRspTransSeq            = inMsg->TransSeq;
??CrossCallReturnLabel_29:
        MOV     DPTR,#zdappMgmtNwkDiscRspTransSeq
        MOVX    @DPTR,A
// 1483 
// 1484   if ( NLME_NwkDiscReq2( &scan ) != ZSuccess )
        ; Setup parameters for call to function NLME_NwkDiscReq2
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??NLME_NwkDiscReq2::?relay`; Banked call to: NLME_NwkDiscReq2
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtNwkDiscReq_0
// 1485   {
// 1486     NLME_NwkDiscTerm();
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL   `??NLME_NwkDiscTerm::?relay`; Banked call to: NLME_NwkDiscTerm
// 1487 
// 1488     // zdappMgmtNwkDiscReqInProgress will be reset in the confirm callback
// 1489   }
// 1490 }
??ZDO_ProcessMgmtNwkDiscReq_0:
        MOV     A,#0x7
        LJMP    ??Subroutine154_0 & 0xFFFF
          CFI EndBlock cfiBlock319

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond320 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_28
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+-2
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker322 Using cfiCommon1
          CFI (cfiPicker322) NoFunction
          CFI (cfiPicker322) Picker
        MOVX    @DPTR,A
        MOV     A,?V0
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_226:
        ADDC    A,?V1
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiPicker322
// 1491 
// 1492 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
// 1493 /*********************************************************************
// 1494  * @fn          ZDO_FinishProcessingMgmtNwkDiscReq
// 1495  *
// 1496  * @brief       This function finishes the processing of the Management
// 1497  *              Network Discover Request and generates the response.
// 1498  *
// 1499  *   Note:      This function will limit the number of items returned
// 1500  *              to ZDO_MAX_NWKDISC_ITEMS items.
// 1501  *
// 1502  * @param       ResultCountSrcAddr - source of the request
// 1503  * @param       msg - pointer to incoming message
// 1504  * @param       SecurityUse -
// 1505  *
// 1506  * @return      none
// 1507  */
// 1508 void ZDO_FinishProcessingMgmtNwkDiscReq( void )
// 1509 {
// 1510   byte count, i, ResultCount = 0;
// 1511   networkDesc_t *newDesc = NULL, *pList, *NetworkList;
// 1512 
// 1513   NetworkList = nwk_getNwkDescList();
// 1514 
// 1515   // Count the number of nwk descriptors in the list
// 1516   pList = nwk_getNwkDescList();
// 1517   while (pList)
// 1518   {
// 1519     ResultCount++;
// 1520     pList = pList->nextDesc;
// 1521   }
// 1522 
// 1523   if ( ZSTACK_ROUTER_BUILD )
// 1524   {
// 1525     // Look for my PanID.
// 1526     pList = nwk_getNwkDescList();
// 1527     while ( pList )
// 1528     {
// 1529       if ( pList->panId == _NIB.nwkPanId )
// 1530       {
// 1531         break;
// 1532       }
// 1533 
// 1534 
// 1535       if ( !pList->nextDesc )
// 1536       {
// 1537         break;
// 1538       }
// 1539       pList = pList->nextDesc;
// 1540     }
// 1541 
// 1542 
// 1543     // If my Pan not present (query to a star network ZC or an isolated ZR?),
// 1544     // prepend it.
// 1545     if ( !pList || (pList->panId != _NIB.nwkPanId) )
// 1546     {
// 1547       newDesc = (networkDesc_t *)osal_mem_alloc( sizeof( networkDesc_t ) );
// 1548       if ( newDesc )
// 1549       {
// 1550         byte pJoin;
// 1551 
// 1552         newDesc->panId = _NIB.nwkPanId;
// 1553         newDesc->logicalChannel = _NIB.nwkLogicalChannel;
// 1554         newDesc->version = NLME_GetProtocolVersion();
// 1555         newDesc->stackProfile = zgStackProfile;
// 1556 
// 1557         //Extended PanID
// 1558         osal_cpyExtAddr( newDesc->extendedPANID, _NIB.extendedPANID);
// 1559 
// 1560         ZMacGetReq( ZMacAssociationPermit, &pJoin );
// 1561         newDesc->chosenRouter = ((pJoin) ? ZDAppNwkAddr.addr.shortAddr :
// 1562                                            INVALID_NODE_ADDR);
// 1563 
// 1564         newDesc->nextDesc = NetworkList;
// 1565         NetworkList = newDesc;
// 1566         ResultCount++;
// 1567       }
// 1568     }
// 1569   }
// 1570 
// 1571   // Calc the count and apply a max count.
// 1572   if ( zdappMgmtNwkDiscStartIndex > ResultCount )
// 1573   {
// 1574     count = 0;
// 1575   }
// 1576   else
// 1577   {
// 1578     count = ResultCount - zdappMgmtNwkDiscStartIndex;
// 1579     if ( count > ZDO_MAX_NWKDISC_ITEMS )
// 1580     {
// 1581       count = ZDO_MAX_NWKDISC_ITEMS;
// 1582     }
// 1583 
// 1584     // Move the list pointer up to the start index.
// 1585     for ( i = 0; i < zdappMgmtNwkDiscStartIndex; i++ )
// 1586     {
// 1587       NetworkList = NetworkList->nextDesc;
// 1588     }
// 1589   }
// 1590 
// 1591   ZDP_MgmtNwkDiscRsp( zdappMgmtNwkDiscRspTransSeq,
// 1592                      &zdappMgmtNwkDiscRspAddr, ZSuccess, ResultCount,
// 1593                       zdappMgmtNwkDiscStartIndex,
// 1594                       count,
// 1595                       NetworkList,
// 1596                       false );
// 1597 
// 1598   if ( ZSTACK_ROUTER_BUILD )
// 1599   {
// 1600     if ( newDesc != NULL )
// 1601     {
// 1602       osal_mem_free( newDesc );
// 1603     }
// 1604   }
// 1605 
// 1606   NLME_NwkDiscTerm();
// 1607 }
// 1608 #endif
// 1609 
// 1610 /*********************************************************************
// 1611  * @fn          ZDO_ProcessMgmtRtgReq
// 1612  *
// 1613  * @brief       This function finishes the processing of the Management
// 1614  *              Routing Request and generates the response.
// 1615  *
// 1616  *   Note:      This function will limit the number of items returned
// 1617  *              to ZDO_MAX_RTG_ITEMS items.
// 1618  *
// 1619  * @param       inMsg - incoming message (request)
// 1620  *
// 1621  * @return      none
// 1622  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1623 void ZDO_ProcessMgmtRtgReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtRtgReq:
          CFI Block cfiBlock323 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
        CODE
// 1624 {
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, ZDP_MgmtRtgRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1625   byte x;
// 1626   byte maxNumItems;
// 1627   byte numItems = 0;
        MOV     R6,#0x0
// 1628   uint8 *pBuf = NULL;
        MOV     ?V6,R6
        MOV     ?V7,R6
// 1629   rtgItem_t *pList;
// 1630   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ??Subroutine169_0 & 0xFFFF
??CrossCallReturnLabel_280:
        ADDC    A,?V3
        MOV     DPH,A
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_284:
        MOV     R7,A
// 1631 
// 1632   // Get the number of table items
// 1633   NLME_GetRequest( nwkNumRoutingTableEntries, 0, &maxNumItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x63
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1634 
// 1635   if ( maxNumItems > StartIndex )
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R7
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtRtgReq_0 & 0xFFFF
// 1636   {
// 1637     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R7
        MOV     R6,A
// 1638 
// 1639     // limit the size of the list
// 1640     if ( numItems > ZDO_MAX_RTG_ITEMS )
        CLR     C
        SUBB    A,#0xb
        JC      ??ZDO_ProcessMgmtRtgReq_1
// 1641     {
// 1642       numItems = ZDO_MAX_RTG_ITEMS;
        MOV     R6,#0xa
// 1643     }
// 1644 
// 1645     // Allocate the memory to build the table
// 1646     pBuf = osal_mem_alloc( (short)(sizeof( rtgItem_t ) * numItems) );
??ZDO_ProcessMgmtRtgReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     B,#0x7
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V6,R2
        MOV     ?V7,R3
// 1647 
// 1648     if ( pBuf != NULL )
        MOV     A,R2
        ORL     A,?V7
        JZ      ??ZDO_ProcessMgmtRtgReq_2
// 1649     {
// 1650       // Convert buffer to list
// 1651       pList = (rtgItem_t *)pBuf;
// 1652 
// 1653       // Loop through items and build list
// 1654       for ( x = 0; x < numItems; x++ )
        MOV     ?V4,#0x0
        SJMP    ??ZDO_ProcessMgmtRtgReq_3
// 1655       {
// 1656         NLME_GetRequest( nwkRoutingTable, (uint16)(x + StartIndex), (void*)pList );
// 1657 
// 1658         // Remap the status to the RoutingTableList Record Format defined in the ZigBee spec
// 1659         switch( pList->status )
// 1660         {
// 1661           case RT_ACTIVE:
// 1662             pList->status = ZDO_MGMT_RTG_ENTRY_ACTIVE;
// 1663             break;
// 1664 
// 1665           case RT_DISC:
// 1666             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY;
// 1667             break;
// 1668 
// 1669           case RT_LINK_FAIL:
// 1670             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED;
// 1671             break;
// 1672 
// 1673           case RT_INIT:
// 1674           case RT_REPAIR:
// 1675           default:
// 1676             pList->status = ZDO_MGMT_RTG_ENTRY_INACTIVE;
??ZDO_ProcessMgmtRtgReq_4:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x3
??ZDO_ProcessMgmtRtgReq_5:
        MOVX    @DPTR,A
// 1677             break;
// 1678         }
// 1679 
// 1680         // Increment pointer to next record
// 1681         pList++;
        MOV     A,?V0
        ADD     A,#0x7
        MOV     ?V0,A
        JNC     ??ZDO_ProcessMgmtRtgReq_6
        INC     ?V1
??ZDO_ProcessMgmtRtgReq_6:
        INC     ?V4
??ZDO_ProcessMgmtRtgReq_3:
        MOV     A,?V4
        CLR     C
        SUBB    A,R6
        JNC     ??ZDO_ProcessMgmtRtgReq_0
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     A,?V4
        ADD     A,R7
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x75
        LCALL   `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_7
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_8
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_9
        SJMP    ??ZDO_ProcessMgmtRtgReq_4
??ZDO_ProcessMgmtRtgReq_7:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_8:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x1
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_9:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x2
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
// 1682       }
// 1683     }
// 1684     else
// 1685     {
// 1686       numItems = 0;
??ZDO_ProcessMgmtRtgReq_2:
        MOV     R6,#0x0
// 1687     }
// 1688   }
// 1689 
// 1690   // Send response
// 1691   ZDP_MgmtRtgRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxNumItems, StartIndex, numItems,
// 1692                         (rtgItem_t *)pBuf, false );
??ZDO_ProcessMgmtRtgReq_0:
        ; Setup parameters for call to function ZDP_MgmtRtgRsp
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R6
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R7
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V2
        LCALL   ??Subroutine182_0 & 0xFFFF
??CrossCallReturnLabel_346:
        ADDC    A,?V3
        MOV     R3,A
        MOV     A,?V2
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_158:
        ADDC    A,?V3
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_MgmtRtgRsp::?relay`; Banked call to: ZDP_MgmtRtgRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
// 1693 
// 1694   if ( pBuf != NULL )
        MOV     A,?V6
        ORL     A,?V7
        JZ      ??ZDO_ProcessMgmtRtgReq_10
// 1695   {
// 1696     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V6
        MOV     R3,?V7
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1697   }
// 1698 }
??ZDO_ProcessMgmtRtgReq_10:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        LJMP    ??Subroutine184_0 & 0xFFFF
          CFI EndBlock cfiBlock323

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond324 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_274
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-2
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker326 Using cfiCommon1
          CFI (cfiPicker326) NoFunction
          CFI (cfiPicker326) Picker
        MOV     ?V0,R2
        MOV     ?V1,R3
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiPicker326
        REQUIRE ??Subroutine169_0
        ; // Fall through to label ??Subroutine169_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine169_0:
          CFI Block cfiCond327 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_278
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond328) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond328) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond328) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond328) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond328) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond328) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond328) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond328) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond328) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+-2
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond329) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond329) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond329) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond329) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond329) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond329) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond329) CFA_SP SP+-2
          CFI (cfiCond329) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond330) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond330) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond330) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond330) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond330) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-2
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-2
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-2
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker333 Using cfiCommon1
          CFI (cfiPicker333) NoFunction
          CFI (cfiPicker333) Picker
        MOV     A,R2
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiPicker333
        REQUIRE ??Subroutine170_0
        ; // Fall through to label ??Subroutine170_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine170_0:
          CFI Block cfiCond334 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_276
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function ZDO_ParseAddrRsp
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-2
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond336) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-2
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond337) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond337) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-2
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-2
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+-2
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-2
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker342 Using cfiCommon1
          CFI (cfiPicker342) NoFunction
          CFI (cfiPicker342) Picker
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_312:
        RET
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiPicker342
// 1699 
// 1700 /*********************************************************************
// 1701  * @fn          ZDO_ProcessMgmtBindReq
// 1702  *
// 1703  * @brief       This function finishes the processing of the Management
// 1704  *              Bind Request and generates the response.
// 1705  *
// 1706  *   Note:      This function will limit the number of items returned
// 1707  *              to ZDO_MAX_BIND_ITEMS items.
// 1708  *
// 1709  * @param       inMsg - incoming message (request)
// 1710  *
// 1711  * @return      none
// 1712  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1713 void ZDO_ProcessMgmtBindReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtBindReq:
          CFI Block cfiBlock343 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
        CODE
// 1714 {
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, ZDP_MgmtBindRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V4,R2
        MOV     ?V5,R3
// 1715 #if defined ( REFLECTOR )
// 1716   byte x;
// 1717   uint16 maxNumItems;
// 1718   uint16 numItems;
// 1719   uint8 *pBuf = NULL;
        MOV     ?V8,#0x0
        MOV     ?V9,#0x0
// 1720   apsBindingItem_t *pList;
// 1721   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ??Subroutine169_0 & 0xFFFF
??CrossCallReturnLabel_281:
        ADDC    A,?V5
        MOV     DPH,A
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_285:
        MOV     ?V2,A
// 1722   uint8 status;
// 1723 
// 1724   // Get the number of table items
// 1725   APSME_GetRequest( apsNumBindingTableEntries, 0, (byte*)(&maxNumItems) );
        ; Setup parameters for call to function APSME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x5d
        LCALL   `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
// 1726 
// 1727   if ( maxNumItems > StartIndex )
        LCALL   ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_462:
        CLR     C
        MOV     A,?V2
        SUBB    A,R2
        CLR     A
        SUBB    A,R3
        JNC     ??ZDO_ProcessMgmtBindReq_0
// 1728   {
// 1729     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,?V2
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        MOV     R7,A
// 1730   }
// 1731   else
// 1732   {
// 1733     numItems = 0;
// 1734   }
// 1735 
// 1736   // limit the size of the list
// 1737   if ( numItems > ZDO_MAX_BIND_ITEMS )
        CLR     C
        MOV     A,R6
        SUBB    A,#0x4
        MOV     A,R7
        SUBB    A,#0x0
        JC      ??ZDO_ProcessMgmtBindReq_1
// 1738   {
// 1739     numItems = ZDO_MAX_BIND_ITEMS;
        MOV     R6,#0x3
        MOV     R7,#0x0
        SJMP    ??ZDO_ProcessMgmtBindReq_2
// 1740   }
// 1741 
// 1742   // Allocate the memory to build the table
// 1743   if ( numItems && (pBuf = osal_mem_alloc( sizeof( apsBindingItem_t ) * numItems )) )
??ZDO_ProcessMgmtBindReq_1:
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ProcessMgmtBindReq_0
??ZDO_ProcessMgmtBindReq_2:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     A,R2
        MOV     B,#0x15
        MUL     AB
        MOV     R2,A
        MOV     R0,B
        MOV     B,#0x15
        MOV     A,R3
        MUL     AB
        ADD     A,R0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     A,R2
        ORL     A,?V9
        JZ      ??ZDO_ProcessMgmtBindReq_0
// 1744   {
// 1745     status = ZSuccess;
        MOV     ?V3,#0x0
// 1746 
// 1747     // Convert buffer to list
// 1748     pList = (apsBindingItem_t *)pBuf;
// 1749 
// 1750     // Loop through items and build list
// 1751     for ( x = 0; x < numItems; x++ )
        MOV     ?V6,#0x0
        SJMP    ??ZDO_ProcessMgmtBindReq_3
// 1752     {
// 1753       APSME_GetRequest( apsBindingTable, (x + StartIndex), (void*)pList );
??ZDO_ProcessMgmtBindReq_4:
        ; Setup parameters for call to function APSME_GetRequest
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     R0,?V2
        MOV     A,?V6
        ADD     A,R0
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x5e
        LCALL   `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
// 1754       pList++;
        MOV     A,?V0
        ADD     A,#0x15
        MOV     ?V0,A
        JNC     ??ZDO_ProcessMgmtBindReq_5
        INC     ?V1
// 1755     }
??ZDO_ProcessMgmtBindReq_5:
        INC     ?V6
??ZDO_ProcessMgmtBindReq_3:
        CLR     C
        MOV     A,?V6
        SUBB    A,R6
        CLR     A
        SUBB    A,R7
        JC      ??ZDO_ProcessMgmtBindReq_4
        MOV     A,R6
        MOV     R1,A
        SJMP    ??ZDO_ProcessMgmtBindReq_6
// 1756 
// 1757   }
// 1758   else
// 1759   {
// 1760     status = ZDP_NOT_PERMITTED;
??ZDO_ProcessMgmtBindReq_0:
        MOV     ?V3,#-0x75
// 1761     numItems = 0;
        MOV     R1,#0x0
// 1762   }
// 1763 
// 1764   // Send response
// 1765   ZDP_MgmtBindRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, (byte)maxNumItems, StartIndex,
// 1766                    (byte)numItems, (apsBindingItem_t *)pBuf, false );
??ZDO_ProcessMgmtBindReq_6:
        ; Setup parameters for call to function ZDP_MgmtBindRsp
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R1
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,?V2
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,?V3
        MOV     A,?V4
        LCALL   ??Subroutine182_0 & 0xFFFF
??CrossCallReturnLabel_347:
        ADDC    A,?V5
        MOV     R3,A
        MOV     A,?V4
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_159:
        ADDC    A,?V5
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??ZDP_MgmtBindRsp::?relay`; Banked call to: ZDP_MgmtBindRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 1767 
// 1768   if ( pBuf )
        MOV     A,?V8
        ORL     A,?V9
        JZ      ??ZDO_ProcessMgmtBindReq_7
// 1769   {
// 1770     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V8
        MOV     R3,?V9
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1771   }
// 1772 #else
// 1773   (void)inMsg;
// 1774 #endif
// 1775 }
??ZDO_ProcessMgmtBindReq_7:
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock343
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock344 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock344

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond345 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_290
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond346) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-2
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker347 Using cfiCommon1
          CFI (cfiPicker347) NoFunction
          CFI (cfiPicker347) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiPicker347
        REQUIRE ??Subroutine171_0
        ; // Fall through to label ??Subroutine171_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine171_0:
          CFI Block cfiCond348 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_288
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-2
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDO_UpdateNwkStatus
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-2
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond351) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond351) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-2
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker352 Using cfiCommon1
          CFI (cfiPicker352) NoFunction
          CFI (cfiPicker352) Picker
        INC     DPTR
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiPicker352
        REQUIRE ??Subroutine172_0
        ; // Fall through to label ??Subroutine172_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine172_0:
          CFI Block cfiCond353 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_282
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond354) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+-2
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-2
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_285
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-2
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-2
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_287
          CFI (cfiCond358) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond358) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond358) CFA_SP SP+-7
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ZDO_UpdateNwkStatus
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+-2
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond360) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond360) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond360) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond360) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond360) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond360) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond360) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond360) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond360) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond360) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-2
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDO_UpdateNwkStatus
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-2
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-2
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker363 Using cfiCommon1
          CFI (cfiPicker363) NoFunction
          CFI (cfiPicker363) Picker
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_293:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiPicker363
// 1776 
// 1777 /*********************************************************************
// 1778  * @fn          ZDO_ProcessMgmtDirectJoinReq
// 1779  *
// 1780  * @brief       This function finishes the processing of the Management
// 1781  *              Direct Join Request and generates the response.
// 1782  *
// 1783  * @param       inMsg - incoming message (request)
// 1784  *
// 1785  * @return      none
// 1786  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1787 void ZDO_ProcessMgmtDirectJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtDirectJoinReq:
          CFI Block cfiBlock364 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
        CODE
// 1788 {
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, NLME_DirectJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1789   uint8 *deviceAddr;
// 1790   uint8 capInfo;
// 1791   uint8 stat;
// 1792 
// 1793   // Parse the message
// 1794   deviceAddr = inMsg->asdu;
// 1795   capInfo = inMsg->asdu[Z_EXTADDR_LEN];
// 1796 
// 1797   stat = (byte) NLME_DirectJoinRequest( deviceAddr, capInfo );
        MOV     A,R6
        LCALL   ??Subroutine170_0 & 0xFFFF
??CrossCallReturnLabel_276:
        ADDC    A,R7
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_123:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??NLME_DirectJoinRequest::?relay`; Banked call to: NLME_DirectJoinRequest
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1798 
// 1799   ZDP_MgmtDirectJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x35
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_295:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1800 }
        LJMP    ?Subroutine9 & 0xFFFF
          CFI EndBlock cfiBlock364

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond365 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_295
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-2
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker367 Using cfiCommon1
          CFI (cfiPicker367) NoFunction
          CFI (cfiPicker367) Picker
        MOV     R1,#0x1
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiPicker367
        REQUIRE ??Subroutine173_0
        ; // Fall through to label ??Subroutine173_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine173_0:
          CFI Block cfiCond368 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_294
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-2
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-2
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker371 Using cfiCommon1
          CFI (cfiPicker371) NoFunction
          CFI (cfiPicker371) Picker
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_298:
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiPicker371

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine136:
          CFI Block cfiCond372 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_297
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_295
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-4
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_296
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-4
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ZDO_ProcessUserDescSet
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_294
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-4
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker376 Using cfiCommon1
          CFI (cfiPicker376) NoFunction
          CFI (cfiPicker376) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0xf
        RET
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiPicker376
// 1801 
// 1802 /*********************************************************************
// 1803  * @fn          ZDO_ProcessMgmtLeaveReq
// 1804  *
// 1805  * @brief       This function processes a Management Leave Request
// 1806  *              and generates the response.
// 1807  *
// 1808  * @param       inMsg - incoming message (request)
// 1809  *
// 1810  * @return      none
// 1811  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1812 void ZDO_ProcessMgmtLeaveReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLeaveReq:
          CFI Block cfiBlock377 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
        CODE
// 1813 {
        FUNCALL ZDO_ProcessMgmtLeaveReq, AddrMgrExtAddrValid
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_LeaveReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_SetPollRate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine96 & 0xFFFF
// 1814   NLME_LeaveReq_t req;
// 1815   ZStatus_t       status;
// 1816   uint8           option;
// 1817   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_275:
        ADDC    A,?V1
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_356:
        MOV     R7,A
// 1818 
// 1819   if ( ( AddrMgrExtAddrValid( msg ) == FALSE                 ) ||
// 1820        ( osal_ExtAddrEqual( msg, NLME_GetExtAddr() ) == TRUE )    )
        ; Setup parameters for call to function AddrMgrExtAddrValid
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??AddrMgrExtAddrValid::?relay`; Banked call to: AddrMgrExtAddrValid
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtLeaveReq_0
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R4,?V2
        MOV     R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        XRL     A,#0x1
        JNZ     ??ZDO_ProcessMgmtLeaveReq_1
// 1821   {
// 1822     // Remove this device
// 1823     req.extAddr = NULL;
??ZDO_ProcessMgmtLeaveReq_0:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        SJMP    ??ZDO_ProcessMgmtLeaveReq_2
// 1824   }
// 1825   else
// 1826   {
// 1827     // Remove child device
// 1828     req.extAddr = msg;
??ZDO_ProcessMgmtLeaveReq_1:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
// 1829   }
??ZDO_ProcessMgmtLeaveReq_2:
        LCALL   ?Subroutine21 & 0xFFFF
// 1830 
// 1831   option = msg[Z_EXTADDR_LEN];
??CrossCallReturnLabel_23:
        MOV     R0,A
// 1832   if ( option & ZDP_MGMT_LEAVE_REQ_RC )
        MOV     C,0xE0 /* A   */.6
        JNC     ??ZDO_ProcessMgmtLeaveReq_3
// 1833   {
// 1834     req.removeChildren = TRUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1835   }
// 1836 
// 1837   if ( option & ZDP_MGMT_LEAVE_REQ_REJOIN )
??ZDO_ProcessMgmtLeaveReq_3:
        MOV     A,R0
        MOV     C,0xE0 /* A   */.7
        JNC     ??ZDO_ProcessMgmtLeaveReq_4
// 1838   {
// 1839      req.rejoin = TRUE;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1840   }
// 1841 
// 1842   req.silent = FALSE;
??ZDO_ProcessMgmtLeaveReq_4:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1843 
// 1844   status = NLME_LeaveReq( &req );
        ; Setup parameters for call to function NLME_LeaveReq
        INC     A
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??NLME_LeaveReq::?relay`; Banked call to: NLME_LeaveReq
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1845 
// 1846   if ( ZG_BUILD_ENDDEVICE_TYPE )
// 1847   {
// 1848     // Stop polling and get ready to reset
// 1849     NLME_SetPollRate( 0 );
        ; Setup parameters for call to function NLME_SetPollRate
        MOV     R2,#0x0
        MOV     R3,#0x0
        LCALL   `??NLME_SetPollRate::?relay`; Banked call to: NLME_SetPollRate
// 1850   }
// 1851 
// 1852   ZDP_MgmtLeaveRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, FALSE );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V2,#0x34
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_156:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1853 }
        MOV     A,#0x6
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock377

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond378 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-2
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker380 Using cfiCommon1
          CFI (cfiPicker380) NoFunction
          CFI (cfiPicker380) Picker
        MOV     R1,#0x1
        MOV     A,?V0
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V1
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0xf
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        RET
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiPicker380
// 1854 
// 1855 
// 1856 /*********************************************************************
// 1857  * @fn          ZDO_ProcessMgmtPermitJoinReq
// 1858  *
// 1859  * @brief       This function processes a Management Permit Join Request
// 1860  *              and generates the response.
// 1861  *
// 1862  * @param       inMsg - incoming message (request)
// 1863  *
// 1864  * @return      none
// 1865  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1866 void ZDO_ProcessMgmtPermitJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtPermitJoinReq:
          CFI Block cfiBlock381 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
        CODE
// 1867 {
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, NLME_PermitJoiningRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1868   uint8 stat;
// 1869   uint8 duration;
// 1870   uint8 tcsig;
// 1871 
// 1872   duration = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION];
// 1873   tcsig    = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG];
// 1874 
// 1875   // Set the network layer permit join duration
// 1876   stat = (byte) NLME_PermitJoiningRequest( duration );
        ; Setup parameters for call to function NLME_PermitJoiningRequest
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_146:
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_286:
        MOV     R1,A
        LCALL   `??NLME_PermitJoiningRequest::?relay`; Banked call to: NLME_PermitJoiningRequest
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine30 & 0xFFFF
// 1877 
// 1878   // Handle the Trust Center Significance
// 1879   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1880   {
// 1881     if ( tcsig == TRUE )
// 1882     {
// 1883       ZDSecMgrPermitJoining( duration );
// 1884     }
// 1885   }
// 1886 
// 1887   // Send a response if unicast
// 1888   if ( !inMsg->wasBroadcast )
??CrossCallReturnLabel_38:
        JNZ     ??ZDO_ProcessMgmtPermitJoinReq_0
// 1889   {
// 1890     ZDP_MgmtPermitJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x36
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine98 & 0xFFFF
// 1891   }
??CrossCallReturnLabel_296:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1892 }
??ZDO_ProcessMgmtPermitJoinReq_0:
        LJMP    ?Subroutine9 & 0xFFFF
          CFI EndBlock cfiBlock381
// 1893 
// 1894 /*
// 1895  * This function stub allows the next higher layer to be notified of
// 1896  * a permit joining timeout.
// 1897  */
// 1898 /*********************************************************************
// 1899  * @fn          ZDO_ProcessMgmtPermitJoinTimeout
// 1900  *
// 1901  * @brief       This function stub allows the next higher layer to be
// 1902  *              notified of a permit joining timeout. Currently, this
// 1903  *              directly bypasses the APS layer.
// 1904  *
// 1905  * @param       none
// 1906  *
// 1907  * @return      none
// 1908  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1909 void ZDO_ProcessMgmtPermitJoinTimeout( void )
NLME_PermitJoiningTimeout:
          CFI Block cfiBlock382 Using cfiCommon0
          CFI Function NLME_PermitJoiningTimeout
        CODE
// 1910 {
        ; Saved register size: 0
        ; Auto size: 0
// 1911   #if defined( ZDO_MGMT_PERMIT_JOIN_RESPONSE )
// 1912   // Currently, only the ZDSecMgr needs to be notified
// 1913   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1914   {
// 1915     ZDSecMgrPermitJoiningTimeout();
// 1916   }
// 1917   #endif
// 1918 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock382
// 1919 
// 1920 /*********************************************************************
// 1921  * @fn          ZDO_ProcessUserDescReq
// 1922  *
// 1923  * @brief       This function finishes the processing of the User
// 1924  *              Descriptor Request and generates the response.
// 1925  *
// 1926  * @param       inMsg - incoming message (request)
// 1927  *
// 1928  * @return      none
// 1929  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1930 void ZDO_ProcessUserDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescReq:
          CFI Block cfiBlock383 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescReq
        CODE
// 1931 {
        FUNCALL ZDO_ProcessUserDescReq, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_UserDescRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 17
        MOV     A,#-0x11
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1932   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_88:
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
// 1933   UserDescriptorFormat_t userDesc;
// 1934 
// 1935   if ( (aoi == ZDAppNwkAddr.addr.shortAddr) && (ZSUCCESS == osal_nv_read(
// 1936              ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc )) )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_ProcessUserDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_ProcessUserDescReq_0:
        JNZ     ??ZDO_ProcessUserDescReq_1
        ; Setup parameters for call to function osal_nv_read
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V2,#0x11
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   `??osal_nv_read::?relay`; Banked call to: osal_nv_read
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessUserDescReq_1
// 1937   {
// 1938     ZDP_UserDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), aoi, &userDesc, false );
        ; Setup parameters for call to function ZDP_UserDescRsp
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,?V0
        MOV     R5,?V1
        LCALL   ?Subroutine97 & 0xFFFF
// 1939   }
??CrossCallReturnLabel_149:
        LCALL   `??ZDP_UserDescRsp::?relay`; Banked call to: ZDP_UserDescRsp
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        SJMP    ??ZDO_ProcessUserDescReq_2
// 1940   else
// 1941   {
// 1942     ZDP_GenericRsp(inMsg->TransSeq, &(inMsg->srcAddr),
// 1943            ZDP_NOT_SUPPORTED, aoi, User_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessUserDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V2,#0x11
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL   ?Subroutine103 & 0xFFFF
// 1944   }
??CrossCallReturnLabel_337:
        MOV     R5,A
        MOV     R4,#-0x7c
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_150:
        LCALL   `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
// 1945 }
??ZDO_ProcessUserDescReq_2:
        MOV     A,#0x11
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock383

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond384 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDO_ProcessUserDescReq
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-2
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function ZDO_ProcessUserDescReq
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_150
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-2
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker387 Using cfiCommon1
          CFI (cfiPicker387) NoFunction
          CFI (cfiPicker387) Picker
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_206:
        RET
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiPicker387

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine134:
          CFI Block cfiCond388 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_86
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-4
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_148
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+-4
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function ZDO_ProcessUserDescReq
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_149
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+-4
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function ZDO_ProcessUserDescReq
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_150
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+-4
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker393 Using cfiCommon1
          CFI (cfiPicker393) NoFunction
          CFI (cfiPicker393) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     A,R6
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_229:
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiPicker393

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond394 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_87
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function ZDO_ProcessUserDescReq
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+-2
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker396 Using cfiCommon1
          CFI (cfiPicker396) NoFunction
          CFI (cfiPicker396) Picker
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_198:
        RET
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiPicker396

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine126:
          CFI Block cfiCond397 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_82
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-4
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_87
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-4
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function ZDO_ProcessUserDescReq
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_88
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-4
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker401 Using cfiCommon1
          CFI (cfiPicker401) NoFunction
          CFI (cfiPicker401) Picker
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_230:
        LCALL   ??Subroutine163_0 & 0xFFFF
??CrossCallReturnLabel_436:
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_475:
        RET
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiPicker401
// 1946 
// 1947 /*********************************************************************
// 1948  * @fn          ZDO_ProcessUserDescSet
// 1949  *
// 1950  * @brief       This function finishes the processing of the User
// 1951  *              Descriptor Set and generates the response.
// 1952  *
// 1953  * @param       inMsg - incoming message (request)
// 1954  *
// 1955  * @return      none
// 1956  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1957 void ZDO_ProcessUserDescSet( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescSet:
          CFI Block cfiBlock402 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
        CODE
// 1958 {
        FUNCALL ZDO_ProcessUserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 21
        MOV     A,#-0x15
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine73 & 0xFFFF
// 1959   uint8 *msg;
// 1960   uint16 aoi;
// 1961   UserDescriptorFormat_t userDesc;
// 1962   uint8 outMsg[3];
// 1963   uint8 status;
// 1964 
// 1965   msg = inMsg->asdu;
// 1966   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_110:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        CLR     A
        XCH     A,R2
        MOV     R3,A
        MOV     A,R4
        ADD     A,R2
        MOV     ?V0,A
        CLR     A
        ADDC    A,R3
        MOV     ?V1,A
// 1967 
// 1968   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_ProcessUserDescSet_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_ProcessUserDescSet_0:
        JZ      $+5
        LJMP    ??ZDO_ProcessUserDescSet_1 & 0xFFFF
// 1969   {
// 1970     userDesc.len = (msg[2] < AF_MAX_USER_DESCRIPTOR_LEN) ? msg[2] : AF_MAX_USER_DESCRIPTOR_LEN;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x10
        JNC     ??ZDO_ProcessUserDescSet_2
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        SJMP    ??ZDO_ProcessUserDescSet_3
??ZDO_ProcessUserDescSet_2:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x10
??ZDO_ProcessUserDescSet_3:
        MOVX    @DPTR,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine39 & 0xFFFF
// 1971     msg ++;  // increment one for the length field
// 1972 
// 1973     osal_memcpy( userDesc.desc, &msg[2], userDesc.len );
??CrossCallReturnLabel_58:
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1974     osal_nv_write( ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc );
        ; Setup parameters for call to function osal_nv_write
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     ?V2,#0x11
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1975     if ( userDesc.len != 0 )
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPTR,#ZDO_Config_Node_Descriptor
        JZ      ??ZDO_ProcessUserDescSet_4
// 1976     {
// 1977       ZDO_Config_Node_Descriptor.UserDescAvail = TRUE;
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.4
        SJMP    ??ZDO_ProcessUserDescSet_5
// 1978     }
// 1979     else
// 1980     {
// 1981       ZDO_Config_Node_Descriptor.UserDescAvail = FALSE;
??ZDO_ProcessUserDescSet_4:
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.4
??ZDO_ProcessUserDescSet_5:
        MOVX    @DPTR,A
// 1982     }
// 1983 
// 1984     status = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        SJMP    ??ZDO_ProcessUserDescSet_6
// 1985   }
// 1986   else
// 1987   {
// 1988     status =  ZDP_NOT_SUPPORTED;
??ZDO_ProcessUserDescSet_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
??ZDO_ProcessUserDescSet_6:
        MOVX    @DPTR,A
// 1989   }
// 1990 
// 1991   outMsg[0] = status;
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1992   outMsg[1] = LO_UINT16( aoi );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0
        MOVX    @DPTR,A
// 1993   outMsg[2] = LO_UINT16( aoi );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0
        MOVX    @DPTR,A
// 1994 
// 1995   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr), User_Desc_conf, 3, outMsg,
// 1996                inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_301:
        ADDC    A,R7
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_244:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     ?V0,#0x14
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R1,#0x3
        LCALL   ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_294:
        LCALL   `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1997 }
        MOV     A,#0x15
        LJMP    ?Subroutine10 & 0xFFFF
          CFI EndBlock cfiBlock402

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond403 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_301
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker405 Using cfiCommon1
          CFI (cfiPicker405) NoFunction
          CFI (cfiPicker405) Picker
        MOV     A,R6
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiPicker405
        REQUIRE ??Subroutine174_0
        ; // Fall through to label ??Subroutine174_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine174_0:
          CFI Block cfiCond406 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_299
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_300
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond408 Using cfiCommon0
          CFI (cfiCond408) Function ZDO_ProcessUserDescSet
          CFI (cfiCond408) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond408) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond408) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond408) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond408) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond408) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond408) CFA_SP SP+-2
          CFI (cfiCond408) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker410 Using cfiCommon1
          CFI (cfiPicker410) NoFunction
          CFI (cfiPicker410) Picker
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_307:
        RET
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiPicker410

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine132:
          CFI Block cfiCond411 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_86
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+-4
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_163
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-4
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_164
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond414) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+-4
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_245
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond415) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond415) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond415) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond415) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond415) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond415) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond415) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond415) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond415) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond415) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+-4
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_246
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond416) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond416) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond416) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-4
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_247
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond417) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+-4
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function ZDO_ProcessUserDescSet
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_301
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+-4
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_302
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-5
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_299
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-5
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_300
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-5
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_40
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+-4
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_41
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-4
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker424 Using cfiCommon1
          CFI (cfiPicker424) NoFunction
          CFI (cfiPicker424) Picker
        ADD     A,#0xe
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiPicker424

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond425 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_109
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function ZDO_ProcessUserDescSet
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-2
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker427 Using cfiCommon1
          CFI (cfiPicker427) NoFunction
          CFI (cfiPicker427) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R6
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_309:
        ADDC    A,R7
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_313:
        RET
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiPicker427

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine151:
          CFI Block cfiCond428 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_1
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+-6
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_394
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond430) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-6
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_395
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-6
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_396
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-6
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_397
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond433) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond433) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond433) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond433) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond433) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond433) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond433) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-6
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_143
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-6
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_144
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-6
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_145
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-6
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_135
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+-6
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_136
          CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond438) CFA_SP SP+-6
          CFI (cfiCond438) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond439 Using cfiCommon0
          CFI (cfiCond439) Function ZDO_ParseEPListRsp
          CFI (cfiCond439) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_137
          CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond439) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond439) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond439) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond439) CFA_SP SP+-6
          CFI (cfiCond439) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function ZDO_ParseUserDescRsp
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_138
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond440) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+-6
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_139
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-6
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_140
          CFI (cfiCond442) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond442) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond442) CFA_SP SP+-11
          CFI Block cfiPicker443 Using cfiCommon1
          CFI (cfiPicker443) NoFunction
          CFI (cfiPicker443) Picker
        MOV     A,R2
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiPicker443
        REQUIRE ??Subroutine175_0
        ; // Fall through to label ??Subroutine175_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine175_0:
          CFI Block cfiCond444 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_97
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_98
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-4
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_274
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+-4
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_275
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-4
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_278
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond448) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond448) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond448) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond448) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond448) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond448) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond448) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond448) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond448) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-4
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_279
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond449) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond449) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond449) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond449) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond449) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond449) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond449) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-4
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_280
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond450) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-4
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_281
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond451) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond451) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond451) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-4
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_276
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-4
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ZDO_ParseAddrRsp
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_277
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-4
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_109
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-4
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ZDO_ProcessUserDescSet
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_110
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-4
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_0
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-6
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_1
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-6
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_394
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-6
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_395
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-6
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_396
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-6
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_397
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond461) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond461) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond461) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond461) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond461) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-6
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_143
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-6
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_144
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-6
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_145
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-6
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_135
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-6
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_136
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-6
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDO_ParseEPListRsp
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_137
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-6
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDO_ParseUserDescRsp
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_138
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-6
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_139
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-6
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_140
          CFI (cfiCond470) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond470) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond470) CFA_SP SP+-11
          CFI Block cfiPicker471 Using cfiCommon1
          CFI (cfiPicker471) NoFunction
          CFI (cfiPicker471) Picker
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiPicker471

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine129:
          CFI Block cfiCond472 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_109
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDO_ProcessUserDescSet
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_110
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-4
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_0
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-4
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_1
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+-4
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker476 Using cfiCommon1
          CFI (cfiPicker476) NoFunction
          CFI (cfiPicker476) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiPicker476
        REQUIRE ??Subroutine176_0
        ; // Fall through to label ??Subroutine176_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine176_0:
          CFI Block cfiCond477 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_315
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_109
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-4
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function ZDO_ProcessUserDescSet
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_110
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-4
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_0
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-4
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_1
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-4
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker482 Using cfiCommon1
          CFI (cfiPicker482) NoFunction
          CFI (cfiPicker482) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiPicker482
// 1998 
// 1999 /*********************************************************************
// 2000  * @fn          ZDO_ProcessDeviceAnnce
// 2001  *
// 2002  * @brief       This function processes a device annouce message.
// 2003  *
// 2004  * @param       inMsg - incoming message
// 2005  *
// 2006  * @return      none
// 2007  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2008 void ZDO_ProcessDeviceAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessDeviceAnnce:
          CFI Block cfiBlock483 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
        CODE
// 2009 {
        FUNCALL ZDO_ProcessDeviceAnnce, ZDO_ParseDeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemoveAllStranded
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_CheckNewAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZMacSetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborUpdateNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, RTG_RemoveRtgEntry
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 32
        MOV     A,#-0x20
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
// 2010   ZDO_DeviceAnnce_t Annce;
// 2011   AddrMgrEntry_t addrEntry;
// 2012   uint8 parentExt[Z_EXTADDR_LEN];
// 2013 
// 2014   // Parse incoming message
// 2015   ZDO_ParseDeviceAnnce( inMsg, &Annce );
        ; Setup parameters for call to function ZDO_ParseDeviceAnnce
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        LCALL   `??ZDO_ParseDeviceAnnce::?relay`; Banked call to: ZDO_ParseDeviceAnnce
// 2016 
// 2017   if ( ZSTACK_END_DEVICE_BUILD )
// 2018   {
// 2019     // Make sure the message didn't come from myself - end device only
// 2020     if ( osal_ExtAddrEqual( NLME_GetExtAddr(), Annce.extAddr ) && Annce.nwkAddr == NLME_GetShortAddr() )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_0
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_1
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_1:
        JNZ     $+5
        LJMP    ??ZDO_ProcessDeviceAnnce_2 & 0xFFFF
// 2021     {
// 2022       return;
// 2023     }
// 2024   }
// 2025 
// 2026 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 2027   // Clean up the neighbor table
// 2028   nwkNeighborRemoveAllStranded();
??ZDO_ProcessDeviceAnnce_0:
        ; Setup parameters for call to function nwkNeighborRemoveAllStranded
        LCALL   `??nwkNeighborRemoveAllStranded::?relay`; Banked call to: nwkNeighborRemoveAllStranded
// 2029 
// 2030   // If address conflict is detected, no need to update the address manager
// 2031   if ( NLME_CheckNewAddrSet( Annce.nwkAddr, Annce.extAddr )== ZFailure )
        ; Setup parameters for call to function NLME_CheckNewAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_464:
        LCALL   `??NLME_CheckNewAddrSet::?relay`; Banked call to: NLME_CheckNewAddrSet
        MOV     A,R1
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessDeviceAnnce_2 & 0xFFFF
// 2032   {
// 2033     return;
// 2034   }
// 2035 #endif
// 2036 
// 2037 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 2038   // Check for parent's address
// 2039   NLME_GetCoordExtAddr( parentExt );
        ; Setup parameters for call to function NLME_GetCoordExtAddr
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??NLME_GetCoordExtAddr::?relay`; Banked call to: NLME_GetCoordExtAddr
// 2040   if ( osal_ExtAddrEqual( parentExt, Annce.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_3
// 2041   {
// 2042     if ( Annce.nwkAddr != NLME_GetCoordShortAddr() )
        ; Setup parameters for call to function NLME_GetCoordShortAddr
        LCALL   `??NLME_GetCoordShortAddr::?relay`; Banked call to: NLME_GetCoordShortAddr
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_4
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_4:
        JZ      ??ZDO_ProcessDeviceAnnce_3
// 2043     {
// 2044       // Set the Parent's MAC's new short address
// 2045       _NIB.nwkCoordAddress = Annce.nwkAddr;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_421:
        MOV     DPTR,#_NIB + 23
        LCALL   ??Subroutine192_0 & 0xFFFF
// 2046       ZMacSetReq( ZMacCoordShortAddress, (byte*)&(_NIB.nwkCoordAddress) );
??CrossCallReturnLabel_412:
        ; Setup parameters for call to function ZMacSetReq
        MOV     R2,#(_NIB + 23) & 0xff
        MOV     R3,#((_NIB + 23) >> 8) & 0xff
        MOV     R1,#0x4b
        LCALL   `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
// 2047     }
// 2048   }
// 2049 
// 2050   if ( ZSTACK_ROUTER_BUILD )
// 2051   {
// 2052     // If the device annce comes from a end device child that has moved
// 2053     // to another parent, remove it from associated device list
// 2054 
// 2055     // If the dev annce is coming from other device's children,
// 2056     // (The dev annce from its own children shall be unicast to itself,
// 2057     // So check the mac destination address)
// 2058     // Remove it from the associated device list. If it is not
// 2059     // a child, no action will be taken in AssocRemove() anyway.
// 2060     if ( inMsg->macDestAddr != NLME_GetShortAddr() )
// 2061     {
// 2062       associated_devices_t *dev_ptr;
// 2063 
// 2064       // If it's an end device child
// 2065       dev_ptr = AssocGetWithExt( Annce.extAddr );
// 2066       if ( dev_ptr )
// 2067       {
// 2068         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2069              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
// 2070         {
// 2071           AssocRemove( Annce.extAddr );
// 2072         }
// 2073       }
// 2074 
// 2075 #if defined ( ZIGBEE_CHILD_AGING )
// 2076       // Remove the address from the SrcMatch table,
// 2077       // just in case the device was aged out by Child Management Table process
// 2078       if ( ( pNwkNotMyChildListDelete != NULL ) &&
// 2079            ( zgChildAgingEnable == TRUE ) )
// 2080       {
// 2081         pNwkNotMyChildListDelete( Annce.nwkAddr );
// 2082       }
// 2083 #endif // ZIGBEE_CHILD_AGING
// 2084     }
// 2085 
// 2086     if ( Annce.nwkAddr != NLME_GetShortAddr() )
// 2087     {
// 2088       // If an associated device is found with matched extended Address,
// 2089       // update its short address
// 2090       if ( AssocChangeNwkAddr( Annce.nwkAddr, Annce.extAddr ) )
// 2091       {
// 2092         // Set event to save NV
// 2093         ZDApp_NVUpdate();
// 2094       }
// 2095     }
// 2096   }
// 2097 
// 2098   // Update the neighbor table
// 2099   nwkNeighborUpdateNwkAddr( Annce.nwkAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_3:
        ; Setup parameters for call to function nwkNeighborUpdateNwkAddr
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_465:
        LCALL   `??nwkNeighborUpdateNwkAddr::?relay`; Banked call to: nwkNeighborUpdateNwkAddr
// 2100 
// 2101   // Assume that the device has moved, remove existing routing entries
// 2102   RTG_RemoveRtgEntry( Annce.nwkAddr, 0 );
        ; Setup parameters for call to function RTG_RemoveRtgEntry
        MOV     R1,#0x0
        LCALL   ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_463:
        LCALL   `??RTG_RemoveRtgEntry::?relay`; Banked call to: RTG_RemoveRtgEntry
// 2103 
// 2104 #endif // ZIGBEE_STOCHASTIC_ADDRESSING
// 2105 
// 2106   // Fill in the extended address in address manager if we don't have it already.
// 2107   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine50 & 0xFFFF
// 2108   addrEntry.nwkAddr = Annce.nwkAddr;
??CrossCallReturnLabel_77:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine192_0 & 0xFFFF
// 2109   if ( AddrMgrEntryLookupNwk( &addrEntry ) )
??CrossCallReturnLabel_413:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_5
// 2110   {
// 2111     osal_memset( parentExt, 0, Z_EXTADDR_LEN );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
// 2112     if ( osal_ExtAddrEqual( parentExt, addrEntry.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_5
// 2113     {
// 2114       AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 2115       AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 2116     }
// 2117   }
// 2118 
// 2119   // Update the short address in address manager if it's been changed
// 2120   AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_5:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 2121   if ( AddrMgrEntryLookupExt( &addrEntry ) )
        ; Setup parameters for call to function AddrMgrEntryLookupExt
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryLookupExt::?relay`; Banked call to: AddrMgrEntryLookupExt
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_2
// 2122   {
// 2123     if ( addrEntry.nwkAddr != Annce.nwkAddr )
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_422:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_6
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_6:
        JZ      ??ZDO_ProcessDeviceAnnce_2
// 2124     {
// 2125       addrEntry.nwkAddr = Annce.nwkAddr;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_423:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine192_0 & 0xFFFF
// 2126       AddrMgrEntryUpdate( &addrEntry );
??CrossCallReturnLabel_414:
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 2127     }
// 2128   }
// 2129 }
??ZDO_ProcessDeviceAnnce_2:
        MOV     A,#0x20
        LJMP    ??Subroutine154_0 & 0xFFFF
          CFI EndBlock cfiBlock483

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond484 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_78
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-2
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker486 Using cfiCommon1
          CFI (cfiPicker486) NoFunction
          CFI (cfiPicker486) Picker
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiPicker486
// 2130 
// 2131 /*********************************************************************
// 2132  * @fn          ZDO_BuildSimpleDescBuf
// 2133  *
// 2134  * @brief       Build a byte sequence representation of a Simple Descriptor.
// 2135  *
// 2136  * @param       buf  - pointer to a byte array big enough for data.
// 2137  * @param       desc - SimpleDescriptionFormat_t *
// 2138  *
// 2139  * @return      none
// 2140  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2141 void ZDO_BuildSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_BuildSimpleDescBuf:
          CFI Block cfiBlock487 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
        CODE
// 2142 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2143   byte cnt;
// 2144   uint16 *ptr;
// 2145 
// 2146   *buf++ = desc->EndPoint;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine177_0 & 0xFFFF
??CrossCallReturnLabel_316:
        MOVX    @DPTR,A
// 2147   *buf++ = HI_UINT16( desc->AppProfId );
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_317:
        LCALL   ?Subroutine28 & 0xFFFF
// 2148   *buf++ = LO_UINT16( desc->AppProfId );
??CrossCallReturnLabel_34:
        MOVX    @DPTR,A
// 2149   *buf++ = HI_UINT16( desc->AppDeviceId );
        MOV     A,R4
        ADD     A,#0x3
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_318:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine28 & 0xFFFF
// 2150   *buf++ = LO_UINT16( desc->AppDeviceId );
??CrossCallReturnLabel_35:
        LCALL   ?Subroutine40 & 0xFFFF
// 2151 
// 2152   *buf++ = (byte)(desc->AppDevVer << 4);
??CrossCallReturnLabel_61:
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine40 & 0xFFFF
// 2153 
// 2154   *buf++ = desc->AppNumInClusters;
??CrossCallReturnLabel_62:
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_319:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x7
        MOV     R2,A
        JNC     ??ZDO_BuildSimpleDescBuf_0
        INC     R3
// 2155   ptr = desc->pAppInClusterList;
??ZDO_BuildSimpleDescBuf_0:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine87 & 0xFFFF
// 2156   for ( cnt = 0; cnt < desc->AppNumInClusters; ptr++, cnt++ )
??CrossCallReturnLabel_428:
        MOV     R6,#0x0
        SJMP    ??ZDO_BuildSimpleDescBuf_1
// 2157   {
// 2158     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_2:
        LCALL   ?Subroutine17 & 0xFFFF
// 2159     *buf++ = LO_UINT16( *ptr );
// 2160   }
??CrossCallReturnLabel_14:
        JNC     ??ZDO_BuildSimpleDescBuf_3
        INC     R3
??ZDO_BuildSimpleDescBuf_3:
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        JNC     ??ZDO_BuildSimpleDescBuf_4
        INC     R1
??ZDO_BuildSimpleDescBuf_4:
        INC     R6
??ZDO_BuildSimpleDescBuf_1:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R6
        CLR     C
        SUBB    A,R7
        JC      ??ZDO_BuildSimpleDescBuf_2
// 2161 
// 2162   *buf++ = desc->AppNumOutClusters;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_320:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
// 2163   ptr = desc->pAppOutClusterList;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine87 & 0xFFFF
// 2164   for ( cnt = 0; cnt < desc->AppNumOutClusters; ptr++, cnt++ )
??CrossCallReturnLabel_429:
        MOV     R6,#0x0
        SJMP    ??ZDO_BuildSimpleDescBuf_5
// 2165   {
// 2166     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_6:
        LCALL   ?Subroutine17 & 0xFFFF
// 2167     *buf++ = LO_UINT16( *ptr );
// 2168   }
??CrossCallReturnLabel_15:
        JNC     ??ZDO_BuildSimpleDescBuf_7
        INC     R3
??ZDO_BuildSimpleDescBuf_7:
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        JNC     ??ZDO_BuildSimpleDescBuf_8
        INC     R1
??ZDO_BuildSimpleDescBuf_8:
        INC     R6
??ZDO_BuildSimpleDescBuf_5:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R6
        CLR     C
        SUBB    A,R7
        JC      ??ZDO_BuildSimpleDescBuf_6
// 2169 }
        LJMP    ??Subroutine155_0 & 0xFFFF
          CFI EndBlock cfiBlock487

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond488 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_317
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-2
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-2
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-2
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker492 Using cfiCommon1
          CFI (cfiPicker492) NoFunction
          CFI (cfiPicker492) Picker
        INC     DPTR
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiPicker492
        REQUIRE ??Subroutine177_0
        ; // Fall through to label ??Subroutine177_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine177_0:
          CFI Block cfiCond493 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_316
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-2
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-2
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-2
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-2
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker498 Using cfiCommon1
          CFI (cfiPicker498) NoFunction
          CFI (cfiPicker498) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiPicker498

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond499 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-2
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker501 Using cfiCommon1
          CFI (cfiPicker501) NoFunction
          CFI (cfiPicker501) Picker
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiPicker501

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond502 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-2
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker504 Using cfiCommon1
          CFI (cfiPicker504) NoFunction
          CFI (cfiPicker504) Picker
        INC     DPTR
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_181:
        INC     DPTR
        RET
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiPicker504

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond505 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+-2
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker507 Using cfiCommon1
          CFI (cfiPicker507) NoFunction
          CFI (cfiPicker507) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_182:
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        RET
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiPicker507

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond508 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_35
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-4
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_14
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-4
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_15
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-4
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker512 Using cfiCommon1
          CFI (cfiPicker512) NoFunction
          CFI (cfiPicker512) Picker
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_220:
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        RET
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiPicker512
// 2170 
// 2171 #if ( ZG_BUILD_COORDINATOR_TYPE )
// 2172 /*********************************************************************
// 2173  * @fn      ZDO_MatchEndDeviceBind()
// 2174  *
// 2175  * @brief
// 2176  *
// 2177  *   Called to match end device binding requests
// 2178  *
// 2179  * @param  bindReq  - binding request information
// 2180  * @param  SecurityUse - Security enable/disable
// 2181  *
// 2182  * @return  none
// 2183  */
// 2184 void ZDO_MatchEndDeviceBind( ZDEndDeviceBind_t *bindReq )
// 2185 {
// 2186   zAddrType_t dstAddr;
// 2187   uint8 sendRsp = FALSE;
// 2188   uint8 status;
// 2189 
// 2190   // Is this the first request?
// 2191   if ( matchED == NULL )
// 2192   {
// 2193     // Create match info structure
// 2194     matchED = (ZDMatchEndDeviceBind_t *)osal_mem_alloc( sizeof ( ZDMatchEndDeviceBind_t ) );
// 2195     if ( matchED )
// 2196     {
// 2197       // Clear the structure
// 2198       osal_memset( (uint8 *)matchED, 0, sizeof ( ZDMatchEndDeviceBind_t ) );
// 2199 
// 2200       // Copy the first request's information
// 2201       if ( !ZDO_CopyMatchInfo( &(matchED->ed1), bindReq ) )
// 2202       {
// 2203         status = ZDP_NO_ENTRY;
// 2204         sendRsp = TRUE;
// 2205       }
// 2206     }
// 2207     else
// 2208     {
// 2209       status = ZDP_NO_ENTRY;
// 2210       sendRsp = TRUE;
// 2211     }
// 2212 
// 2213     if ( !sendRsp )
// 2214     {
// 2215       // Set into the correct state
// 2216       matchED->state = ZDMATCH_WAIT_REQ;
// 2217 
// 2218       // Setup the timeout
// 2219       APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
// 2220     }
// 2221   }
// 2222   else
// 2223   {
// 2224       matchED->state = ZDMATCH_SENDING_BINDS;
// 2225 
// 2226       // Copy the 2nd request's information
// 2227       if ( !ZDO_CopyMatchInfo( &(matchED->ed2), bindReq ) )
// 2228       {
// 2229         status = ZDP_NO_ENTRY;
// 2230         sendRsp = TRUE;
// 2231       }
// 2232 
// 2233       // Make a source match for ed1
// 2234       matchED->ed1numMatched = ZDO_CompareClusterLists(
// 2235                   matchED->ed1.numOutClusters, matchED->ed1.outClusters,
// 2236                   matchED->ed2.numInClusters, matchED->ed2.inClusters, ZDOBuildBuf );
// 2237       if ( matchED->ed1numMatched )
// 2238       {
// 2239         // Save the match list
// 2240         matchED->ed1Matched = osal_mem_alloc( (short)(matchED->ed1numMatched * sizeof ( uint16 )) );
// 2241         if ( matchED->ed1Matched )
// 2242         {
// 2243           osal_memcpy( matchED->ed1Matched, ZDOBuildBuf, (matchED->ed1numMatched * sizeof ( uint16 )) );
// 2244         }
// 2245         else
// 2246         {
// 2247           // Allocation error, stop
// 2248           status = ZDP_NO_ENTRY;
// 2249           sendRsp = TRUE;
// 2250         }
// 2251       }
// 2252 
// 2253       // Make a source match for ed2
// 2254       matchED->ed2numMatched = ZDO_CompareClusterLists(
// 2255                   matchED->ed2.numOutClusters, matchED->ed2.outClusters,
// 2256                   matchED->ed1.numInClusters, matchED->ed1.inClusters, ZDOBuildBuf );
// 2257       if ( matchED->ed2numMatched )
// 2258       {
// 2259         // Save the match list
// 2260         matchED->ed2Matched = osal_mem_alloc( (short)(matchED->ed2numMatched * sizeof ( uint16 )) );
// 2261         if ( matchED->ed2Matched )
// 2262         {
// 2263           osal_memcpy( matchED->ed2Matched, ZDOBuildBuf, (matchED->ed2numMatched * sizeof ( uint16 )) );
// 2264         }
// 2265         else
// 2266         {
// 2267           // Allocation error, stop
// 2268           status = ZDP_NO_ENTRY;
// 2269           sendRsp = TRUE;
// 2270         }
// 2271       }
// 2272 
// 2273       if ( (sendRsp == FALSE) && (matchED->ed1numMatched || matchED->ed2numMatched) )
// 2274       {
// 2275         // Do the first unbind/bind state
// 2276         ZDMatchSendState( ZDMATCH_REASON_START, ZDP_SUCCESS, 0 );
// 2277       }
// 2278       else
// 2279       {
// 2280         status = ZDP_NO_MATCH;
// 2281         sendRsp = TRUE;
// 2282       }
// 2283   }
// 2284 
// 2285   if ( sendRsp )
// 2286   {
// 2287     // send response to this requester
// 2288     dstAddr.addrMode = Addr16Bit;
// 2289     dstAddr.addr.shortAddr = bindReq->srcAddr;
// 2290     ZDP_EndDeviceBindRsp( bindReq->TransSeq, &dstAddr, status, bindReq->SecurityUse );
// 2291 
// 2292     if ( matchED->state == ZDMATCH_SENDING_BINDS )
// 2293     {
// 2294       // send response to first requester
// 2295       dstAddr.addrMode = Addr16Bit;
// 2296       dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
// 2297       ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, status, matchED->ed1.SecurityUse );
// 2298     }
// 2299 
// 2300     // Process ended - release memory used
// 2301     ZDO_RemoveMatchMemory();
// 2302   }
// 2303 }
// 2304 
// 2305 /*********************************************************************
// 2306  * @fn      ZDO_RemoveMatchMemory()
// 2307  *
// 2308  * @brief   Called to clear the memory used for the end device bind.
// 2309  *
// 2310  * @param  none
// 2311  *
// 2312  * @return  none
// 2313  */
// 2314 static void ZDO_RemoveMatchMemory( void )
// 2315 {
// 2316   if ( matchED != NULL )
// 2317   {
// 2318     if ( matchED->ed2Matched != NULL )
// 2319     {
// 2320       osal_mem_free( matchED->ed2Matched );
// 2321     }
// 2322     if ( matchED->ed1Matched != NULL )
// 2323     {
// 2324       osal_mem_free( matchED->ed1Matched );
// 2325     }
// 2326     if ( matchED->ed1.inClusters != NULL )
// 2327     {
// 2328       osal_mem_free( matchED->ed1.inClusters );
// 2329     }
// 2330     if ( matchED->ed1.outClusters != NULL )
// 2331     {
// 2332       osal_mem_free( matchED->ed1.outClusters );
// 2333     }
// 2334     if ( matchED->ed2.inClusters != NULL )
// 2335     {
// 2336       osal_mem_free( matchED->ed2.inClusters );
// 2337     }
// 2338     if ( matchED->ed2.outClusters != NULL )
// 2339     {
// 2340       osal_mem_free( matchED->ed2.outClusters );
// 2341     }
// 2342 
// 2343     osal_mem_free( matchED );
// 2344     matchED = (ZDMatchEndDeviceBind_t *)NULL;
// 2345   }
// 2346 }
// 2347 
// 2348 /*********************************************************************
// 2349  * @fn      ZDO_CopyMatchInfo()
// 2350  *
// 2351  * @brief   Called to copy memory used for the end device bind.
// 2352  *
// 2353  * @param  srcReq - source information
// 2354  * @param  dstReq - destination location
// 2355  *
// 2356  * @return  TRUE if copy was successful.
// 2357  */
// 2358 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq )
// 2359 {
// 2360   uint8 allOK = TRUE;
// 2361 
// 2362   // Copy bind information into the match info structure
// 2363   osal_memcpy( (uint8 *)destReq, srcReq, sizeof ( ZDEndDeviceBind_t ) );
// 2364 
// 2365   // Initialize the destination cluster pointers
// 2366   destReq->inClusters = NULL;
// 2367   destReq->outClusters = NULL;
// 2368 
// 2369   // Copy input cluster IDs
// 2370   if ( srcReq->numInClusters )
// 2371   {
// 2372     destReq->inClusters = osal_mem_alloc( (short)(srcReq->numInClusters * sizeof ( uint16 )) );
// 2373     if ( destReq->inClusters )
// 2374     {
// 2375       // Copy the clusters
// 2376       osal_memcpy( (uint8*)(destReq->inClusters), (uint8 *)(srcReq->inClusters),
// 2377                       (srcReq->numInClusters * sizeof ( uint16 )) );
// 2378     }
// 2379     else
// 2380     {
// 2381       allOK = FALSE;
// 2382     }
// 2383   }
// 2384 
// 2385   // Copy output cluster IDs
// 2386   if ( srcReq->numOutClusters )
// 2387   {
// 2388     destReq->outClusters = osal_mem_alloc( (short)(srcReq->numOutClusters * sizeof ( uint16 )) );
// 2389     if ( destReq->outClusters )
// 2390     {
// 2391       // Copy the clusters
// 2392       osal_memcpy( (uint8 *)(destReq->outClusters), (uint8 *)(srcReq->outClusters),
// 2393                       (srcReq->numOutClusters * sizeof ( uint16 )) );
// 2394     }
// 2395     else
// 2396     {
// 2397       allOK = FALSE;
// 2398     }
// 2399   }
// 2400 
// 2401   if ( allOK == FALSE )
// 2402   {
// 2403     if ( destReq->inClusters != NULL )
// 2404     {
// 2405       osal_mem_free( destReq->inClusters );
// 2406     }
// 2407     if ( destReq->outClusters != NULL )
// 2408     {
// 2409       osal_mem_free( destReq->outClusters );
// 2410     }
// 2411   }
// 2412 
// 2413   return ( allOK );
// 2414 }
// 2415 
// 2416 /*********************************************************************
// 2417  * @fn      ZDMatchSendState()
// 2418  *
// 2419  * @brief   State machine for the End device match message algorithm.
// 2420  *
// 2421  * @param  reason - state of algoritm
// 2422  * @param  status - initial message status
// 2423  * @param  TransSeq - next transaction sequence number
// 2424  *
// 2425  * @return  FALSE if error and we are not currently matching, TRUE
// 2426  *          if success.
// 2427  */
// 2428 uint8 ZDMatchSendState( uint8 reason, uint8 status, uint8 TransSeq )
// 2429 {
// 2430   uint8 *dstIEEEAddr = NULL;
// 2431   uint8 dstEP = 0xFF;
// 2432   zAddrType_t dstAddr;
// 2433   zAddrType_t destinationAddr;
// 2434   uint16 msgType;
// 2435   uint16 clusterID = 0xFFFF;
// 2436   ZDEndDeviceBind_t *ed = NULL;
// 2437   uint8 rspStatus = ZDP_SUCCESS;
// 2438 
// 2439   if ( matchED == NULL )
// 2440   {
// 2441     return ( FALSE );
// 2442   }
// 2443 
// 2444   // Check sequence number
// 2445   if ( reason == ZDMATCH_REASON_BIND_RSP || reason == ZDMATCH_REASON_UNBIND_RSP )
// 2446   {
// 2447     if ( TransSeq != matchED->transSeq )
// 2448     {
// 2449       return( FALSE ); // ignore the message
// 2450     }
// 2451   }
// 2452 
// 2453   // turn off timer
// 2454   APS_SetEndDeviceBindTimeout( 0, ZDO_EndDeviceBindMatchTimeoutCB );
// 2455 
// 2456   if ( reason == ZDMATCH_REASON_TIMEOUT )
// 2457   {
// 2458     rspStatus = ZDP_TIMEOUT;    // The process will stop
// 2459   }
// 2460 
// 2461   if ( reason == ZDMATCH_REASON_START || reason == ZDMATCH_REASON_BIND_RSP )
// 2462   {
// 2463     matchED->sending = ZDMATCH_SENDING_UNBIND;
// 2464 
// 2465     if ( reason == ZDMATCH_REASON_BIND_RSP && status != ZDP_SUCCESS )
// 2466     {
// 2467       rspStatus = status;
// 2468     }
// 2469   }
// 2470   else if ( reason == ZDMATCH_REASON_UNBIND_RSP )
// 2471   {
// 2472     if ( status == ZDP_SUCCESS )
// 2473     {
// 2474       matchED->sending = ZDMATCH_SENDING_UNBIND;
// 2475     }
// 2476     else
// 2477     {
// 2478       matchED->sending = ZDMATCH_SENDING_BIND;
// 2479     }
// 2480   }
// 2481 
// 2482   if ( reason != ZDMATCH_REASON_START && matchED->sending == ZDMATCH_SENDING_UNBIND )
// 2483   {
// 2484     // Move to the next cluster ID
// 2485     if ( matchED->ed1numMatched )
// 2486     {
// 2487       matchED->ed1numMatched--;
// 2488     }
// 2489     else if ( matchED->ed2numMatched )
// 2490     {
// 2491       matchED->ed2numMatched--;
// 2492     }
// 2493   }
// 2494 
// 2495   // What message do we send now
// 2496   if ( matchED->ed1numMatched )
// 2497   {
// 2498     ed = &(matchED->ed1);
// 2499     clusterID = matchED->ed1Matched[matchED->ed1numMatched-1];
// 2500     dstIEEEAddr = matchED->ed2.ieeeAddr;
// 2501     dstEP = matchED->ed2.endpoint;
// 2502   }
// 2503   else if ( matchED->ed2numMatched )
// 2504   {
// 2505     ed = &(matchED->ed2);
// 2506     clusterID = matchED->ed2Matched[matchED->ed2numMatched-1];
// 2507     dstIEEEAddr = matchED->ed1.ieeeAddr;
// 2508     dstEP = matchED->ed1.endpoint;
// 2509   }
// 2510 
// 2511   dstAddr.addrMode = Addr16Bit;
// 2512 
// 2513   // Send the next message
// 2514   if ( (rspStatus == ZDP_SUCCESS) && ed )
// 2515   {
// 2516     // Send unbind/bind message to source
// 2517     if ( matchED->sending == ZDMATCH_SENDING_UNBIND )
// 2518     {
// 2519       msgType = Unbind_req;
// 2520     }
// 2521     else
// 2522     {
// 2523       msgType = Bind_req;
// 2524     }
// 2525 
// 2526     dstAddr.addr.shortAddr = ed->srcAddr;
// 2527 
// 2528     // Save off the transaction sequence number
// 2529     matchED->transSeq = ZDP_TransID;
// 2530 
// 2531     destinationAddr.addrMode = Addr64Bit;
// 2532     osal_cpyExtAddr( destinationAddr.addr.extAddr, dstIEEEAddr );
// 2533 
// 2534     ZDP_BindUnbindReq( msgType, &dstAddr, ed->ieeeAddr, ed->endpoint, clusterID,
// 2535         &destinationAddr, dstEP, ed->SecurityUse );
// 2536 
// 2537     // Set timeout for response
// 2538     APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
// 2539   }
// 2540   else
// 2541   {
// 2542     // Send the response messages to requesting devices
// 2543     // send response to first requester
// 2544     dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
// 2545     ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, rspStatus, matchED->ed1.SecurityUse );
// 2546 
// 2547     // send response to second requester
// 2548     if ( matchED->state == ZDMATCH_SENDING_BINDS )
// 2549     {
// 2550       dstAddr.addr.shortAddr = matchED->ed2.srcAddr;
// 2551       ZDP_EndDeviceBindRsp( matchED->ed2.TransSeq, &dstAddr, rspStatus, matchED->ed2.SecurityUse );
// 2552     }
// 2553 
// 2554     // Process ended - release memory used
// 2555     ZDO_RemoveMatchMemory();
// 2556   }
// 2557 
// 2558   return ( TRUE );
// 2559 }
// 2560 
// 2561 /*********************************************************************
// 2562  * @fn      ZDO_EndDeviceBindMatchTimeoutCB()
// 2563  *
// 2564  * @brief   End device bind timeout.
// 2565  *
// 2566  * @param  none
// 2567  *
// 2568  * @return  none
// 2569  */
// 2570 static void ZDO_EndDeviceBindMatchTimeoutCB( void )
// 2571 {
// 2572   ZDMatchSendState( ZDMATCH_REASON_TIMEOUT, ZDP_TIMEOUT, 0 );
// 2573 }
// 2574 #endif // ZG_BUILD_COORDINATOR_TYPE
// 2575 
// 2576 /*********************************************************************
// 2577  * ZDO MESSAGE PARSING API FUNCTIONS
// 2578  */
// 2579 
// 2580 /*********************************************************************
// 2581  * @fn          ZDO_ParseEndDeviceBindReq
// 2582  *
// 2583  * @brief       This function parses the End_Device_Bind_req message.
// 2584  *
// 2585  *     NOTE:  The clusters lists in bindReq are allocated in this
// 2586  *            function and must be freed by that calling function.
// 2587  *
// 2588  * @param       inMsg  - incoming message (request)
// 2589  * @param       bindReq - pointer to place to parse message to
// 2590  *
// 2591  * @return      none
// 2592  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2593 void ZDO_ParseEndDeviceBindReq( zdoIncomingMsg_t *inMsg, ZDEndDeviceBind_t *bindReq )
ZDO_ParseEndDeviceBindReq:
          CFI Block cfiBlock513 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
        CODE
// 2594 {
        FUNCALL ZDO_ParseEndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 2595   uint8 *msg;
// 2596 
// 2597   // Parse the message
// 2598   bindReq->TransSeq = inMsg->TransSeq;
        MOV     A,R2
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_160:
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine36 & 0xFFFF
// 2599   bindReq->srcAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_51:
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_424:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine31 & 0xFFFF
// 2600   bindReq->SecurityUse = inMsg->SecurityUse;
??CrossCallReturnLabel_41:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOVX    @DPTR,A
// 2601   msg = inMsg->asdu;
        LCALL   ?Subroutine91 & 0xFFFF
// 2602 
// 2603   bindReq->localCoordinator = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_135:
        MOV     DPL,?V0
        MOV     DPH,A
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_379:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine193_0 & 0xFFFF
// 2604   msg += 2;
??CrossCallReturnLabel_405:
        MOV     A,?V0
        ADD     A,#0x2
        MOV     ?V0,A
        JNC     ??ZDO_ParseEndDeviceBindReq_0
        INC     ?V1
// 2605 
// 2606   osal_cpyExtAddr( bindReq->ieeeAddr, msg );
??ZDO_ParseEndDeviceBindReq_0:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,A
        MOV     R5,?V1
        MOV     A,R6
        ADD     A,#0x6
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2607   msg += Z_EXTADDR_LEN;
// 2608 
// 2609   bindReq->endpoint = *msg++;
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_302:
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,?V0
        ADD     A,#0x9
        MOV     ?V0,A
        JNC     ??ZDO_ParseEndDeviceBindReq_1
        INC     ?V1
// 2610   bindReq->profileID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseEndDeviceBindReq_1:
        MOV     DPL,A
        MOV     DPH,?V1
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_380:
        MOV     R0,A
        MOV     A,R6
        ADD     A,#0xf
        LCALL   ?Subroutine49 & 0xFFFF
// 2611   msg += 2;
// 2612 
// 2613   bindReq->inClusters = NULL;
??CrossCallReturnLabel_416:
        MOV     A,R6
        ADD     A,#0x12
        LCALL   ??Subroutine167_0 & 0xFFFF
??CrossCallReturnLabel_256:
        INC     DPTR
        MOVX    @DPTR,A
// 2614   bindReq->outClusters = NULL;
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine167_0 & 0xFFFF
??CrossCallReturnLabel_257:
        INC     DPTR
        LCALL   ?Subroutine34 & 0xFFFF
// 2615 
// 2616   if ((bindReq->numInClusters = *msg++) &&
// 2617       (bindReq->inClusters = (uint16*)osal_mem_alloc( (bindReq->numInClusters * sizeof( uint16 )))))
??CrossCallReturnLabel_47:
        MOV     A,R6
        ADD     A,#0x11
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R2
        MOVX    @DPTR,A
        MOV     A,?V0
        ADD     A,#0x3
        MOV     ?V0,A
        JNC     ??ZDO_ParseEndDeviceBindReq_2
        INC     ?V1
??ZDO_ParseEndDeviceBindReq_2:
        MOV     A,R2
        JZ      ??ZDO_ParseEndDeviceBindReq_3
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_445:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R0,?V2
        MOV     R1,?V3
        MOV     A,R6
        ADD     A,#0x12
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_322:
        JZ      ??ZDO_ParseEndDeviceBindReq_3
// 2618   {
// 2619     msg = ZDO_ConvertOTAClusters( bindReq->numInClusters, msg, bindReq->inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,R6
        ADD     A,#0x12
        LCALL   ?Subroutine76 & 0xFFFF
// 2620   }
??CrossCallReturnLabel_113:
        ADD     A,#0x11
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_331:
        MOV     R1,A
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV     ?V0,R2
        MOV     ?V1,R3
        SJMP    ??CrossCallReturnLabel_258
// 2621   else
// 2622   {
// 2623     bindReq->numInClusters = 0;
??ZDO_ParseEndDeviceBindReq_3:
        MOV     A,R6
        ADD     A,#0x11
        LCALL   ??Subroutine167_0 & 0xFFFF
// 2624   }
// 2625 
// 2626   if ((bindReq->numOutClusters = *msg++) &&
// 2627       (bindReq->outClusters = (uint16*)osal_mem_alloc((bindReq->numOutClusters * sizeof(uint16)))))
??CrossCallReturnLabel_258:
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R2,A
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_326:
        MOV     A,R2
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_50:
        MOV     ?V0,DPL
        MOV     ?V1,DPH
        JZ      ??ZDO_ParseEndDeviceBindReq_4
        MOV     A,R6
        ADD     A,#0x14
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_332:
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_446:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R0,?V2
        MOV     R1,?V3
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_323:
        JZ      ??ZDO_ParseEndDeviceBindReq_4
// 2628   {
// 2629     msg = ZDO_ConvertOTAClusters( bindReq->numOutClusters, msg, bindReq->outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ?Subroutine76 & 0xFFFF
// 2630   }
??CrossCallReturnLabel_114:
        ADD     A,#0x14
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_333:
        MOV     R1,A
        LCALL   `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP    ??CrossCallReturnLabel_260
// 2631   else
// 2632   {
// 2633     bindReq->numOutClusters = 0;
??ZDO_ParseEndDeviceBindReq_4:
        LCALL   ?Subroutine99 & 0xFFFF
// 2634   }
// 2635 }
??CrossCallReturnLabel_260:
        SJMP    ??Subroutine179_0
          CFI EndBlock cfiBlock513

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond514 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-2
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond516) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond516) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond516) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+-2
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-2
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker520 Using cfiCommon1
          CFI (cfiPicker520) NoFunction
          CFI (cfiPicker520) Picker
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_228:
        RET
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiPicker520

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine149:
          CFI Block cfiCond521 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_119
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_120
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-4
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_121
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond523) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond523) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond523) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-4
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_28
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-4
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_29
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-4
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_85
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-6
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_86
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-6
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_148
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-6
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function ZDO_ProcessUserDescReq
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_149
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-6
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDO_ProcessUserDescReq
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_150
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-6
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_157
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-4
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_158
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-4
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_159
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-4
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_160
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-4
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_161
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-5
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_162
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-5
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker537 Using cfiCommon1
          CFI (cfiPicker537) NoFunction
          CFI (cfiPicker537) Picker
        ADD     A,#0xf
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiPicker537

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond538 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-2
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker540 Using cfiCommon1
          CFI (cfiPicker540) NoFunction
          CFI (cfiPicker540) Picker
        LCALL   ??Subroutine158_0 & 0xFFFF
??CrossCallReturnLabel_340:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     A,R6
        RET
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiPicker540

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond541 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_322
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-2
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker543 Using cfiCommon1
          CFI (cfiPicker543) NoFunction
          CFI (cfiPicker543) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiPicker543
        REQUIRE ??Subroutine178_0
        ; // Fall through to label ??Subroutine178_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine178_0:
          CFI Block cfiCond544 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_321
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-2
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-2
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker547 Using cfiCommon1
          CFI (cfiPicker547) NoFunction
          CFI (cfiPicker547) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,R0
        ORL     A,R1
        RET
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiPicker547

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond548 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-2
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker550 Using cfiCommon1
          CFI (cfiPicker550) NoFunction
          CFI (cfiPicker550) Picker
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_193:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        RET
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiPicker550

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond551 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-2
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker553 Using cfiCommon1
          CFI (cfiPicker553) NoFunction
          CFI (cfiPicker553) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        MOV     A,R2
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_303:
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiPicker553

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock554 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock554
        REQUIRE ??Subroutine179_0
        ; // Fall through to label ??Subroutine179_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine179_0:
          CFI Block cfiBlock555 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock555
// 2636 
// 2637 /*********************************************************************
// 2638  * @fn          ZDO_ParseBindUnbindReq
// 2639  *
// 2640  * @brief       This function parses the Bind_req or Unbind_req message.
// 2641  *
// 2642  * @param       inMsg  - incoming message (request)
// 2643  * @param       pReq - place to put parsed information
// 2644  *
// 2645  * @return      none
// 2646  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2647 void ZDO_ParseBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ParseBindUnbindReq:
          CFI Block cfiBlock556 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
        CODE
// 2648 {
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 2649   uint8 *msg;
// 2650 
// 2651   msg = inMsg->asdu;
        LCALL   ?Subroutine91 & 0xFFFF
// 2652   osal_cpyExtAddr( pReq->srcAddress, msg );
??CrossCallReturnLabel_136:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2653   msg += Z_EXTADDR_LEN;
// 2654   pReq->srcEndpoint = *msg++;
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_95:
        MOV     A,?V0
        ADD     A,#0x9
        MOV     ?V0,A
        JNC     ??ZDO_ParseBindUnbindReq_0
        INC     ?V1
// 2655   pReq->clusterID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_0:
        MOV     DPL,A
        MOV     DPH,?V1
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_91:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine35 & 0xFFFF
// 2656   msg += 2;
// 2657   pReq->dstAddress.addrMode = *msg++;
??CrossCallReturnLabel_48:
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_99:
        MOV     A,?V0
        ADD     A,#0x3
        MOV     ?V0,A
        JNC     ??ZDO_ParseBindUnbindReq_1
        INC     ?V1
// 2658   if ( pReq->dstAddress.addrMode == Addr64Bit )
??ZDO_ParseBindUnbindReq_1:
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ParseBindUnbindReq_2
// 2659   {
// 2660     osal_cpyExtAddr( pReq->dstAddress.addr.extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0
        MOV     R5,?V1
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_166:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2661     msg += Z_EXTADDR_LEN;
// 2662     pReq->dstEndpoint = *msg;
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine109 & 0xFFFF
// 2663   }
??CrossCallReturnLabel_327:
        POP     A
          CFI CFA_SP SP+0
        SJMP    ??ZDO_ParseBindUnbindReq_3
// 2664   else
// 2665   {
// 2666     // copy group address
// 2667     pReq->dstAddress.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_2:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine74 & 0xFFFF
// 2668   }
??CrossCallReturnLabel_111:
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseBindUnbindReq_3:
        MOVX    @DPTR,A
// 2669 }
        LJMP    ??Subroutine155_0 & 0xFFFF
          CFI EndBlock cfiBlock556

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond557 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_165
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-2
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond559) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond559) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond559) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond559) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-2
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker560 Using cfiCommon1
          CFI (cfiPicker560) NoFunction
          CFI (cfiPicker560) Picker
        MOV     A,R6
        ADD     A,#0xb
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiPicker560

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond561 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_325
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-2
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker565 Using cfiCommon1
          CFI (cfiPicker565) NoFunction
          CFI (cfiPicker565) Picker
        MOV     A,R6
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiPicker565
        REQUIRE ??Subroutine180_0
        ; // Fall through to label ??Subroutine180_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine180_0:
          CFI Block cfiCond566 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_324
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-2
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-2
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker571 Using cfiCommon1
          CFI (cfiPicker571) NoFunction
          CFI (cfiPicker571) Picker
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiPicker571

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond572 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_135
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_136
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-2
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker574 Using cfiCommon1
          CFI (cfiPicker574) NoFunction
          CFI (cfiPicker574) Picker
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_209:
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        RET
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiPicker574

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond575 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-2
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDO_ParseUserDescRsp
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-2
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker578 Using cfiCommon1
          CFI (cfiPicker578) NoFunction
          CFI (cfiPicker578) Picker
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_194:
        RET
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiPicker578

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond579 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_47
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-4
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_50
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-4
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_48
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-4
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDO_ParseUserDescRsp
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_49
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-4
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker584 Using cfiCommon1
          CFI (cfiPicker584) NoFunction
          CFI (cfiPicker584) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        RET
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiPicker584
// 2670 
// 2671 /*********************************************************************
// 2672  * @fn      ZDO_ParseAddrRsp
// 2673  *
// 2674  * @brief   Turns the inMsg (incoming message) into the out parsed
// 2675  *          structure.
// 2676  *
// 2677  * @param   inMsg - incoming message
// 2678  *
// 2679  * @return  pointer to parsed structures.  This structure was
// 2680  *          allocated using osal_mem_alloc, so it must be freed
// 2681  *          by the calling function [osal_mem_free()].
// 2682  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2683 ZDO_NwkIEEEAddrResp_t *ZDO_ParseAddrRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseAddrRsp:
          CFI Block cfiBlock585 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
        CODE
// 2684 {
        FUNCALL ZDO_ParseAddrRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseAddrRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2685   ZDO_NwkIEEEAddrResp_t *rsp;
// 2686   uint8 *msg;
// 2687   byte cnt = 0;
        MOV     ?V2,#0x0
// 2688 
// 2689   // Calculate the number of items in the list
// 2690   if ( inMsg->asduLen > (1 + Z_EXTADDR_LEN + 2) )
        MOV     A,R6
        ADD     A,#0x10
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_334:
        CLR     C
        SUBB    A,#0xc
        JC      ??ZDO_ParseAddrRsp_0
// 2691   {
// 2692     cnt = inMsg->asdu[1 + Z_EXTADDR_LEN + 2];
        LCALL   ?Subroutine95 & 0xFFFF
// 2693   }
??CrossCallReturnLabel_147:
        LCALL   ??Subroutine163_0 & 0xFFFF
??CrossCallReturnLabel_435:
        XCH     A,R0
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V2,A
// 2694   else
// 2695   {
// 2696     cnt = 0;
// 2697   }
// 2698 
// 2699   // Make buffer
// 2700   rsp = (ZDO_NwkIEEEAddrResp_t *)osal_mem_alloc( sizeof(ZDO_NwkIEEEAddrResp_t) + (cnt * sizeof ( uint16 )) );
??ZDO_ParseAddrRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R0,?V2
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_203:
        MOV     A,R0
        ADD     A,#0xd
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 2701 
// 2702   if ( rsp )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 2703   {
// 2704     msg = inMsg->asdu;
        MOV     A,R6
        LCALL   ??Subroutine170_0 & 0xFFFF
??CrossCallReturnLabel_277:
        ADDC    A,R7
        LCALL   ??Subroutine190_0 & 0xFFFF
// 2705 
// 2706     rsp->status = *msg++;
??CrossCallReturnLabel_398:
        MOV     R0,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine41 & 0xFFFF
// 2707     if ( rsp->status == ZDO_SUCCESS )
??CrossCallReturnLabel_63:
        JZ      $+5
        LJMP    ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 2708     {
// 2709       osal_cpyExtAddr( rsp->extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2710       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_2
        INC     R7
// 2711       rsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_2:
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_381:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        LCALL   ??Subroutine193_0 & 0xFFFF
// 2712 
// 2713       msg += 2;
// 2714       rsp->numAssocDevs = 0;
??CrossCallReturnLabel_406:
        MOV     A,?V0
        ADD     A,#0xb
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_365:
        CLR     A
        MOVX    @DPTR,A
// 2715 
// 2716       // StartIndex field is only present if NumAssocDev field is non-zero.
// 2717       if ( cnt > 0 )
        MOV     A,?V2
        JZ      ??ZDO_ParseAddrRsp_1
// 2718       {
// 2719         uint16 *pList = &(rsp->devList[0]);
        MOV     A,?V0
        ADD     A,#0xd
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
// 2720         byte n = cnt;
// 2721 
// 2722         rsp->numAssocDevs = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0xb
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_366:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine19 & 0xFFFF
// 2723         rsp->startIndex = *msg++;
??CrossCallReturnLabel_18:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_377:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_3
        INC     R7
??ZDO_ParseAddrRsp_3:
        MOV     ?V3,?V2
// 2724 
// 2725         while ( n != 0 )
// 2726         {
// 2727           *pList++ = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_4:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine156_0 & 0xFFFF
??CrossCallReturnLabel_232:
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        JNC     ??ZDO_ParseAddrRsp_5
        INC     R1
// 2728           msg += sizeof( uint16 );
??ZDO_ParseAddrRsp_5:
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_6
        INC     R7
// 2729           n--;
// 2730         }
??ZDO_ParseAddrRsp_6:
        DEC     ?V3
        MOV     A,?V3
        JNZ     ??ZDO_ParseAddrRsp_4
// 2731       }
// 2732     }
// 2733   }
// 2734 
// 2735   return ( rsp );
??ZDO_ParseAddrRsp_1:
        MOV     R2,?V0
        MOV     R3,?V1
        LJMP    ?Subroutine4 & 0xFFFF
// 2736 }
          CFI EndBlock cfiBlock585

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond586 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_335
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-2
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ZDO_ProcessUserDescReq
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-2
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker589 Using cfiCommon1
          CFI (cfiPicker589) NoFunction
          CFI (cfiPicker589) Picker
        MOV     A,R6
        ADD     A,#0xe
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiPicker589
        REQUIRE ??Subroutine181_0
        ; // Fall through to label ??Subroutine181_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine181_0:
          CFI Block cfiCond590 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_329
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-2
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-2
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-2
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-2
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function ZDO_ParseAddrRsp
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-2
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-2
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-2
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ZDO_ProcessUserDescReq
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-2
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker599 Using cfiCommon1
          CFI (cfiPicker599) NoFunction
          CFI (cfiPicker599) Picker
        LCALL   ??Subroutine158_0 & 0xFFFF
??CrossCallReturnLabel_344:
        RET
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiPicker599

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond600 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
          CFI Conditional ??CrossCallReturnLabel_146
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDO_ParseAddrRsp
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-2
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker602 Using cfiCommon1
          CFI (cfiPicker602) NoFunction
          CFI (cfiPicker602) Picker
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_208:
        RET
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiPicker602

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine137:
          CFI Block cfiCond603 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
          CFI Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_146
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDO_ParseAddrRsp
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_147
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-4
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_99
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-4
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_100
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond606) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-4
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker607 Using cfiCommon1
          CFI (cfiPicker607) NoFunction
          CFI (cfiPicker607) Picker
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_231:
        RET
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiPicker607

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine150:
          CFI Block cfiCond608 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_82
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-6
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_87
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-6
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDO_ProcessUserDescReq
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_88
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-6
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_146
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-6
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ZDO_ParseAddrRsp
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_147
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-6
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_99
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-6
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_100
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-6
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker616 Using cfiCommon1
          CFI (cfiPicker616) NoFunction
          CFI (cfiPicker616) Picker
        MOV     A,R6
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiPicker616
// 2737 
// 2738 /*********************************************************************
// 2739  * @fn          ZDO_ParseNodeDescRsp
// 2740  *
// 2741  * @brief       This function parses the Node_Desc_rsp message.
// 2742  *
// 2743  * @param       inMsg - incoming message
// 2744  * @param       pNDRsp - place to parse the message into
// 2745  *
// 2746  * @return      none
// 2747  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2748 void ZDO_ParseNodeDescRsp( zdoIncomingMsg_t *inMsg, ZDO_NodeDescRsp_t *pNDRsp )
ZDO_ParseNodeDescRsp:
          CFI Block cfiBlock617 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
        CODE
// 2749 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 2750   uint8 *msg;
// 2751 
// 2752   msg = inMsg->asdu;
        LCALL   ?Subroutine11 & 0xFFFF
// 2753 
// 2754   pNDRsp->status = *msg++;
// 2755   pNDRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2756 
// 2757   if ( pNDRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_0:
        JZ      $+5
        LJMP    ??ZDO_ParseNodeDescRsp_0 & 0xFFFF
// 2758   {
// 2759     msg += 2;
// 2760     pNDRsp->nodeDesc.LogicalType = *msg & 0x07;
        MOV     A,R0
        LCALL   ??Subroutine182_0 & 0xFFFF
??CrossCallReturnLabel_348:
        ADDC    A,R1
        MOV     R3,A
        MOV     A,R4
        ADD     A,#0x3
        MOV     R6,A
        CLR     A
        ADDC    A,R5
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0x7
        MOV     ?V0,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ANL     A,#0xf8
        ORL     A,?V0
        LCALL   ?Subroutine45 & 0xFFFF
// 2761 
// 2762     pNDRsp->nodeDesc.ComplexDescAvail = ( *msg & 0x08 ) >> 3;
??CrossCallReturnLabel_70:
        MOV     C,0xE0 /* A   */.3
        CLR     A
        RLC     A
        MOV     ?V0,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.3
        MOV     DPH,R7
        MOV     DPL,R6
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.3,C
        LCALL   ?Subroutine45 & 0xFFFF
// 2763     pNDRsp->nodeDesc.UserDescAvail = ( *msg & 0x10 ) >> 4;
??CrossCallReturnLabel_71:
        MOV     C,0xE0 /* A   */.4
        CLR     A
        RLC     A
        MOV     ?V1,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.4
        MOV     DPH,R7
        MOV     DPL,R6
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.4,C
        MOVX    @DPTR,A
// 2764 
// 2765     msg++;  // Reserved bits.
// 2766     pNDRsp->nodeDesc.FrequencyBand = (*msg >> 3) & 0x1f;
        MOV     A,R0
        ADD     A,#0x3
        INC     R2
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        MOV     A,R4
        ADD     A,#0x4
        INC     R6
        CLR     A
        ADDC    A,R5
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0xf8
        MOV     ?V2,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ANL     A,#0x7
        ORL     A,?V2
        MOV     ?V2,A
        LCALL   ?Subroutine45 & 0xFFFF
// 2767     pNDRsp->nodeDesc.APSFlags = *msg++ & 0x07;
??CrossCallReturnLabel_72:
        ANL     A,#0x7
        MOV     R2,A
        MOV     A,#-0x8
        ANL     A,?V2
        ORL     A,R2
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine38 & 0xFFFF
// 2768     pNDRsp->nodeDesc.CapabilityFlags = *msg++;
??CrossCallReturnLabel_56:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine39 & 0xFFFF
// 2769     pNDRsp->nodeDesc.ManufacturerCode[0] = *msg++;
??CrossCallReturnLabel_59:
        INC     DPTR
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_450:
        LCALL   ?Subroutine32 & 0xFFFF
// 2770     pNDRsp->nodeDesc.ManufacturerCode[1] = *msg++;
??CrossCallReturnLabel_42:
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_126:
        LCALL   ?Subroutine32 & 0xFFFF
// 2771     pNDRsp->nodeDesc.MaxBufferSize = *msg++;
??CrossCallReturnLabel_43:
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_451:
        LCALL   ?Subroutine25 & 0xFFFF
// 2772     pNDRsp->nodeDesc.MaxInTransferSize[0] = *msg++;
??CrossCallReturnLabel_30:
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_127:
        LCALL   ?Subroutine25 & 0xFFFF
// 2773     pNDRsp->nodeDesc.MaxInTransferSize[1] = *msg++;
??CrossCallReturnLabel_31:
        INC     DPTR
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_128:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0xa
        MOV     R0,A
        JNC     ??ZDO_ParseNodeDescRsp_1
        INC     R1
// 2774     pNDRsp->nodeDesc.ServerMask = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseNodeDescRsp_1:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_353:
        MOV     R3,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R4
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        LCALL   ?Subroutine47 & 0xFFFF
// 2775     msg += 2;
// 2776     pNDRsp->nodeDesc.MaxOutTransferSize[0] = *msg++;
??CrossCallReturnLabel_237:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        ADD     A,#0xd
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine39 & 0xFFFF
// 2777     pNDRsp->nodeDesc.MaxOutTransferSize[1] = *msg++;
// 2778     pNDRsp->nodeDesc.DescriptorCapability = *msg;
// 2779   }
??CrossCallReturnLabel_60:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ??Subroutine174_0 & 0xFFFF
??CrossCallReturnLabel_299:
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_57:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_161:
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2780 }
??ZDO_ParseNodeDescRsp_0:
        LJMP    ??Subroutine179_0 & 0xFFFF
          CFI EndBlock cfiBlock617

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond618 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_349
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-2
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker620 Using cfiCommon1
          CFI (cfiPicker620) NoFunction
          CFI (cfiPicker620) Picker
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiPicker620
        REQUIRE ??Subroutine182_0
        ; // Fall through to label ??Subroutine182_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine182_0:
          CFI Block cfiCond621 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_345
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond622 Using cfiCommon0
          CFI (cfiCond622) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond622) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond622) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond622) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond622) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond622) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond622) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond622) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond622) CFA_SP SP+-2
          CFI (cfiCond622) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond623) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond623) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond623) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond623) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond623) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond623) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond623) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond623) CFA_SP SP+-2
          CFI (cfiCond623) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-2
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+-2
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-2
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker627 Using cfiCommon1
          CFI (cfiPicker627) NoFunction
          CFI (cfiPicker627) Picker
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        RET
          CFI EndBlock cfiCond621
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiPicker627

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond628 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-2
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-2
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker631 Using cfiCommon1
          CFI (cfiPicker631) NoFunction
          CFI (cfiPicker631) Picker
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        RET
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiPicker631

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond632 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_70
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-2
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-2
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker635 Using cfiCommon1
          CFI (cfiPicker635) NoFunction
          CFI (cfiPicker635) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiPicker635

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond636 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-2
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+-2
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker639 Using cfiCommon1
          CFI (cfiPicker639) NoFunction
          CFI (cfiPicker639) Picker
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_195:
        RET
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiPicker639

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine125:
          CFI Block cfiCond640 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond641 Using cfiCommon0
          CFI (cfiCond641) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond641) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_59
          CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond641) CFA_SP SP+-4
          CFI (cfiCond641) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond642 Using cfiCommon0
          CFI (cfiCond642) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond642) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_60
          CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond642) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond642) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond642) CFA_SP SP+-4
          CFI (cfiCond642) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_56
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+-4
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_57
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-4
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker645 Using cfiCommon1
          CFI (cfiPicker645) NoFunction
          CFI (cfiPicker645) Picker
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_218:
        RET
          CFI EndBlock cfiCond640
          CFI EndBlock cfiCond641
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiPicker645

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine144:
          CFI Block cfiCond646 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_59
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-6
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_60
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-6
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_56
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-6
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_57
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+-6
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_42
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+-6
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_43
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-6
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_30
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-6
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_31
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-6
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker655 Using cfiCommon1
          CFI (cfiPicker655) NoFunction
          CFI (cfiPicker655) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiPicker655

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond656 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+-2
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker658 Using cfiCommon1
          CFI (cfiPicker658) NoFunction
          CFI (cfiPicker658) Picker
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_196:
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiPicker658

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond659 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-2
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker661 Using cfiCommon1
          CFI (cfiPicker661) NoFunction
          CFI (cfiPicker661) Picker
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_183:
        RET
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiPicker661

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond662 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_43
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+-4
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_30
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+-4
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_31
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+-4
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker666 Using cfiCommon1
          CFI (cfiPicker666) NoFunction
          CFI (cfiPicker666) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_219:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiPicker666

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond667 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_30
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-2
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker669 Using cfiCommon1
          CFI (cfiPicker669) NoFunction
          CFI (cfiPicker669) Picker
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_184:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiPicker669
// 2781 
// 2782 /*********************************************************************
// 2783  * @fn          ZDO_ParsePowerDescRsp
// 2784  *
// 2785  * @brief       This function parses the Power_Desc_rsp message.
// 2786  *
// 2787  * @param       inMsg  - incoming message
// 2788  * @param       pNPRsp - place to parse the message into
// 2789  *
// 2790  * @return      none
// 2791  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2792 void ZDO_ParsePowerDescRsp( zdoIncomingMsg_t *inMsg, ZDO_PowerRsp_t *pNPRsp )
ZDO_ParsePowerDescRsp:
          CFI Block cfiBlock670 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
        CODE
// 2793 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 2794   uint8 *msg;
// 2795 
// 2796   msg = inMsg->asdu;
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_143:
        LCALL   ?Subroutine80 & 0xFFFF
// 2797   pNPRsp->status = *msg++;
??CrossCallReturnLabel_122:
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_447:
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_192:
        MOV     R2,DPL
        MOV     R3,DPH
// 2798   pNPRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_354:
        MOV     R1,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        LCALL   ??Subroutine193_0 & 0xFFFF
// 2799 
// 2800   if ( pNPRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_407:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??ZDO_ParsePowerDescRsp_0 & 0xFFFF
// 2801   {
// 2802     msg += 2;
// 2803     pNPRsp->pwrDesc.AvailablePowerSources = *msg >> 4;
        MOV     A,R2
        ADD     A,#0x2
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     A,R4
        ADD     A,#0x3
        CLR     A
        ADDC    A,R5
        INC     R4
        INC     R4
        INC     R4
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0,A
        MOV     ?V1,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0
        LCALL   ?S_SHL
        MOV     A,?V2
        ORL     A,?V0
        MOV     R1,?V3
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine27 & 0xFFFF
// 2804     pNPRsp->pwrDesc.PowerMode = *msg++ & 0x0F;
??CrossCallReturnLabel_32:
        MOV     A,?V0
        ORL     A,R0
        MOV     ?V0,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine193_0 & 0xFFFF
// 2805     pNPRsp->pwrDesc.CurrentPowerSourceLevel = *msg >> 4;
??CrossCallReturnLabel_408:
        MOV     A,R2
        ADD     A,#0x3
        CLR     A
        ADDC    A,R3
        INC     R6
        MOV     R7,A
        MOV     A,?V0
        MOV     ?V2,A
        MOV     A,R1
        ANL     A,#0xf
        MOV     ?V3,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0,A
        MOV     A,#0xc
        MOV     R0,#?V0
        LCALL   ?S_SHL
        MOV     A,?V3
        ORL     A,?V1
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,?V2
        LCALL   ?Subroutine27 & 0xFFFF
// 2806     pNPRsp->pwrDesc.CurrentPowerSource = *msg++ & 0x0F;
// 2807   }
??CrossCallReturnLabel_33:
        MOV     A,R2
        ADD     A,#0x4
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xf0
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,R1
        MOVX    @DPTR,A
// 2808 }
??ZDO_ParsePowerDescRsp_0:
        LJMP    ??Subroutine179_0 & 0xFFFF
          CFI EndBlock cfiBlock670

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond671 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_355
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond672 Using cfiCommon0
          CFI (cfiCond672) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond672) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond672) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond672) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond672) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond672) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond672) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond672) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond672) CFA_SP SP+-2
          CFI (cfiCond672) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker673 Using cfiCommon1
          CFI (cfiPicker673) NoFunction
          CFI (cfiPicker673) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond671
          CFI EndBlock cfiCond672
          CFI EndBlock cfiPicker673
        REQUIRE ??Subroutine183_0
        ; // Fall through to label ??Subroutine183_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine183_0:
          CFI Block cfiCond674 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_351
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond675 Using cfiCommon0
          CFI (cfiCond675) Function ZDO_ConvertOTAClusters
          CFI (cfiCond675) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond675) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond675) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond675) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond675) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond675) CFA_SP SP+-2
          CFI (cfiCond675) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond676 Using cfiCommon0
          CFI (cfiCond676) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond676) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond676) CFA_SP SP+-2
          CFI (cfiCond676) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+-2
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function ZDO_AnyClusterMatches
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+-2
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond679) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond679) CFA_SP SP+-2
          CFI (cfiCond679) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker680 Using cfiCommon1
          CFI (cfiPicker680) NoFunction
          CFI (cfiPicker680) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond674
          CFI EndBlock cfiCond675
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiPicker680

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond681 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_123
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+-2
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker683 Using cfiCommon1
          CFI (cfiPicker683) NoFunction
          CFI (cfiPicker683) Picker
        MOV     DPH,A
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_479:
        MOV     R3,A
        ; Setup parameters for call to function NLME_DirectJoinRequest
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiPicker683

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond684 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_32
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond685) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond685) CFA_SP SP+-2
          CFI (cfiCond685) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker686 Using cfiCommon1
          CFI (cfiPicker686) NoFunction
          CFI (cfiPicker686) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R0,A
        RET
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiPicker686
// 2809 
// 2810 /*********************************************************************
// 2811  * @fn          ZDO_ParseSimpleDescRsp
// 2812  *
// 2813  * @brief       This function parse the Simple_Desc_rsp message.
// 2814  *
// 2815  *   NOTE: The pAppInClusterList and pAppOutClusterList fields
// 2816  *         in the SimpleDescriptionFormat_t structure are allocated
// 2817  *         and the calling function needs to free [osal_msg_free()]
// 2818  *         these buffers.
// 2819  *
// 2820  * @param       inMsg  - incoming message
// 2821  * @param       pSimpleDescRsp - place to parse the message into
// 2822  *
// 2823  * @return      none
// 2824  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2825 void ZDO_ParseSimpleDescRsp( zdoIncomingMsg_t *inMsg, ZDO_SimpleDescRsp_t *pSimpleDescRsp )
ZDO_ParseSimpleDescRsp:
          CFI Block cfiBlock687 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescRsp
        CODE
// 2826 {
        FUNCALL ZDO_ParseSimpleDescRsp, ZDO_ParseSimpleDescBuf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2827   uint8 *msg;
// 2828 
// 2829   msg = inMsg->asdu;
        LCALL   ?Subroutine11 & 0xFFFF
// 2830   pSimpleDescRsp->status = *msg++;
// 2831   pSimpleDescRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2832   msg += sizeof ( uint16 );
// 2833   msg++; // Skip past the length field.
// 2834 
// 2835   if ( pSimpleDescRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_1:
        JNZ     ??ZDO_ParseSimpleDescRsp_0
// 2836   {
// 2837     ZDO_ParseSimpleDescBuf( msg, &(pSimpleDescRsp->simpleDesc) );
        ; Setup parameters for call to function ZDO_ParseSimpleDescBuf
        MOV     A,R4
        ADD     A,#0x3
        MOV     R4,A
        JNC     ??ZDO_ParseSimpleDescRsp_1
        INC     R5
??ZDO_ParseSimpleDescRsp_1:
        MOV     A,R0
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        LCALL   `??ZDO_ParseSimpleDescBuf::?relay`; Banked call to: ZDO_ParseSimpleDescBuf
// 2838   }
// 2839 }
??ZDO_ParseSimpleDescRsp_0:
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock687

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond688 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-2
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker690 Using cfiCommon1
          CFI (cfiPicker690) NoFunction
          CFI (cfiPicker690) Picker
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_211:
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_314:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_223:
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiPicker690
// 2840 
// 2841 /*********************************************************************
// 2842  * @fn          ZDO_ParseEPListRsp
// 2843  *
// 2844  * @brief       This parse the Active_EP_rsp or Match_Desc_rsp message.
// 2845  *
// 2846  * @param       inMsg  - incoming message
// 2847  *
// 2848  * @return      none
// 2849  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2850 ZDO_ActiveEndpointRsp_t *ZDO_ParseEPListRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseEPListRsp:
          CFI Block cfiBlock691 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
        CODE
// 2851 {
        FUNCALL ZDO_ParseEPListRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEPListRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
// 2852   ZDO_ActiveEndpointRsp_t *pRsp;
// 2853   uint8 *msg;
// 2854   uint8 Status;
// 2855   uint8 cnt;
// 2856 
// 2857   msg = inMsg->asdu;
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_137:
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
// 2858   Status = *msg++;
        MOV     DPL,?V0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V3,A
        INC     DPTR
        MOV     ?V0,DPL
        MOV     ?V1,DPH
// 2859   cnt = msg[2];
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V2,A
// 2860 
// 2861   pRsp = (ZDO_ActiveEndpointRsp_t *)osal_mem_alloc( sizeof(  ZDO_ActiveEndpointRsp_t ) + cnt );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine191_0 & 0xFFFF
??CrossCallReturnLabel_399:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R6,?V4
        MOV     R7,?V5
// 2862   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseEPListRsp_0
// 2863   {
// 2864     pRsp->status = Status;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V3
        MOVX    @DPTR,A
// 2865     pRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R2,A
        LCALL   ?Subroutine20 & 0xFFFF
// 2866     msg += sizeof( uint16 );
// 2867     pRsp->cnt = cnt;
// 2868     msg++; // pass cnt
// 2869     osal_memcpy( pRsp->epList, msg, cnt );
??CrossCallReturnLabel_21:
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,R0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine143 & 0xFFFF
// 2870   }
??CrossCallReturnLabel_403:
        ADDC    A,R7
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2871 
// 2872   return ( pRsp );
??ZDO_ParseEPListRsp_0:
        LJMP    ?Subroutine5 & 0xFFFF
// 2873 }
          CFI EndBlock cfiBlock691
// 2874 
// 2875 /*********************************************************************
// 2876  * @fn          ZDO_ParseServerDiscRsp
// 2877  *
// 2878  * @brief       Parse the Server_Discovery_rsp message.
// 2879  *
// 2880  * @param       inMsg - incoming message.
// 2881  * @param       pRsp - place to put the parsed information.
// 2882  *
// 2883  * @return      none
// 2884  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2885 void ZDO_ParseServerDiscRsp( zdoIncomingMsg_t *inMsg, ZDO_ServerDiscRsp_t *pRsp )
ZDO_ParseServerDiscRsp:
          CFI Block cfiBlock692 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
        CODE
// 2886 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2887   pRsp->status = inMsg->asdu[0];
        MOV     A,R2
        ADD     A,#0x13
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_477:
        MOV     DPH,A
        MOV     DPL,R2
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_448:
        LCALL   ?Subroutine37 & 0xFFFF
// 2888   pRsp->serverMask = BUILD_UINT16( inMsg->asdu[1], inMsg->asdu[2] );
??CrossCallReturnLabel_55:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_466:
        LCALL   ??Subroutine193_0 & 0xFFFF
// 2889 }
??CrossCallReturnLabel_409:
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock692

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond693 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond694) CFA_SP SP+-2
          CFI (cfiCond694) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker695 Using cfiCommon1
          CFI (cfiPicker695) NoFunction
          CFI (cfiPicker695) Picker
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_221:
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_431:
        RET
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiPicker695

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine145:
          CFI Block cfiCond696 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_35
          CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond697) CFA_SP SP+-6
          CFI (cfiCond697) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_14
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+-6
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_15
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-6
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_0
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+-4
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_1
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+-4
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_54
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond702) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond702) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond702) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond702) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond702) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond702) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+-4
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_55
          CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond703) CFA_SP SP+-4
          CFI (cfiCond703) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_73
          CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond704) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond704) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond704) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond704) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond704) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond704) CFA_SP SP+-4
          CFI (cfiCond704) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_74
          CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond705) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond705) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond705) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond705) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond705) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond705) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond705) CFA_SP SP+-4
          CFI (cfiCond705) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker706 Using cfiCommon1
          CFI (cfiPicker706) NoFunction
          CFI (cfiPicker706) Picker
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiPicker706
// 2890 
// 2891 /*********************************************************************
// 2892  * @fn          ZDO_ParseMgmtLqiRsp
// 2893  *
// 2894  * @brief       This function parses the incoming Management
// 2895  *              LQI response
// 2896  *
// 2897  * @param       inMsg - incoming message
// 2898  *
// 2899  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2900  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2901  *          by the calling function [osal_mem_free()].
// 2902  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2903 ZDO_MgmtLqiRsp_t *ZDO_ParseMgmtLqiRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtLqiRsp:
          CFI Block cfiBlock707 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
        CODE
// 2904 {
        FUNCALL ZDO_ParseMgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2905   ZDO_MgmtLqiRsp_t *pRsp;
// 2906   uint8 status;
// 2907   uint8 startIndex = 0;
        MOV     ?V5,#0x0
// 2908   uint8 neighborLqiCount = 0;
        MOV     ?V4,#0x0
// 2909   uint8 neighborLqiEntries = 0;
        MOV     ?V6,#0x0
// 2910   uint8 *msg;
// 2911 
// 2912   msg = inMsg->asdu;
        LCALL   ?Subroutine53 & 0xFFFF
// 2913 
// 2914   status = *msg++;
??CrossCallReturnLabel_394:
        MOV     ?V7,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2915   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtLqiRsp_0
// 2916   {
// 2917     neighborLqiEntries = *msg++;
        MOVX    A,@DPTR
        MOV     ?V6,A
// 2918     startIndex = *msg++;
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
// 2919     neighborLqiCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_0
        INC     R7
// 2920   }
// 2921 
// 2922   // Allocate a buffer big enough to handle the list.
// 2923   pRsp = (ZDO_MgmtLqiRsp_t *)osal_mem_alloc(
// 2924             sizeof( ZDO_MgmtLqiRsp_t ) + (neighborLqiCount * sizeof( ZDP_MgmtLqiItem_t )) );
??ZDO_ParseMgmtLqiRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V4
        MOV     B,#0x1a
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_173:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 2925   if ( pRsp )
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtLqiRsp_1 & 0xFFFF
// 2926   {
// 2927     uint8 x;
// 2928     ZDP_MgmtLqiItem_t *pList = pRsp->list;
        LCALL   ?Subroutine117 & 0xFFFF
// 2929     pRsp->status = status;
??CrossCallReturnLabel_176:
        LCALL   ?Subroutine12 & 0xFFFF
// 2930     pRsp->neighborLqiEntries = neighborLqiEntries;
// 2931     pRsp->startIndex = startIndex;
// 2932     pRsp->neighborLqiCount = neighborLqiCount;
// 2933 
// 2934     for ( x = 0; x < neighborLqiCount; x++ )
??CrossCallReturnLabel_2:
        LJMP    ??ZDO_ParseMgmtLqiRsp_2 & 0xFFFF
// 2935     {
// 2936       uint8 tmp;
// 2937 
// 2938       pList->panID = 0; // This isn't in the record, why is it in the structure?
??ZDO_ParseMgmtLqiRsp_3:
        MOV     DPL,?V0
        MOV     DPH,?V1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2939       osal_cpyExtAddr(pList->extPanID, msg);   //Copy extended PAN ID
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_349:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2940       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_4
        INC     R7
// 2941 
// 2942       osal_cpyExtAddr(pList->extAddr, msg);   //Copy extended address
??ZDO_ParseMgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0
        LCALL   ??Subroutine185_0 & 0xFFFF
??CrossCallReturnLabel_358:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2943       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_5
        INC     R7
// 2944 
// 2945       pList->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtLqiRsp_5:
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_382:
        MOV     R0,A
        MOV     A,?V0
        ADD     A,#0x12
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_367:
        MOV     A,R0
        LCALL   ?Subroutine26 & 0xFFFF
// 2946       msg += 2;
// 2947 
// 2948       tmp = *msg++;
??CrossCallReturnLabel_388:
        MOV     R0,A
// 2949       pList->devType = tmp & 0x03;
        MOV     A,#0x3
        ANL     A,R0
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x14
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_368:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2950       pList->rxOnIdle = (tmp >> 2) & 0x03;
        MOV     A,R0
        RRC     A
        RRC     A
        ANL     A,#0x3f
        ANL     A,#0x3
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x15
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_369:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2951       pList->relation = (tmp >> 4) & 0x07;
        MOV     A,R0
        SWAP    A
        ANL     A,#0xf
        ANL     A,#0x7
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x16
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_370:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine19 & 0xFFFF
// 2952 
// 2953       pList->permit = (*msg++) & 0x03;
??CrossCallReturnLabel_19:
        ANL     A,#0x3
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x17
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_371:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine122 & 0xFFFF
// 2954 
// 2955       pList->depth = *msg++;
??CrossCallReturnLabel_187:
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x18
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_372:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine33 & 0xFFFF
// 2956 
// 2957       pList->lqi = *msg++;
??CrossCallReturnLabel_45:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x19
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_373:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x6
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_6
        INC     R7
// 2958       pList++;
??ZDO_ParseMgmtLqiRsp_6:
        MOV     A,?V0
        ADD     A,#0x1a
        MOV     ?V0,A
        JNC     ??ZDO_ParseMgmtLqiRsp_7
        INC     ?V1
// 2959     }
??ZDO_ParseMgmtLqiRsp_7:
        INC     ?V5
??ZDO_ParseMgmtLqiRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JNC     $+5
        LJMP    ??ZDO_ParseMgmtLqiRsp_3 & 0xFFFF
// 2960   }
// 2961 
// 2962   return ( pRsp );
??ZDO_ParseMgmtLqiRsp_1:
          CFI EndBlock cfiBlock707
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 2963 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock708 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R2,?V2
        MOV     R3,?V3
          CFI EndBlock cfiBlock708
        REQUIRE ??Subroutine184_0
        ; // Fall through to label ??Subroutine184_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine184_0:
          CFI Block cfiBlock709 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock709

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine140:
          CFI Block cfiCond710 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_360
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond711) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond711) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond711) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-2
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker712 Using cfiCommon1
          CFI (cfiPicker712) NoFunction
          CFI (cfiPicker712) Picker
        MOV     A,R2
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiPicker712
        REQUIRE ??Subroutine185_0
        ; // Fall through to label ??Subroutine185_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine185_0:
          CFI Block cfiCond713 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_357
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_249
          CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond714) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond714) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond714) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond714) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond714) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond714) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond714) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond714) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond714) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond714) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond714) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond714) CFA_SP SP+-4
          CFI (cfiCond714) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond715 Using cfiCommon0
          CFI (cfiCond715) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond715) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_250
          CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond715) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond715) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond715) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond715) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond715) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond715) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond715) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond715) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond715) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond715) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond715) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond715) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond715) CFA_SP SP+-4
          CFI (cfiCond715) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_248
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond716) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond716) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond716) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond716) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond716) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond716) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond716) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond716) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond716) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+-4
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond717 Using cfiCommon0
          CFI (cfiCond717) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond717) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond717) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond717) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond717) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond717) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond717) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond717) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond717) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond717) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond717) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond717) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond717) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond717) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond717) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond717) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond717) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond717) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond717) CFA_SP SP+-2
          CFI (cfiCond717) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond718 Using cfiCommon0
          CFI (cfiCond718) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond718) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond718) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond718) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond718) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond718) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond718) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond718) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond718) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond718) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond718) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond718) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond718) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond718) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond718) CFA_SP SP+-2
          CFI (cfiCond718) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond719) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond719) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond719) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond719) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond719) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond719) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond719) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond719) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond719) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond719) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond719) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond719) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond719) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond719) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond719) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond719) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond719) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond719) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond719) CFA_SP SP+-2
          CFI (cfiCond719) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond720) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond720) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond720) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond720) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond720) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond720) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond720) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond720) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond720) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond720) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond720) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond720) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond720) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond720) CFA_SP SP+-2
          CFI (cfiCond720) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker721 Using cfiCommon1
          CFI (cfiPicker721) NoFunction
          CFI (cfiPicker721) Picker
        ADD     A,#0xa
        MOV     R2,A
        CLR     A
        RET
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiCond717
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiPicker721

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond722 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_376
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function ZDO_ParseAddrRsp
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond723) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond723) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond723) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond723) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond723) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond723) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond724) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond724) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond724) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond724) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond724) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond724) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond724) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker725 Using cfiCommon1
          CFI (cfiPicker725) NoFunction
          CFI (cfiPicker725) Picker
        MOV     A,?V0
        ADD     A,#0xc
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiPicker725
        REQUIRE ??Subroutine186_0
        ; // Fall through to label ??Subroutine186_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine186_0:
          CFI Block cfiCond726 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_365
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function ZDO_ParseAddrRsp
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond727) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond727) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond727) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond727) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond727) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond727) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond727) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond727) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond727) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond728) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond728) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond728) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond728) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond728) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond728) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond728) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond728) CFA_SP SP+-2
          CFI (cfiCond728) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond730) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond730) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond730) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond730) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond730) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond730) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond730) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond731) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond731) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond731) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond731) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond732) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond732) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond732) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond732) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond732) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond732) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond732) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond732) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond735) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond735) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond735) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond735) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond737) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond737) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+-2
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ZDO_ParseAddrRsp
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker740 Using cfiCommon1
          CFI (cfiPicker740) NoFunction
          CFI (cfiPicker740) Picker
        MOV     DPL,A
        CLR     A
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiPicker740
        REQUIRE ??Subroutine187_0
        ; // Fall through to label ??Subroutine187_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine187_0:
          CFI Block cfiCond741 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_363
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function ZDO_ParseAddrRsp
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-2
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function ZDO_ParseAddrRsp
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond745) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond745) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-2
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond747) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond747) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond747) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond748) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond748) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond748) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond751) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond751) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond751) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond751) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond751) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond753) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond753) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond753) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond754) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond754) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond754) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond754) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond754) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond754) CFA_SP SP+-2
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function ZDO_ParseAddrRsp
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker757 Using cfiCommon1
          CFI (cfiPicker757) NoFunction
          CFI (cfiPicker757) Picker
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiPicker757

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond758 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_381
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond759) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond759) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+-2
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-2
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker761 Using cfiCommon1
          CFI (cfiPicker761) NoFunction
          CFI (cfiPicker761) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiPicker761
        REQUIRE ??Subroutine188_0
        ; // Fall through to label ??Subroutine188_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine188_0:
          CFI Block cfiCond762 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_379
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-2
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function ZDO_ParseAddrRsp
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+-2
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond765) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond765) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond765) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond765) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+-2
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-2
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker767 Using cfiCommon1
          CFI (cfiPicker767) NoFunction
          CFI (cfiPicker767) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_387:
        RET
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiPicker767

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine127:
          CFI Block cfiCond768 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_381
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_382
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-4
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_383
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-4
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_379
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+-4
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond772 Using cfiCommon0
          CFI (cfiCond772) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond772) Conditional ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_380
          CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond772) CFA_SP SP+-4
          CFI (cfiCond772) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_386, ??CrossCallReturnLabel_111
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-4
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_386, ??CrossCallReturnLabel_112
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond774) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond774) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond774) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond774) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+-4
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_91
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+-4
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_92
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-4
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_385, ??CrossCallReturnLabel_93
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-4
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_385, ??CrossCallReturnLabel_94
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+-4
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker779 Using cfiCommon1
          CFI (cfiPicker779) NoFunction
          CFI (cfiPicker779) Picker
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_480:
        MOV     R1,A
        MOV     A,R2
        RET
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiPicker779

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine153:
          CFI Block cfiCond780 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_90
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond781) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-4
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_123
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-4
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_122
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-4
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_477
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-2
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function ZDO_ParseAddrRsp
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_381
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond785) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond785) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+-6
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_382
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+-6
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_383
          CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond787) CFA_SP SP+-6
          CFI (cfiCond787) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_379
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+-6
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_380
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+-6
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_386, ??CrossCallReturnLabel_111
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+-6
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_386, ??CrossCallReturnLabel_112
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond791) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond791) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond791) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond791) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+-6
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_91
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+-6
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_92
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond793) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+-6
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_385, ??CrossCallReturnLabel_93
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+-6
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_480, ??CrossCallReturnLabel_385, ??CrossCallReturnLabel_94
          CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond795) CFA_SP SP+-6
          CFI (cfiCond795) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_464
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+-4
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_465
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+-4
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_461
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-4
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_462
          CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond799) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond799) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond799) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond799) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond799) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond799) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond799) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond799) CFA_SP SP+-4
          CFI (cfiCond799) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_463
          CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond800) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond800) CFA_SP SP+-4
          CFI (cfiCond800) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_452
          CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond801) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond801) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond801) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond801) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond801) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond801) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond801) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond801) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond801) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond801) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond801) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond801) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond801) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond801) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond801) CFA_SP SP+-4
          CFI (cfiCond801) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_453
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond802) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond802) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond802) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond802) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond802) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond802) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+-4
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond803 Using cfiCommon0
          CFI (cfiCond803) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond803) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_454
          CFI (cfiCond803) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond803) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond803) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond803) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond803) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond803) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond803) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond803) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond803) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond803) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond803) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond803) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond803) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond803) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond803) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond803) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond803) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond803) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond803) CFA_SP SP+-4
          CFI (cfiCond803) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_455
          CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond804) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond804) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond804) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond804) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond804) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond804) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond804) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond804) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond804) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond804) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond804) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond804) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond804) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond804) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond804) CFA_SP SP+-4
          CFI (cfiCond804) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_456
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_SP SP+-4
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond806 Using cfiCommon0
          CFI (cfiCond806) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond806) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_457
          CFI (cfiCond806) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond806) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond806) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond806) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond806) CFA_SP SP+-4
          CFI (cfiCond806) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond807 Using cfiCommon0
          CFI (cfiCond807) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond807) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_458
          CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond807) CFA_SP SP+-4
          CFI (cfiCond807) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_459
          CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond808) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond808) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond808) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond808) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond808) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond808) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond808) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond808) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond808) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond808) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond808) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond808) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond808) CFA_SP SP+-4
          CFI (cfiCond808) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_460
          CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond809) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond809) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond809) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond809) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond809) CFA_SP SP+-4
          CFI (cfiCond809) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_81
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+-8
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond811 Using cfiCommon0
          CFI (cfiCond811) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond811) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_82
          CFI (cfiCond811) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond811) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond811) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond811) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond811) CFA_SP SP+-8
          CFI (cfiCond811) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond812 Using cfiCommon0
          CFI (cfiCond812) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond812) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_87
          CFI (cfiCond812) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond812) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond812) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond812) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond812) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond812) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond812) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond812) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond812) CFA_SP SP+-8
          CFI (cfiCond812) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function ZDO_ProcessUserDescReq
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_88
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+-8
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond814 Using cfiCommon0
          CFI (cfiCond814) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond814) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_473
          CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond814) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond814) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond814) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond814) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond814) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond814) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond814) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond814) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond814) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond814) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond814) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond814) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond814) CFA_SP SP+-6
          CFI (cfiCond814) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_474
          CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond815) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond815) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond815) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond815) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond815) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond815) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond815) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond815) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond815) CFA_SP SP+-6
          CFI (cfiCond815) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_472
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond816) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond816) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond816) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond816) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond816) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-6
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker817 Using cfiCommon1
          CFI (cfiPicker817) NoFunction
          CFI (cfiPicker817) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiCond806
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiCond811
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiPicker817

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond818 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_44
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond819 Using cfiCommon0
          CFI (cfiCond819) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond819) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond819) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond819) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond819) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond819) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond819) CFA_SP SP+-2
          CFI (cfiCond819) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker820 Using cfiCommon1
          CFI (cfiPicker820) NoFunction
          CFI (cfiPicker820) Picker
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_185:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond818
          CFI EndBlock cfiCond819
          CFI EndBlock cfiPicker820

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond821 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_388
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond822) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond822) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond822) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond822) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond822) CFA_SP SP+-2
          CFI (cfiCond822) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker823 Using cfiCommon1
          CFI (cfiPicker823) NoFunction
          CFI (cfiPicker823) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiPicker823
        REQUIRE ??Subroutine189_0
        ; // Fall through to label ??Subroutine189_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine189_0:
          CFI Block cfiCond824 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_390
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond825 Using cfiCommon0
          CFI (cfiCond825) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond825) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond825) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond825) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond825) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond825) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond825) CFA_SP SP+-2
          CFI (cfiCond825) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond826) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond826) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond826) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond826) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond826) CFA_SP SP+-2
          CFI (cfiCond826) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker827 Using cfiCommon1
          CFI (cfiPicker827) NoFunction
          CFI (cfiPicker827) Picker
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_391:
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond824
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiPicker827

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond828 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond829) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond829) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond829) CFA_SP SP+-2
          CFI (cfiCond829) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond830 Using cfiCommon0
          CFI (cfiCond830) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond830) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond830) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond830) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond830) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond830) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond830) CFA_SP SP+-2
          CFI (cfiCond830) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker831 Using cfiCommon1
          CFI (cfiPicker831) NoFunction
          CFI (cfiPicker831) Picker
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_188:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiCond830
          CFI EndBlock cfiPicker831

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond832 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_187
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond833 Using cfiCommon0
          CFI (cfiCond833) Function ZDO_ParseAddrRsp
          CFI (cfiCond833) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_18
          CFI (cfiCond833) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond833) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond833) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond833) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond833) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond833) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond833) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond833) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond833) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond833) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond833) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond833) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond833) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond833) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond833) CFA_SP SP+-4
          CFI (cfiCond833) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond834 Using cfiCommon0
          CFI (cfiCond834) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond834) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_19
          CFI (cfiCond834) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond834) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond834) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond834) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond834) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond834) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond834) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond834) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond834) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond834) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond834) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond834) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond834) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond834) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond834) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond834) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond834) CFA_SP SP+-4
          CFI (cfiCond834) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_20
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+-4
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond836 Using cfiCommon0
          CFI (cfiCond836) Function ZDO_ParseEPListRsp
          CFI (cfiCond836) Conditional ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_21
          CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond836) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond836) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond836) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond836) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond836) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond836) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond836) CFA_SP SP+-4
          CFI (cfiCond836) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond837 Using cfiCommon0
          CFI (cfiCond837) Function ZDO_ParseUserDescRsp
          CFI (cfiCond837) Conditional ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_22
          CFI (cfiCond837) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond837) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond837) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond837) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond837) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond837) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond837) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond837) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond837) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond837) CFA_SP SP+-4
          CFI (cfiCond837) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker838 Using cfiCommon1
          CFI (cfiPicker838) NoFunction
          CFI (cfiPicker838) Picker
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_224:
        RET
          CFI EndBlock cfiCond832
          CFI EndBlock cfiCond833
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiCond836
          CFI EndBlock cfiCond837
          CFI EndBlock cfiPicker838

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine146:
          CFI Block cfiCond839 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_187
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond840 Using cfiCommon0
          CFI (cfiCond840) Function ZDO_ParseAddrRsp
          CFI (cfiCond840) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_18
          CFI (cfiCond840) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond840) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond840) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond840) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond840) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond840) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond840) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond840) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond840) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond840) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond840) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond840) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond840) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond840) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond840) CFA_SP SP+-6
          CFI (cfiCond840) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_19
          CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond841) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond841) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond841) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond841) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond841) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond841) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond841) CFA_SP SP+-6
          CFI (cfiCond841) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_20
          CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond842) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond842) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond842) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond842) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond842) CFA_SP SP+-6
          CFI (cfiCond842) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond843 Using cfiCommon0
          CFI (cfiCond843) Function ZDO_ParseEPListRsp
          CFI (cfiCond843) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_21
          CFI (cfiCond843) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond843) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond843) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond843) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond843) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond843) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond843) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond843) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond843) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond843) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond843) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond843) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond843) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond843) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond843) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond843) CFA_SP SP+-6
          CFI (cfiCond843) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function ZDO_ParseUserDescRsp
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_22
          CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond844) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond844) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond844) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond844) CFA_SP SP+-6
          CFI (cfiCond844) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_44
          CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond845) CFA_SP SP+-6
          CFI (cfiCond845) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond846 Using cfiCommon0
          CFI (cfiCond846) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond846) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_45
          CFI (cfiCond846) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond846) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond846) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond846) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond846) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond846) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond846) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond846) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond846) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond846) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond846) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond846) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond846) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond846) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond846) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond846) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond846) CFA_SP SP+-6
          CFI (cfiCond846) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond847 Using cfiCommon0
          CFI (cfiCond847) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond847) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_23
          CFI (cfiCond847) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond847) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond847) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond847) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond847) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond847) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond847) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond847) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond847) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond847) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond847) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond847) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond847) CFA_SP SP+-6
          CFI (cfiCond847) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_24
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-6
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker849 Using cfiCommon1
          CFI (cfiPicker849) NoFunction
          CFI (cfiPicker849) Picker
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_392:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond839
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiCond846
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiPicker849

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine152:
          CFI Block cfiCond850 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_391, ??CrossCallReturnLabel_388
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond851 Using cfiCommon0
          CFI (cfiCond851) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond851) Conditional ??CrossCallReturnLabel_391, ??CrossCallReturnLabel_389
          CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond851) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond851) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond851) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond851) CFA_SP SP+-4
          CFI (cfiCond851) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_391, ??CrossCallReturnLabel_390
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+-4
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_392, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_187
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+-6
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function ZDO_ParseAddrRsp
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_392, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_18
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+-8
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_392, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_19
          CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond855) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond855) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond855) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond855) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond855) CFA_SP SP+-8
          CFI (cfiCond855) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_392, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_20
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+-8
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond857 Using cfiCommon0
          CFI (cfiCond857) Function ZDO_ParseEPListRsp
          CFI (cfiCond857) Conditional ??CrossCallReturnLabel_392, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_21
          CFI (cfiCond857) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond857) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond857) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond857) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond857) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond857) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond857) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond857) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond857) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond857) CFA_SP SP+-8
          CFI (cfiCond857) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond858 Using cfiCommon0
          CFI (cfiCond858) Function ZDO_ParseUserDescRsp
          CFI (cfiCond858) Conditional ??CrossCallReturnLabel_392, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_22
          CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond858) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond858) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond858) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond858) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond858) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond858) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond858) CFA_SP SP+-8
          CFI (cfiCond858) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_392, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_44
          CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond859) CFA_SP SP+-8
          CFI (cfiCond859) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_392, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_45
          CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond860) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond860) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond860) CFA_SP SP+-8
          CFI (cfiCond860) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond861 Using cfiCommon0
          CFI (cfiCond861) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond861) Conditional ??CrossCallReturnLabel_392, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_23
          CFI (cfiCond861) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond861) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond861) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond861) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond861) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond861) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond861) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond861) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond861) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond861) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond861) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond861) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond861) CFA_SP SP+-8
          CFI (cfiCond861) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_392, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_24
          CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond862) CFA_SP SP+-8
          CFI (cfiCond862) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function ZDO_ParseAddrRsp
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_393, ??CrossCallReturnLabel_63
          CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond863) CFA_SP SP+-4
          CFI (cfiCond863) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond864 Using cfiCommon0
          CFI (cfiCond864) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond864) Conditional ??CrossCallReturnLabel_393, ??CrossCallReturnLabel_64
          CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond864) CFA_SP SP+-4
          CFI (cfiCond864) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker865 Using cfiCommon1
          CFI (cfiPicker865) NoFunction
          CFI (cfiPicker865) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        RET
          CFI EndBlock cfiCond850
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiCond857
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiCond864
          CFI EndBlock cfiPicker865
// 2964 
// 2965 /*********************************************************************
// 2966  * @fn          ZDO_ParseMgmNwkDiscRsp
// 2967  *
// 2968  * @brief       This function parses the incoming Management
// 2969  *              Network Discover response.
// 2970  *
// 2971  * @param       inMsg - incoming message
// 2972  *
// 2973  * @return      pointer to parsed response.  This structure was
// 2974  *          allocated using osal_mem_alloc, so it must be freed
// 2975  *          by the calling function [osal_mem_free()].
// 2976  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2977 ZDO_MgmNwkDiscRsp_t *ZDO_ParseMgmNwkDiscRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmNwkDiscRsp:
          CFI Block cfiBlock866 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
        CODE
// 2978 {
        FUNCALL ZDO_ParseMgmNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2979   ZDO_MgmNwkDiscRsp_t *pRsp;
// 2980   uint8 status;
// 2981   uint8 networkCount = 0;
        MOV     ?V1,#0x0
// 2982   uint8 startIndex = 0;
        MOV     ?V0,#0x0
// 2983   uint8 networkListCount = 0;
        MOV     ?V4,#0x0
// 2984   uint8 *msg;
// 2985 
// 2986   msg = inMsg->asdu;
        LCALL   ?Subroutine53 & 0xFFFF
// 2987   status = *msg++;
??CrossCallReturnLabel_395:
        MOV     ?V5,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2988 
// 2989   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmNwkDiscRsp_0
// 2990   {
// 2991     networkCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V1,A
// 2992     startIndex = *msg++;
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
// 2993     networkListCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_0
        INC     R7
// 2994   }
// 2995 
// 2996   // Allocate a buffer big enough to handle the list.
// 2997   pRsp = (ZDO_MgmNwkDiscRsp_t *)osal_mem_alloc( sizeof( ZDO_MgmNwkDiscRsp_t )
// 2998                                   + (networkListCount * sizeof( mgmtNwkDiscItem_t )) );
??ZDO_ParseMgmNwkDiscRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     ?V2,?V4
        MOV     ?V3,#0x0
        MOV     A,#0x4
        MOV     R0,#?V2
        LCALL   ?S_SHL
        MOV     A,?V2
        LCALL   ??Subroutine191_0 & 0xFFFF
??CrossCallReturnLabel_400:
        ADDC    A,?V3
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 2999   if ( pRsp )
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_1 & 0xFFFF
// 3000   {
// 3001     uint8 x;
// 3002     mgmtNwkDiscItem_t *pList;
// 3003 
// 3004     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V5
        MOVX    @DPTR,A
// 3005     pRsp->networkCount = networkCount;
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine36 & 0xFFFF
// 3006     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_52:
        MOV     A,?V0
        LCALL   ?Subroutine23 & 0xFFFF
// 3007     pRsp->networkListCount = networkListCount;
??CrossCallReturnLabel_26:
        MOV     A,?V4
        MOVX    @DPTR,A
// 3008     pList = pRsp->list;
        LCALL   ?Subroutine117 & 0xFFFF
// 3009 
// 3010     for ( x = 0; x < networkListCount; x++ )
??CrossCallReturnLabel_177:
        MOV     ?V5,#0x0
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_2 & 0xFFFF
// 3011     {
// 3012       osal_cpyExtAddr(pList->extendedPANID, msg);   //Copy extended PAN ID
??ZDO_ParseMgmNwkDiscRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3013       pList->PANId = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_93:
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine21 & 0xFFFF
// 3014       msg += Z_EXTADDR_LEN;
// 3015 
// 3016       pList->logicalChannel = *msg++;
??CrossCallReturnLabel_24:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3017       pList->stackProfile = (*msg) & 0x0F;
        MOV     A,R6
        ADD     A,#0x9
        MOV     R0,A
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_151:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0xb
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_374:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine46 & 0xFFFF
// 3018       pList->version = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_73:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_378:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3019       pList->beaconOrder = (*msg) & 0x0F;
        MOV     A,R6
        ADD     A,#0xa
        INC     R0
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_152:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0xd
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_375:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine46 & 0xFFFF
// 3020       pList->superFrameOrder = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_74:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        LCALL   ??Subroutine174_0 & 0xFFFF
??CrossCallReturnLabel_300:
        LCALL   ??Subroutine187_0 & 0xFFFF
??CrossCallReturnLabel_363:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine30 & 0xFFFF
// 3021       pList->permitJoining = *msg++;
??CrossCallReturnLabel_39:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL   ??Subroutine187_0 & 0xFFFF
??CrossCallReturnLabel_364:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0xc
        MOV     R6,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_4
        INC     R7
// 3022       pList++;
??ZDO_ParseMgmNwkDiscRsp_4:
        MOV     A,?V0
        ADD     A,#0x10
        MOV     ?V0,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_5
        INC     ?V1
// 3023     }
??ZDO_ParseMgmNwkDiscRsp_5:
        INC     ?V5
??ZDO_ParseMgmNwkDiscRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JNC     $+5
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_3 & 0xFFFF
// 3024   }
// 3025 
// 3026   return ( pRsp );
??ZDO_ParseMgmNwkDiscRsp_1:
        LJMP    ?Subroutine7 & 0xFFFF
// 3027 }
          CFI EndBlock cfiBlock866

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond867 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond868 Using cfiCommon0
          CFI (cfiCond868) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond868) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond868) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond868) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond868) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond868) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond868) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond868) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond868) CFA_SP SP+-2
          CFI (cfiCond868) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker869 Using cfiCommon1
          CFI (cfiPicker869) NoFunction
          CFI (cfiPicker869) Picker
        MOV     A,R2
        ADD     A,#0x4
        MOV     ?V0,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V1,A
        RET
          CFI EndBlock cfiCond867
          CFI EndBlock cfiCond868
          CFI EndBlock cfiPicker869

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond870 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_151
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond871 Using cfiCommon0
          CFI (cfiCond871) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond871) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond871) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond871) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond871) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond871) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond871) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond871) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond871) CFA_SP SP+-2
          CFI (cfiCond871) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker872 Using cfiCommon1
          CFI (cfiPicker872) NoFunction
          CFI (cfiPicker872) Picker
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ANL     A,#0xf
        RET
          CFI EndBlock cfiCond870
          CFI EndBlock cfiCond871
          CFI EndBlock cfiPicker872

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond873 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_394
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond874 Using cfiCommon0
          CFI (cfiCond874) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond874) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond874) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond874) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond874) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond874) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond874) CFA_SP SP+-2
          CFI (cfiCond874) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+-2
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond876) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond876) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond876) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond876) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond876) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond876) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond876) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond876) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond876) CFA_SP SP+-2
          CFI (cfiCond876) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker877 Using cfiCommon1
          CFI (cfiPicker877) NoFunction
          CFI (cfiPicker877) Picker
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_212:
          CFI EndBlock cfiCond873
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiPicker877
        REQUIRE ??Subroutine190_0
        ; // Fall through to label ??Subroutine190_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine190_0:
          CFI Block cfiCond878 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_398
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond879 Using cfiCommon0
          CFI (cfiCond879) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond879) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond879) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond879) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond879) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond879) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond879) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond879) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond879) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond879) CFA_SP SP+-2
          CFI (cfiCond879) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond880 Using cfiCommon0
          CFI (cfiCond880) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond880) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond880) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond880) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond880) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond880) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond880) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond880) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond880) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond880) CFA_SP SP+-2
          CFI (cfiCond880) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond881 Using cfiCommon0
          CFI (cfiCond881) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond881) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond881) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond881) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond881) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond881) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond881) CFA_SP SP+-2
          CFI (cfiCond881) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond882 Using cfiCommon0
          CFI (cfiCond882) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond882) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond882) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond882) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond882) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond882) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond882) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond882) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond882) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond882) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond882) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond882) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond882) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond882) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond882) CFA_SP SP+-2
          CFI (cfiCond882) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker883 Using cfiCommon1
          CFI (cfiPicker883) NoFunction
          CFI (cfiPicker883) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond878
          CFI EndBlock cfiCond879
          CFI EndBlock cfiCond880
          CFI EndBlock cfiCond881
          CFI EndBlock cfiCond882
          CFI EndBlock cfiPicker883

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond884 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_73
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond885 Using cfiCommon0
          CFI (cfiCond885) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond885) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond885) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond885) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond885) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond885) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond885) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond885) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond885) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond885) CFA_SP SP+-2
          CFI (cfiCond885) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker886 Using cfiCommon1
          CFI (cfiPicker886) NoFunction
          CFI (cfiPicker886) Picker
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_222:
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        RET
          CFI EndBlock cfiCond884
          CFI EndBlock cfiCond885
          CFI EndBlock cfiPicker886

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond887 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_51
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond888 Using cfiCommon0
          CFI (cfiCond888) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond888) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond888) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond888) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond888) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond888) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond888) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond888) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond888) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond888) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond888) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond888) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond888) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond888) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond888) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond888) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond888) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond888) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond888) CFA_SP SP+-2
          CFI (cfiCond888) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond889 Using cfiCommon0
          CFI (cfiCond889) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond889) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond889) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond889) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond889) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond889) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond889) CFA_SP SP+-2
          CFI (cfiCond889) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker890 Using cfiCommon1
          CFI (cfiPicker890) NoFunction
          CFI (cfiPicker890) Picker
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_190:
        INC     DPTR
        RET
          CFI EndBlock cfiCond887
          CFI EndBlock cfiCond888
          CFI EndBlock cfiCond889
          CFI EndBlock cfiPicker890

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond891 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_192
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond892 Using cfiCommon0
          CFI (cfiCond892) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond892) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_51
          CFI (cfiCond892) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond892) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond892) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond892) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond892) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond892) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond892) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond892) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond892) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond892) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond892) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond892) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond892) CFA_SP SP+-4
          CFI (cfiCond892) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_52
          CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond893) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond893) CFA_SP SP+-4
          CFI (cfiCond893) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond894 Using cfiCommon0
          CFI (cfiCond894) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond894) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_53
          CFI (cfiCond894) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond894) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond894) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond894) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond894) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond894) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond894) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond894) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond894) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond894) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond894) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond894) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond894) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond894) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond894) CFA_SP SP+-4
          CFI (cfiCond894) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond895 Using cfiCommon0
          CFI (cfiCond895) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond895) Conditional ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_2
          CFI (cfiCond895) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond895) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond895) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond895) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond895) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond895) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond895) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond895) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond895) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond895) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond895) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond895) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond895) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond895) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond895) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond895) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond895) CFA_SP SP+-4
          CFI (cfiCond895) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_3
          CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond896) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond896) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond896) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond896) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond896) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond896) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond896) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond896) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond896) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond896) CFA_SP SP+-4
          CFI (cfiCond896) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker897 Using cfiCommon1
          CFI (cfiPicker897) NoFunction
          CFI (cfiPicker897) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        RET
          CFI EndBlock cfiCond891
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiCond894
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiPicker897

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond898 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
          CFI Conditional ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond899 Using cfiCommon0
          CFI (cfiCond899) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond899) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond899) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond899) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond899) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond899) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond899) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond899) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond899) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond899) CFA_SP SP+-2
          CFI (cfiCond899) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker900 Using cfiCommon1
          CFI (cfiPicker900) NoFunction
          CFI (cfiPicker900) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0xb
        LCALL   ??Subroutine158_0 & 0xFFFF
??CrossCallReturnLabel_339:
        RET
          CFI EndBlock cfiCond898
          CFI EndBlock cfiCond899
          CFI EndBlock cfiPicker900

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond901 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond902) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond902) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond902) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond902) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond902) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond902) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond902) CFA_SP SP+-2
          CFI (cfiCond902) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond903) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond903) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond903) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond903) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond903) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond903) CFA_SP SP+-2
          CFI (cfiCond903) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker904 Using cfiCommon1
          CFI (cfiPicker904) NoFunction
          CFI (cfiPicker904) Picker
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_178:
        RET
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiPicker904

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond905 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond906 Using cfiCommon0
          CFI (cfiCond906) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond906) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_26
          CFI (cfiCond906) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond906) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond906) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond906) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond906) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond906) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond906) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond906) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond906) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond906) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond906) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond906) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond906) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond906) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond906) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond906) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond906) CFA_SP SP+-4
          CFI (cfiCond906) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_27
          CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond907) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond907) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond907) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond907) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond907) CFA_SP SP+-4
          CFI (cfiCond907) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond908 Using cfiCommon0
          CFI (cfiCond908) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond908) Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_2
          CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond908) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond908) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond908) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond908) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond908) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond908) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond908) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond908) CFA_SP SP+-4
          CFI (cfiCond908) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond909 Using cfiCommon0
          CFI (cfiCond909) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond909) Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_3
          CFI (cfiCond909) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond909) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond909) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond909) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond909) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond909) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond909) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond909) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond909) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond909) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond909) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond909) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond909) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond909) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond909) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond909) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond909) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond909) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond909) CFA_SP SP+-4
          CFI (cfiCond909) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond910 Using cfiCommon0
          CFI (cfiCond910) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond910) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_8
          CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond910) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond910) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond910) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond910) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond910) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond910) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond910) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond910) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond910) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond910) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond910) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond910) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond910) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond910) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond910) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond910) CFA_SP SP+-4
          CFI (cfiCond910) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond911 Using cfiCommon0
          CFI (cfiCond911) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond911) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_9
          CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond911) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond911) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond911) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond911) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond911) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond911) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond911) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond911) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond911) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond911) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond911) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond911) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond911) CFA_SP SP+-4
          CFI (cfiCond911) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond912 Using cfiCommon0
          CFI (cfiCond912) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond912) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_10
          CFI (cfiCond912) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond912) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond912) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond912) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond912) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond912) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond912) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond912) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond912) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond912) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond912) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond912) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond912) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond912) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond912) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond912) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond912) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond912) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond912) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond912) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond912) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond912) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond912) CFA_SP SP+-4
          CFI (cfiCond912) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker913 Using cfiCommon1
          CFI (cfiPicker913) NoFunction
          CFI (cfiPicker913) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond905
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiCond908
          CFI EndBlock cfiCond909
          CFI EndBlock cfiCond910
          CFI EndBlock cfiCond911
          CFI EndBlock cfiCond912
          CFI EndBlock cfiPicker913

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond914 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond915 Using cfiCommon0
          CFI (cfiCond915) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond915) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond915) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond915) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond915) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond915) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond915) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond915) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond915) CFA_SP SP+-2
          CFI (cfiCond915) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker916 Using cfiCommon1
          CFI (cfiPicker916) NoFunction
          CFI (cfiPicker916) Picker
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_186:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond914
          CFI EndBlock cfiCond915
          CFI EndBlock cfiPicker916

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond917 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_44
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond918 Using cfiCommon0
          CFI (cfiCond918) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond918) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_45
          CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond918) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond918) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond918) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond918) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond918) CFA_SP SP+-4
          CFI (cfiCond918) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond919 Using cfiCommon0
          CFI (cfiCond919) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond919) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_23
          CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond919) CFA_SP SP+-4
          CFI (cfiCond919) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_24
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond920) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond920) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond920) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+-4
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker921 Using cfiCommon1
          CFI (cfiPicker921) NoFunction
          CFI (cfiPicker921) Picker
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_225:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond917
          CFI EndBlock cfiCond918
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiPicker921
// 3028 
// 3029 /*********************************************************************
// 3030  * @fn          ZDO_ParseMgmtRtgRsp
// 3031  *
// 3032  * @brief       This function parses the incoming Management
// 3033  *              Routing response.
// 3034  *
// 3035  * @param       inMsg - incoming message
// 3036  *
// 3037  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3038  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3039  *          by the calling function [osal_mem_free()].
// 3040  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3041 ZDO_MgmtRtgRsp_t *ZDO_ParseMgmtRtgRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtRtgRsp:
          CFI Block cfiBlock922 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
        CODE
// 3042 {
        FUNCALL ZDO_ParseMgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3043   ZDO_MgmtRtgRsp_t *pRsp;
// 3044   uint8 status;
// 3045   uint8 rtgCount = 0;
        MOV     ?V2,#0x0
// 3046   uint8 startIndex = 0;
        MOV     ?V1,#0x0
// 3047   uint8 rtgListCount = 0;
        MOV     ?V0,#0x0
// 3048   uint8 *msg;
// 3049 
// 3050   msg = inMsg->asdu;
        LCALL   ?Subroutine53 & 0xFFFF
// 3051 
// 3052   status = *msg++;
??CrossCallReturnLabel_396:
        MOV     ?V3,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3053   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtRtgRsp_0
// 3054   {
// 3055     rtgCount = *msg++;
        LCALL   ??Subroutine157_0 & 0xFFFF
// 3056     startIndex = *msg++;
??CrossCallReturnLabel_238:
        MOV     ?V1,A
// 3057     rtgListCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtRtgRsp_0
        INC     R7
// 3058   }
// 3059 
// 3060   // Allocate a buffer big enough to handle the list
// 3061   pRsp = (ZDO_MgmtRtgRsp_t *)osal_mem_alloc(
// 3062           sizeof( ZDO_MgmtRtgRsp_t ) + (rtgListCount * sizeof( rtgItem_t )) );
??ZDO_ParseMgmtRtgRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0
        MOV     B,#0x7
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_174:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
// 3063   if ( pRsp )
        MOV     A,R2
        ORL     A,R3
        JZ      ??ZDO_ParseMgmtRtgRsp_1
// 3064   {
// 3065     uint8 x;
// 3066     rtgItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
// 3067     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V3
        MOVX    @DPTR,A
// 3068     pRsp->rtgCount = rtgCount;
        INC     DPTR
        MOV     A,?V2
        LCALL   ?Subroutine36 & 0xFFFF
// 3069     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_53:
        MOV     A,?V1
        LCALL   ?Subroutine23 & 0xFFFF
// 3070     pRsp->rtgListCount = rtgListCount;
??CrossCallReturnLabel_27:
        MOV     A,?V0
        MOVX    @DPTR,A
// 3071 
// 3072     for ( x = 0; x < rtgListCount; x++ )
        MOV     ?V1,#0x0
        SJMP    ??ZDO_ParseMgmtRtgRsp_2
// 3073     {
// 3074       uint8 statOpt;
// 3075 
// 3076       pList->dstAddress = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtRtgRsp_3:
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_105:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ??Subroutine189_0 & 0xFFFF
// 3077       msg += 2;
// 3078       statOpt = *msg++;
??CrossCallReturnLabel_390:
        MOV     R4,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtRtgRsp_4
        INC     R7
// 3079       pList->status = (statOpt & 0x07);
??ZDO_ParseMgmtRtgRsp_4:
        MOV     A,#0x7
        ANL     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3080       pList->options = ((statOpt >> 3) & 0x07);
        MOV     A,R4
        RRC     A
        RRC     A
        RRC     A
        ANL     A,#0x1f
        ANL     A,#0x7
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3081       pList->nextHopAddress = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_106:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine201_0 & 0xFFFF
// 3082       msg += 2;
??CrossCallReturnLabel_471:
        JNC     ??ZDO_ParseMgmtRtgRsp_5
        INC     R7
// 3083       pList++;
??ZDO_ParseMgmtRtgRsp_5:
        MOV     A,R0
        ADD     A,#0x7
        MOV     R0,A
        JNC     ??ZDO_ParseMgmtRtgRsp_6
        INC     R1
// 3084     }
??ZDO_ParseMgmtRtgRsp_6:
        INC     ?V1
??ZDO_ParseMgmtRtgRsp_2:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V0
        JC      ??ZDO_ParseMgmtRtgRsp_3
// 3085   }
// 3086 
// 3087   return ( pRsp );
??ZDO_ParseMgmtRtgRsp_1:
          CFI EndBlock cfiBlock922
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
// 3088 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock923 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock923

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond924 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+-2
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond926) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond926) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond926) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond926) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+-2
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker927 Using cfiCommon1
          CFI (cfiPicker927) NoFunction
          CFI (cfiPicker927) Picker
        MUL     AB
        MOV     R1,B
        LCALL   ??Subroutine191_0 & 0xFFFF
??CrossCallReturnLabel_402:
        ADDC    A,R1
        MOV     R3,A
        RET
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiPicker927

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine143:
          CFI Block cfiCond928 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_403
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond929 Using cfiCommon0
          CFI (cfiCond929) Function ZDO_ParseUserDescRsp
          CFI (cfiCond929) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond929) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond929) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond929) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond929) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond929) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond929) CFA_SP SP+-2
          CFI (cfiCond929) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker930 Using cfiCommon1
          CFI (cfiPicker930) NoFunction
          CFI (cfiPicker930) Picker
        MOV     R4,?V2
        MOV     R5,#0x0
        MOV     A,R6
          CFI EndBlock cfiCond928
          CFI EndBlock cfiCond929
          CFI EndBlock cfiPicker930
        REQUIRE ??Subroutine191_0
        ; // Fall through to label ??Subroutine191_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine191_0:
          CFI Block cfiCond931 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_399
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond932 Using cfiCommon0
          CFI (cfiCond932) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond932) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond932) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond932) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond932) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond932) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond932) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond932) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond932) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond932) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond932) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond932) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond932) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond932) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond932) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond932) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond932) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond932) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond932) CFA_SP SP+-2
          CFI (cfiCond932) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond933 Using cfiCommon0
          CFI (cfiCond933) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond933) Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_173
          CFI (cfiCond933) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond933) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond933) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond933) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond933) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond933) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond933) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond933) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond933) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond933) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond933) CFA_SP SP+-4
          CFI (cfiCond933) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_174
          CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond934) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond934) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond934) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond934) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond934) CFA_SP SP+-4
          CFI (cfiCond934) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_402, ??CrossCallReturnLabel_175
          CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond935) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond935) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond935) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond935) CFA_SP SP+-4
          CFI (cfiCond935) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond936 Using cfiCommon0
          CFI (cfiCond936) Function ZDO_ParseUserDescRsp
          CFI (cfiCond936) Conditional ??CrossCallReturnLabel_401
          CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond936) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond936) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond936) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond936) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond936) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond936) CFA_SP SP+-2
          CFI (cfiCond936) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function ZDO_ParseEPListRsp
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_403
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+-2
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond938 Using cfiCommon0
          CFI (cfiCond938) Function ZDO_ParseUserDescRsp
          CFI (cfiCond938) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond938) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond938) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond938) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond938) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond938) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond938) CFA_SP SP+-2
          CFI (cfiCond938) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker939 Using cfiCommon1
          CFI (cfiPicker939) NoFunction
          CFI (cfiPicker939) Picker
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        RET
          CFI EndBlock cfiCond931
          CFI EndBlock cfiCond932
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiCond938
          CFI EndBlock cfiPicker939

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond940 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_105
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond941) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+-2
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker942 Using cfiCommon1
          CFI (cfiPicker942) NoFunction
          CFI (cfiPicker942) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,?V2
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiPicker942
// 3089 
// 3090 /*********************************************************************
// 3091  * @fn          ZDO_ParseMgmtBindRsp
// 3092  *
// 3093  * @brief       This function parses the incoming Management
// 3094  *              Binding response.
// 3095  *
// 3096  * @param       inMsg - pointer to message to parse
// 3097  *
// 3098  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3099  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3100  *          by the calling function [osal_mem_free()].
// 3101  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3102 ZDO_MgmtBindRsp_t *ZDO_ParseMgmtBindRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtBindRsp:
          CFI Block cfiBlock943 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
        CODE
// 3103 {
        FUNCALL ZDO_ParseMgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
// 3104   ZDO_MgmtBindRsp_t *pRsp;
// 3105   uint8 status;
// 3106   uint8 bindingCount = 0;
        MOV     ?V6,#0x0
// 3107   uint8 startIndex = 0;
        MOV     ?V5,#0x0
// 3108   uint8 bindingListCount = 0;
        MOV     ?V4,#0x0
// 3109   uint8 *msg;
// 3110 
// 3111   msg = inMsg->asdu;
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_144:
        LCALL   ?Subroutine83 & 0xFFFF
// 3112 
// 3113   status = *msg++;
??CrossCallReturnLabel_241:
        MOV     DPL,?V2
        MOV     DPH,A
        LCALL   ?Subroutine77 & 0xFFFF
// 3114   if ( status == ZSuccess )
??CrossCallReturnLabel_116:
        JNZ     ??ZDO_ParseMgmtBindRsp_0
// 3115   {
// 3116     bindingCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V6,A
// 3117     startIndex = *msg++;
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
// 3118     bindingListCount = *msg++;
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,?V2
        ADD     A,#0x3
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_0
        INC     ?V3
// 3119   }
// 3120 
// 3121   // Allocate a buffer big enough to handle the list
// 3122   pRsp = (ZDO_MgmtBindRsp_t *)osal_mem_alloc(
// 3123           (sizeof ( ZDO_MgmtBindRsp_t ) + (bindingListCount * sizeof( apsBindingItem_t ))) );
??ZDO_ParseMgmtBindRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V4
        MOV     B,#0x15
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_175:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 3124   if ( pRsp )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtBindRsp_1 & 0xFFFF
// 3125   {
// 3126     uint8 x;
// 3127     apsBindingItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R6,A
        CLR     A
        ADDC    A,?V1
        MOV     R7,A
// 3128     pRsp->status = status;
        LCALL   ?Subroutine12 & 0xFFFF
// 3129     pRsp->bindingCount = bindingCount;
// 3130     pRsp->startIndex = startIndex;
// 3131     pRsp->bindingListCount = bindingListCount;
// 3132 
// 3133     for ( x = 0; x < bindingListCount; x++ )
??CrossCallReturnLabel_3:
        SJMP    ??ZDO_ParseMgmtBindRsp_2
// 3134     {
// 3135       osal_cpyExtAddr( pList->srcAddr, msg );
// 3136       msg += Z_EXTADDR_LEN;
// 3137       pList->srcEP = *msg++;
// 3138 
// 3139       // Get the Cluster ID
// 3140 
// 3141       pList->clusterID = BUILD_UINT16( msg[0], msg[1] );
// 3142       msg += 2;
// 3143       pList->dstAddr.addrMode = *msg++;
// 3144       if ( pList->dstAddr.addrMode == Addr64Bit )
// 3145       {
// 3146         osal_cpyExtAddr( pList->dstAddr.addr.extAddr, msg );
// 3147         msg += Z_EXTADDR_LEN;
// 3148         pList->dstEP = *msg++;
// 3149       }
// 3150       else
// 3151       {
// 3152         pList->dstAddr.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtBindRsp_3:
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_112:
        LCALL   ?Subroutine49 & 0xFFFF
// 3153         msg += 2;
??CrossCallReturnLabel_417:
        MOV     A,?V2
        ADD     A,#0x2
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_4
        INC     ?V3
// 3154       }
// 3155 
// 3156       pList++;
??ZDO_ParseMgmtBindRsp_4:
        MOV     A,R6
        ADD     A,#0x15
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtBindRsp_5
        INC     R7
??ZDO_ParseMgmtBindRsp_5:
        INC     ?V5
??ZDO_ParseMgmtBindRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JNC     ??ZDO_ParseMgmtBindRsp_1
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_96:
        MOV     A,?V2
        ADD     A,#0x9
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_6
        INC     ?V3
??ZDO_ParseMgmtBindRsp_6:
        MOV     DPL,A
        MOV     DPH,?V3
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_92:
        LCALL   ??Subroutine193_0 & 0xFFFF
??CrossCallReturnLabel_410:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_100:
        MOV     A,?V2
        ADD     A,#0x3
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_7
        INC     ?V3
??ZDO_ParseMgmtBindRsp_7:
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ParseMgmtBindRsp_3
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V2
        MOV     R5,?V3
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_167:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine109 & 0xFFFF
// 3157     }
// 3158   }
??CrossCallReturnLabel_328:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,?V2
        ADD     A,#0x9
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_4
        INC     ?V3
??ZDO_ParseMgmtBindRsp_8:
        SJMP    ??ZDO_ParseMgmtBindRsp_4
// 3159 
// 3160   return ( pRsp );
??ZDO_ParseMgmtBindRsp_1:
        MOV     R2,?V0
        MOV     R3,?V1
        LJMP    ?Subroutine8 & 0xFFFF
// 3161 }
          CFI EndBlock cfiBlock943

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond944 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_143
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_144
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+-2
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond946 Using cfiCommon0
          CFI (cfiCond946) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond946) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond946) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond946) CFA_SP SP+-2
          CFI (cfiCond946) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker947 Using cfiCommon1
          CFI (cfiPicker947) NoFunction
          CFI (cfiPicker947) Picker
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_213:
        RET
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiCond946
          CFI EndBlock cfiPicker947

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine139:
          CFI Block cfiCond948 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_1
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+-4
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_394
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond950) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond950) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond950) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond950) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+-4
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_395
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond951) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+-4
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_396
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond952) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+-4
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond953 Using cfiCommon0
          CFI (cfiCond953) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond953) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_397
          CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond953) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond953) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond953) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond953) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond953) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond953) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond953) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond953) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond953) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond953) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond953) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond953) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond953) CFA_SP SP+-4
          CFI (cfiCond953) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_143
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+-4
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond955 Using cfiCommon0
          CFI (cfiCond955) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond955) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_144
          CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond955) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond955) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond955) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond955) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond955) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond955) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond955) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond955) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond955) CFA_SP SP+-4
          CFI (cfiCond955) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond956 Using cfiCommon0
          CFI (cfiCond956) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond956) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_145
          CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond956) CFA_SP SP+-4
          CFI (cfiCond956) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker957 Using cfiCommon1
          CFI (cfiPicker957) NoFunction
          CFI (cfiPicker957) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_311:
        ADDC    A,R3
        RET
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiCond955
          CFI EndBlock cfiCond956
          CFI EndBlock cfiPicker957

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond958 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond959 Using cfiCommon0
          CFI (cfiCond959) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond959) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond959) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond959) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond959) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond959) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond959) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond959) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond959) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond959) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond959) CFA_SP SP+-2
          CFI (cfiCond959) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker960 Using cfiCommon1
          CFI (cfiPicker960) NoFunction
          CFI (cfiPicker960) Picker
        MOVX    A,@DPTR
        MOV     ?V7,A
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
        RET
          CFI EndBlock cfiCond958
          CFI EndBlock cfiCond959
          CFI EndBlock cfiPicker960

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond961 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_111
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond962 Using cfiCommon0
          CFI (cfiCond962) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond962) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond962) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond962) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond962) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond962) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond962) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond962) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond962) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond962) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond962) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond962) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond962) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond962) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond962) CFA_SP SP+-2
          CFI (cfiCond962) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker963 Using cfiCommon1
          CFI (cfiPicker963) NoFunction
          CFI (cfiPicker963) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_386:
        MOV     R0,A
        MOV     A,R6
        ADD     A,#0xb
        RET
          CFI EndBlock cfiCond961
          CFI EndBlock cfiCond962
          CFI EndBlock cfiPicker963

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond964 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond965 Using cfiCommon0
          CFI (cfiCond965) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond965) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond965) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond965) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond965) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond965) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond965) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond965) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond965) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond965) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond965) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond965) CFA_SP SP+-2
          CFI (cfiCond965) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker966 Using cfiCommon1
          CFI (cfiPicker966) NoFunction
          CFI (cfiPicker966) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_207:
        MOV     A,R0
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond964
          CFI EndBlock cfiCond965
          CFI EndBlock cfiPicker966

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond967 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_95
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond968 Using cfiCommon0
          CFI (cfiCond968) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond968) Conditional ??CrossCallReturnLabel_96
          CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond968) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond968) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond968) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond968) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond968) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond968) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond968) CFA_SP SP+-2
          CFI (cfiCond968) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker969 Using cfiCommon1
          CFI (cfiPicker969) NoFunction
          CFI (cfiPicker969) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond967
          CFI EndBlock cfiCond968
          CFI EndBlock cfiPicker969

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond970 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_91
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond971 Using cfiCommon0
          CFI (cfiCond971) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond971) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond971) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond971) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond971) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond971) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond971) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond971) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond971) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond971) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond971) CFA_SP SP+-2
          CFI (cfiCond971) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker972 Using cfiCommon1
          CFI (cfiPicker972) NoFunction
          CFI (cfiPicker972) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_384:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond970
          CFI EndBlock cfiCond971
          CFI EndBlock cfiPicker972

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond973 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_416
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond974 Using cfiCommon0
          CFI (cfiCond974) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond974) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond974) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond974) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond974) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond974) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond974) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond974) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond974) CFA_SP SP+-2
          CFI (cfiCond974) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker975 Using cfiCommon1
          CFI (cfiPicker975) NoFunction
          CFI (cfiPicker975) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
          CFI EndBlock cfiCond973
          CFI EndBlock cfiCond974
          CFI EndBlock cfiPicker975
        REQUIRE ??Subroutine192_0
        ; // Fall through to label ??Subroutine192_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine192_0:
          CFI Block cfiCond976 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_411
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond977 Using cfiCommon0
          CFI (cfiCond977) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond977) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond977) CFA_SP SP+-2
          CFI (cfiCond977) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond978 Using cfiCommon0
          CFI (cfiCond978) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond978) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond978) CFA_SP SP+-2
          CFI (cfiCond978) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond979 Using cfiCommon0
          CFI (cfiCond979) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond979) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond979) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond979) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond979) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond979) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond979) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond979) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond979) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond979) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond979) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond979) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond979) CFA_SP SP+-2
          CFI (cfiCond979) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond980 Using cfiCommon0
          CFI (cfiCond980) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond980) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond980) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond980) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond980) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond980) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond980) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond980) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond980) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond980) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond980) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond980) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond980) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond980) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond980) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond980) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond980) CFA_SP SP+-2
          CFI (cfiCond980) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond981 Using cfiCommon0
          CFI (cfiCond981) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond981) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond981) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond981) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond981) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond981) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond981) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond981) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond981) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond981) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond981) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond981) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond981) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond981) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond981) CFA_SP SP+-2
          CFI (cfiCond981) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond982 Using cfiCommon0
          CFI (cfiCond982) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond982) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond982) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond982) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond982) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond982) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond982) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond982) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond982) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond982) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond982) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond982) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond982) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond982) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond982) CFA_SP SP+-2
          CFI (cfiCond982) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker983 Using cfiCommon1
          CFI (cfiPicker983) NoFunction
          CFI (cfiPicker983) Picker
        MOV     A,R0
          CFI EndBlock cfiCond976
          CFI EndBlock cfiCond977
          CFI EndBlock cfiCond978
          CFI EndBlock cfiCond979
          CFI EndBlock cfiCond980
          CFI EndBlock cfiCond981
          CFI EndBlock cfiCond982
          CFI EndBlock cfiPicker983
        REQUIRE ??Subroutine193_0
        ; // Fall through to label ??Subroutine193_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine193_0:
          CFI Block cfiCond984 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_405
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond985 Using cfiCommon0
          CFI (cfiCond985) Function ZDO_ParseAddrRsp
          CFI (cfiCond985) Conditional ??CrossCallReturnLabel_406
          CFI (cfiCond985) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond985) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond985) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond985) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond985) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond985) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond985) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond985) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond985) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond985) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond985) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond985) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond985) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond985) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond985) CFA_SP SP+-2
          CFI (cfiCond985) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond986 Using cfiCommon0
          CFI (cfiCond986) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond986) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond986) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond986) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond986) CFA_SP SP+-2
          CFI (cfiCond986) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond987 Using cfiCommon0
          CFI (cfiCond987) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond987) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond987) CFA_SP SP+-2
          CFI (cfiCond987) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond988 Using cfiCommon0
          CFI (cfiCond988) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond988) Conditional ??CrossCallReturnLabel_409
          CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond988) CFA_SP SP+-2
          CFI (cfiCond988) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond989 Using cfiCommon0
          CFI (cfiCond989) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond989) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond989) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond989) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond989) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond989) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond989) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond989) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond989) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond989) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond989) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond989) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond989) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond989) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond989) CFA_SP SP+-2
          CFI (cfiCond989) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond990 Using cfiCommon0
          CFI (cfiCond990) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond990) Conditional ??CrossCallReturnLabel_411
          CFI (cfiCond990) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond990) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond990) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond990) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond990) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond990) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond990) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond990) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond990) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond990) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond990) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond990) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond990) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond990) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond990) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond990) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond990) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond990) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond990) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond990) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond990) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond990) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond990) CFA_SP SP+-2
          CFI (cfiCond990) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond991 Using cfiCommon0
          CFI (cfiCond991) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond991) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond991) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond991) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond991) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond991) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond991) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond991) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond991) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond991) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond991) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond991) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond991) CFA_SP SP+-2
          CFI (cfiCond991) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond992 Using cfiCommon0
          CFI (cfiCond992) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond992) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond992) CFA_SP SP+-2
          CFI (cfiCond992) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond993 Using cfiCommon0
          CFI (cfiCond993) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond993) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond993) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond993) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond993) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond993) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond993) CFA_SP SP+-2
          CFI (cfiCond993) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond994 Using cfiCommon0
          CFI (cfiCond994) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond994) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond994) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond994) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond994) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond994) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond994) CFA_SP SP+-2
          CFI (cfiCond994) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond995 Using cfiCommon0
          CFI (cfiCond995) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond995) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond995) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond995) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond995) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond995) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond995) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond995) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond995) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond995) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond995) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond995) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond995) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond995) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond995) CFA_SP SP+-2
          CFI (cfiCond995) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond996 Using cfiCommon0
          CFI (cfiCond996) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond996) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond996) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond996) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond996) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond996) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond996) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond996) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond996) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond996) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond996) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond996) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond996) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond996) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond996) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond996) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond996) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond996) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond996) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond996) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond996) CFA_SP SP+-2
          CFI (cfiCond996) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker997 Using cfiCommon1
          CFI (cfiPicker997) NoFunction
          CFI (cfiPicker997) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond984
          CFI EndBlock cfiCond985
          CFI EndBlock cfiCond986
          CFI EndBlock cfiCond987
          CFI EndBlock cfiCond988
          CFI EndBlock cfiCond989
          CFI EndBlock cfiCond990
          CFI EndBlock cfiCond991
          CFI EndBlock cfiCond992
          CFI EndBlock cfiCond993
          CFI EndBlock cfiCond994
          CFI EndBlock cfiCond995
          CFI EndBlock cfiCond996
          CFI EndBlock cfiPicker997

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond998 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond999 Using cfiCommon0
          CFI (cfiCond999) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond999) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond999) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond999) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond999) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond999) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond999) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond999) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond999) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond999) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond999) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond999) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond999) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond999) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond999) CFA_SP SP+-2
          CFI (cfiCond999) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1000 Using cfiCommon1
          CFI (cfiPicker1000) NoFunction
          CFI (cfiPicker1000) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V6
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_191:
        INC     DPTR
        MOV     A,?V5
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_179:
        MOV     A,?V4
        MOVX    @DPTR,A
        MOV     ?V5,#0x0
        RET
          CFI EndBlock cfiCond998
          CFI EndBlock cfiCond999
          CFI EndBlock cfiPicker1000
// 3162 
// 3163 /*********************************************************************
// 3164  * @fn          ZDO_ParseUserDescRsp
// 3165  *
// 3166  * @brief       This function parses the incoming User
// 3167  *              Descriptor Response.
// 3168  *
// 3169  * @param       inMsg - incoming response message
// 3170  *
// 3171  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3172  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3173  *          by the calling function [osal_mem_free()].
// 3174  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3175 ZDO_UserDescRsp_t *ZDO_ParseUserDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseUserDescRsp:
          CFI Block cfiBlock1001 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
        CODE
// 3176 {
        FUNCALL ZDO_ParseUserDescRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseUserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
// 3177   ZDO_UserDescRsp_t *pRsp;
// 3178   uint8 *msg;
// 3179   uint8 descLen = 0;
        MOV     ?V2,#0x0
// 3180 
// 3181   msg = inMsg->asdu;
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_138:
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_425:
        MOV     ?V0,R0
        MOV     ?V1,R1
// 3182 
// 3183   if ( msg[0] == ZSuccess )
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??ZDO_ParseUserDescRsp_0
// 3184   {
// 3185     descLen = msg[3];
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V2,A
// 3186   }
// 3187 
// 3188   pRsp = (ZDO_UserDescRsp_t *)osal_mem_alloc( sizeof ( ZDO_UserDescRsp_t ) + descLen );
??ZDO_ParseUserDescRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V2
        LCALL   ??Subroutine191_0 & 0xFFFF
??CrossCallReturnLabel_401:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R6,?V4
        MOV     R7,?V5
// 3189   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseUserDescRsp_1
// 3190   {
// 3191     pRsp->status = msg[0];
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine35 & 0xFFFF
// 3192     pRsp->nwkAddr = BUILD_UINT16( msg[1], msg[2] );
??CrossCallReturnLabel_49:
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        LCALL   ?Subroutine20 & 0xFFFF
// 3193     pRsp->length = descLen;
// 3194     if ( descLen )
??CrossCallReturnLabel_22:
        JZ      ??ZDO_ParseUserDescRsp_1
// 3195     {
// 3196       osal_memcpy( pRsp->desc, &msg[4], descLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0
        ADD     A,#0x4
        JNC     ??ZDO_ParseUserDescRsp_2
        INC     ?V1
??ZDO_ParseUserDescRsp_2:
        MOV     ?V4,A
        MOV     ?V5,?V1
        MOV     ?V6,R0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine143 & 0xFFFF
// 3197     }
// 3198   }
??CrossCallReturnLabel_404:
        ADDC    A,R7
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 3199 
// 3200   return ( pRsp );
??ZDO_ParseUserDescRsp_1:
        LJMP    ?Subroutine5 & 0xFFFF
// 3201 }
          CFI EndBlock cfiBlock1001

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond1002 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_428
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1003 Using cfiCommon0
          CFI (cfiCond1003) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1003) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond1003) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1003) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1003) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1003) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1003) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1003) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1003) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1003) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1003) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1003) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1003) CFA_SP SP+-2
          CFI (cfiCond1003) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1004 Using cfiCommon1
          CFI (cfiPicker1004) NoFunction
          CFI (cfiPicker1004) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond1002
          CFI EndBlock cfiCond1003
          CFI EndBlock cfiPicker1004
        REQUIRE ??Subroutine194_0
        ; // Fall through to label ??Subroutine194_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine194_0:
          CFI Block cfiCond1005 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_426
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1006) CFA_SP SP+-2
          CFI (cfiCond1006) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1007 Using cfiCommon0
          CFI (cfiCond1007) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_428
          CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1007) CFA_SP SP+-2
          CFI (cfiCond1007) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1008 Using cfiCommon0
          CFI (cfiCond1008) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1008) CFA_SP SP+-2
          CFI (cfiCond1008) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1009 Using cfiCommon1
          CFI (cfiPicker1009) NoFunction
          CFI (cfiPicker1009) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiCond1007
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiPicker1009
        REQUIRE ??Subroutine195_0
        ; // Fall through to label ??Subroutine195_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine195_0:
          CFI Block cfiCond1010 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_418
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1011) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1011) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1011) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1011) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1011) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1011) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1011) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1011) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1011) CFA_SP SP+-2
          CFI (cfiCond1011) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1012 Using cfiCommon0
          CFI (cfiCond1012) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1012) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1012) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1012) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1012) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1012) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1012) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1012) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1012) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1012) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1012) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1012) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1012) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1012) CFA_SP SP+-2
          CFI (cfiCond1012) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1013 Using cfiCommon0
          CFI (cfiCond1013) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1013) CFA_SP SP+-2
          CFI (cfiCond1013) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1014 Using cfiCommon0
          CFI (cfiCond1014) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1014) CFA_SP SP+-2
          CFI (cfiCond1014) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1015 Using cfiCommon0
          CFI (cfiCond1015) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1015) CFA_SP SP+-2
          CFI (cfiCond1015) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1016 Using cfiCommon0
          CFI (cfiCond1016) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1016) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1016) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1016) CFA_SP SP+-2
          CFI (cfiCond1016) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1017 Using cfiCommon0
          CFI (cfiCond1017) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1017) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1017) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1017) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1017) CFA_SP SP+-2
          CFI (cfiCond1017) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1018 Using cfiCommon0
          CFI (cfiCond1018) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1018) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1018) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1018) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1018) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1018) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1018) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1018) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1018) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1018) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1018) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1018) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1018) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1018) CFA_SP SP+-2
          CFI (cfiCond1018) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1019 Using cfiCommon0
          CFI (cfiCond1019) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1019) CFA_SP SP+-2
          CFI (cfiCond1019) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1020 Using cfiCommon0
          CFI (cfiCond1020) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_428
          CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1020) CFA_SP SP+-2
          CFI (cfiCond1020) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_SP SP+-2
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1022 Using cfiCommon1
          CFI (cfiPicker1022) NoFunction
          CFI (cfiPicker1022) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_434:
        RET
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiCond1012
          CFI EndBlock cfiCond1013
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiCond1015
          CFI EndBlock cfiCond1016
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiCond1018
          CFI EndBlock cfiCond1019
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiPicker1022

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine130:
          CFI Block cfiCond1023 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_272
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1024 Using cfiCommon0
          CFI (cfiCond1024) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_273
          CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1024) CFA_SP SP+-4
          CFI (cfiCond1024) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1025 Using cfiCommon0
          CFI (cfiCond1025) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_261
          CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1025) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1025) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1025) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1025) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1025) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1025) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1025) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1025) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1025) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1025) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1025) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1025) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1025) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1025) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1025) CFA_SP SP+-4
          CFI (cfiCond1025) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1026 Using cfiCommon0
          CFI (cfiCond1026) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1026) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_262
          CFI (cfiCond1026) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1026) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1026) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1026) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1026) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1026) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1026) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1026) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1026) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1026) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1026) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1026) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1026) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1026) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1026) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1026) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1026) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1026) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1026) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1026) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1026) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1026) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1026) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1026) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1026) CFA_SP SP+-4
          CFI (cfiCond1026) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1027 Using cfiCommon0
          CFI (cfiCond1027) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_263
          CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1027) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1027) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1027) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1027) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1027) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1027) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1027) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1027) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1027) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1027) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1027) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1027) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1027) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1027) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1027) CFA_SP SP+-4
          CFI (cfiCond1027) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1028 Using cfiCommon0
          CFI (cfiCond1028) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_264
          CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1028) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1028) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1028) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1028) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1028) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1028) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1028) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1028) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1028) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1028) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1028) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1028) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1028) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1028) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1028) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1028) CFA_SP SP+-4
          CFI (cfiCond1028) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1029 Using cfiCommon0
          CFI (cfiCond1029) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_265
          CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1029) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1029) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1029) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1029) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1029) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1029) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1029) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1029) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1029) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1029) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1029) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1029) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1029) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1029) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1029) CFA_SP SP+-4
          CFI (cfiCond1029) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1030 Using cfiCommon0
          CFI (cfiCond1030) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_266
          CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1030) CFA_SP SP+-4
          CFI (cfiCond1030) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1031 Using cfiCommon0
          CFI (cfiCond1031) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_267
          CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1031) CFA_SP SP+-4
          CFI (cfiCond1031) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1032 Using cfiCommon0
          CFI (cfiCond1032) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1032) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_268
          CFI (cfiCond1032) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1032) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1032) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1032) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1032) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1032) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1032) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1032) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1032) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1032) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1032) CFA_SP SP+-4
          CFI (cfiCond1032) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1033 Using cfiCommon0
          CFI (cfiCond1033) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_269
          CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1033) CFA_SP SP+-4
          CFI (cfiCond1033) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1034 Using cfiCommon0
          CFI (cfiCond1034) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_270
          CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1034) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1034) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1034) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1034) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1034) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1034) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1034) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1034) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1034) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1034) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1034) CFA_SP SP+-4
          CFI (cfiCond1034) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1035 Using cfiCommon0
          CFI (cfiCond1035) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_271
          CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1035) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1035) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1035) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1035) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1035) CFA_SP SP+-4
          CFI (cfiCond1035) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1036 Using cfiCommon0
          CFI (cfiCond1036) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_16
          CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1036) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1036) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1036) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1036) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1036) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1036) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1036) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1036) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1036) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1036) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1036) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1036) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1036) CFA_SP SP+-4
          CFI (cfiCond1036) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1037 Using cfiCommon0
          CFI (cfiCond1037) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_17
          CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1037) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1037) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1037) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1037) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1037) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1037) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1037) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1037) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1037) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1037) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1037) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1037) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1037) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1037) CFA_SP SP+-4
          CFI (cfiCond1037) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1038 Using cfiCommon0
          CFI (cfiCond1038) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_431, ??CrossCallReturnLabel_54
          CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1038) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1038) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1038) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1038) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1038) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1038) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1038) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1038) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1038) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1038) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1038) CFA_SP SP+-4
          CFI (cfiCond1038) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1039 Using cfiCommon0
          CFI (cfiCond1039) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_431, ??CrossCallReturnLabel_55
          CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1039) CFA_SP SP+-4
          CFI (cfiCond1039) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1040 Using cfiCommon0
          CFI (cfiCond1040) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_428
          CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1040) CFA_SP SP+-4
          CFI (cfiCond1040) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1041 Using cfiCommon0
          CFI (cfiCond1041) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_429
          CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1041) CFA_SP SP+-4
          CFI (cfiCond1041) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1042 Using cfiCommon0
          CFI (cfiCond1042) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1042) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_426
          CFI (cfiCond1042) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1042) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1042) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1042) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1042) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1042) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1042) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1042) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1042) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1042) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1042) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1042) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1042) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1042) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1042) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1042) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1042) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1042) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1042) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1042) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1042) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1042) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1042) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1042) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1042) CFA_SP SP+-4
          CFI (cfiCond1042) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1043 Using cfiCommon0
          CFI (cfiCond1043) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond1043) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_427
          CFI (cfiCond1043) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1043) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1043) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1043) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1043) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1043) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1043) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1043) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1043) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1043) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1043) CFA_SP SP+-4
          CFI (cfiCond1043) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1044 Using cfiCommon0
          CFI (cfiCond1044) Function ZDO_AnyClusterMatches
          CFI (cfiCond1044) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_418
          CFI (cfiCond1044) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1044) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1044) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1044) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1044) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1044) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1044) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1044) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1044) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1044) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1044) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1044) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1044) CFA_SP SP+-4
          CFI (cfiCond1044) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1045 Using cfiCommon0
          CFI (cfiCond1045) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1045) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_419
          CFI (cfiCond1045) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1045) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1045) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1045) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1045) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1045) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1045) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1045) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1045) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1045) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1045) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1045) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1045) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1045) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1045) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1045) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1045) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1045) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1045) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1045) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1045) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1045) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1045) CFA_SP SP+-4
          CFI (cfiCond1045) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1046 Using cfiCommon0
          CFI (cfiCond1046) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_420
          CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1046) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1046) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1046) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1046) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1046) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1046) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1046) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1046) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1046) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1046) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1046) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1046) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1046) CFA_SP SP+-4
          CFI (cfiCond1046) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1047 Using cfiCommon0
          CFI (cfiCond1047) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1047) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_421
          CFI (cfiCond1047) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1047) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1047) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1047) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1047) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1047) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1047) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1047) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1047) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1047) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1047) CFA_SP SP+-4
          CFI (cfiCond1047) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1048 Using cfiCommon0
          CFI (cfiCond1048) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_422
          CFI (cfiCond1048) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1048) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1048) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1048) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1048) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1048) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1048) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1048) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1048) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1048) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1048) CFA_SP SP+-4
          CFI (cfiCond1048) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1049 Using cfiCommon0
          CFI (cfiCond1049) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_423
          CFI (cfiCond1049) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1049) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1049) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1049) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1049) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1049) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1049) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1049) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1049) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1049) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1049) CFA_SP SP+-4
          CFI (cfiCond1049) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1050 Using cfiCommon0
          CFI (cfiCond1050) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_424
          CFI (cfiCond1050) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1050) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1050) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1050) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1050) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1050) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1050) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1050) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1050) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1050) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1050) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1050) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1050) CFA_SP SP+-4
          CFI (cfiCond1050) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1051 Using cfiCommon0
          CFI (cfiCond1051) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_425
          CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1051) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1051) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1051) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1051) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1051) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1051) CFA_SP SP+-4
          CFI (cfiCond1051) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1052 Using cfiCommon0
          CFI (cfiCond1052) Function ZDO_UpdateNwkStatus
          CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_432, ??CrossCallReturnLabel_129
          CFI (cfiCond1052) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1052) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1052) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1052) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1052) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1052) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1052) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1052) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1052) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1052) CFA_SP SP+-4
          CFI (cfiCond1052) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1053 Using cfiCommon0
          CFI (cfiCond1053) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1053) Conditional ??CrossCallReturnLabel_432, ??CrossCallReturnLabel_130
          CFI (cfiCond1053) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1053) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1053) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1053) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1053) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1053) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1053) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1053) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1053) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1053) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1053) CFA_SP SP+-4
          CFI (cfiCond1053) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1054 Using cfiCommon1
          CFI (cfiPicker1054) NoFunction
          CFI (cfiPicker1054) Picker
        LCALL   ??Subroutine163_0 & 0xFFFF
??CrossCallReturnLabel_440:
        MOV     R1,A
        RET
          CFI EndBlock cfiCond1023
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiCond1025
          CFI EndBlock cfiCond1026
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiCond1028
          CFI EndBlock cfiCond1029
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiCond1031
          CFI EndBlock cfiCond1032
          CFI EndBlock cfiCond1033
          CFI EndBlock cfiCond1034
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiCond1036
          CFI EndBlock cfiCond1037
          CFI EndBlock cfiCond1038
          CFI EndBlock cfiCond1039
          CFI EndBlock cfiCond1040
          CFI EndBlock cfiCond1041
          CFI EndBlock cfiCond1042
          CFI EndBlock cfiCond1043
          CFI EndBlock cfiCond1044
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiCond1046
          CFI EndBlock cfiCond1047
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiCond1049
          CFI EndBlock cfiCond1050
          CFI EndBlock cfiCond1051
          CFI EndBlock cfiCond1052
          CFI EndBlock cfiCond1053
          CFI EndBlock cfiPicker1054

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond1055 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_21
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1056 Using cfiCommon0
          CFI (cfiCond1056) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1056) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1056) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1056) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1056) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1056) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1056) CFA_SP SP+-2
          CFI (cfiCond1056) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1057 Using cfiCommon1
          CFI (cfiPicker1057) NoFunction
          CFI (cfiPicker1057) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_189:
        MOV     A,?V2
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond1055
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiPicker1057
// 3202 
// 3203 /*********************************************************************
// 3204  * @fn          ZDO_ParseSimpleDescBuf
// 3205  *
// 3206  * @brief       Parse a byte sequence representation of a Simple Descriptor.
// 3207  *
// 3208  * @param       buf  - pointer to a byte array representing a Simple Desc.
// 3209  * @param       desc - SimpleDescriptionFormat_t *
// 3210  *
// 3211  *              This routine allocates storage for the cluster IDs because
// 3212  *              they are 16-bit and need to be aligned to be properly processed.
// 3213  *              This routine returns non-zero if an allocation fails.
// 3214  *
// 3215  *              NOTE: This means that the caller or user of the input structure
// 3216  *                    is responsible for freeing the memory
// 3217  *
// 3218  * @return      0: success
// 3219  *              1: failure due to malloc failure.
// 3220  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3221 uint8 ZDO_ParseSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_ParseSimpleDescBuf:
          CFI Block cfiBlock1058 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
        CODE
// 3222 {
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3223   uint8 num, i;
// 3224 
// 3225   desc->EndPoint = *buf++;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_449:
        LCALL   ?Subroutine41 & 0xFFFF
// 3226   desc->AppProfId = BUILD_UINT16( buf[0], buf[1] );
??CrossCallReturnLabel_64:
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_467:
        LCALL   ?Subroutine48 & 0xFFFF
// 3227   buf += 2;
??CrossCallReturnLabel_75:
        JNC     ??ZDO_ParseSimpleDescBuf_0
        INC     R7
// 3228   desc->AppDeviceId = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_0:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_468:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine26 & 0xFFFF
// 3229   buf += 2;
// 3230   desc->AppDevVer = *buf >> 4;
??CrossCallReturnLabel_389:
        SWAP    A
        ANL     A,#0xf
// 3231 
// 3232   desc->Reserved = 0;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine19 & 0xFFFF
// 3233   buf++;
// 3234 
// 3235   // move in input cluster list (if any). allocate aligned memory.
// 3236   num = desc->AppNumInClusters = *buf++;
??CrossCallReturnLabel_20:
        MOV     ?V4,A
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseSimpleDescBuf_1
        INC     R7
??ZDO_ParseSimpleDescBuf_1:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V4
        MOVX    @DPTR,A
// 3237   if ( num )
        JZ      ??ZDO_ParseSimpleDescBuf_2
// 3238   {
// 3239     if (!(desc->pAppInClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_443:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     A,?V0
        ADD     A,#0x7
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine192_0 & 0xFFFF
??CrossCallReturnLabel_415:
        MOV     A,R2
        ORL     A,R3
        JNZ     $+5
        LJMP    ??ZDO_ParseSimpleDescBuf_3 & 0xFFFF
// 3240     {
// 3241       // malloc failed. we're done.
// 3242       return 1;
// 3243     }
// 3244     for (i=0; i<num; ++i)
        MOV     R2,#0x0
        SJMP    ??ZDO_ParseSimpleDescBuf_4
// 3245     {
// 3246       desc->pAppInClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_5:
        LCALL   ?Subroutine56 & 0xFFFF
// 3247       buf += 2;
// 3248     }
??CrossCallReturnLabel_83:
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_469:
        JNC     ??ZDO_ParseSimpleDescBuf_6
        INC     R7
??ZDO_ParseSimpleDescBuf_6:
        INC     R2
??ZDO_ParseSimpleDescBuf_4:
        MOV     A,R2
        CLR     C
        SUBB    A,?V4
        JC      ??ZDO_ParseSimpleDescBuf_5
// 3249   }
// 3250 
// 3251   // move in output cluster list (if any). allocate aligned memory.
// 3252   num = desc->AppNumOutClusters = *buf++;
??ZDO_ParseSimpleDescBuf_2:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3253   if (num)
        JZ      ??ZDO_ParseSimpleDescBuf_7
// 3254   {
// 3255     if (!(desc->pAppOutClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_444:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R0,?V4
        MOV     R1,?V5
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_321:
        JNZ     ??ZDO_ParseSimpleDescBuf_8
// 3256     {
// 3257       // malloc failed. free input cluster list memory if there is any
// 3258       if ( desc->pAppInClusterList != NULL )
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_271:
        JZ      ??ZDO_ParseSimpleDescBuf_3
// 3259       {
// 3260         osal_mem_free(desc->pAppInClusterList);
        MOV     A,?V0
        ADD     A,#0x7
        MOV     ?V2,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V3,A
        ; Setup parameters for call to function osal_mem_free
        MOV     DPL,?V2
        MOV     DPH,A
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_460:
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 3261 
// 3262         desc->pAppInClusterList = NULL;
        MOV     DPL,?V2
        MOV     DPH,?V3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 3263       }
// 3264       return 1;
??ZDO_ParseSimpleDescBuf_3:
        MOV     R1,#0x1
        SJMP    ??ZDO_ParseSimpleDescBuf_9
// 3265     }
// 3266     for (i=0; i<num; ++i)
??ZDO_ParseSimpleDescBuf_8:
        MOV     R2,#0x0
        SJMP    ??ZDO_ParseSimpleDescBuf_10
// 3267     {
// 3268       desc->pAppOutClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_11:
        LCALL   ?Subroutine56 & 0xFFFF
// 3269       buf += 2;
// 3270     }
??CrossCallReturnLabel_84:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_470:
        JNC     ??ZDO_ParseSimpleDescBuf_12
        INC     R7
??ZDO_ParseSimpleDescBuf_12:
        INC     R2
??ZDO_ParseSimpleDescBuf_10:
        MOV     A,R2
        CLR     C
        SUBB    A,?V2
        JC      ??ZDO_ParseSimpleDescBuf_11
// 3271   }
// 3272   return 0;
??ZDO_ParseSimpleDescBuf_7:
        MOV     R1,#0x0
??ZDO_ParseSimpleDescBuf_9:
        LJMP    ?Subroutine4 & 0xFFFF
// 3273 }
          CFI EndBlock cfiBlock1058

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond1059 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_445
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1060 Using cfiCommon0
          CFI (cfiCond1060) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1060) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1060) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1060) CFA_SP SP+-2
          CFI (cfiCond1060) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1061 Using cfiCommon1
          CFI (cfiPicker1061) NoFunction
          CFI (cfiPicker1061) Picker
        MOV     R2,A
          CFI EndBlock cfiCond1059
          CFI EndBlock cfiCond1060
          CFI EndBlock cfiPicker1061
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        REQUIRE ??Subroutine196_0
        ; // Fall through to label ??Subroutine196_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine196_0:
          CFI Block cfiCond1062 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_441
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1063 Using cfiCommon0
          CFI (cfiCond1063) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1063) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond1063) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1063) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1063) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1063) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1063) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1063) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1063) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1063) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1063) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1063) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1063) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1063) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1063) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1063) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1063) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1063) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1063) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1063) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1063) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1063) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1063) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1063) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1063) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1063) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1063) CFA_SP SP+-2
          CFI (cfiCond1063) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1064 Using cfiCommon0
          CFI (cfiCond1064) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1064) Conditional ??CrossCallReturnLabel_443
          CFI (cfiCond1064) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1064) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1064) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1064) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1064) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1064) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1064) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1064) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1064) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1064) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1064) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1064) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1064) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1064) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1064) CFA_SP SP+-2
          CFI (cfiCond1064) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1065 Using cfiCommon0
          CFI (cfiCond1065) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_444
          CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1065) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1065) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1065) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1065) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1065) CFA_SP SP+-2
          CFI (cfiCond1065) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1066 Using cfiCommon0
          CFI (cfiCond1066) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1066) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1066) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1066) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1066) CFA_SP SP+-2
          CFI (cfiCond1066) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1067 Using cfiCommon0
          CFI (cfiCond1067) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1067) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond1067) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1067) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1067) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1067) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1067) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1067) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1067) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1067) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1067) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1067) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1067) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1067) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1067) CFA_SP SP+-2
          CFI (cfiCond1067) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1068 Using cfiCommon1
          CFI (cfiPicker1068) NoFunction
          CFI (cfiPicker1068) Picker
        ADD     A,0xE0 /* A   */
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1062
          CFI EndBlock cfiCond1063
          CFI EndBlock cfiCond1064
          CFI EndBlock cfiCond1065
          CFI EndBlock cfiCond1066
          CFI EndBlock cfiCond1067
          CFI EndBlock cfiPicker1068

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond1069 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_450
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1070 Using cfiCommon0
          CFI (cfiCond1070) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1070) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1070) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1070) CFA_SP SP+-2
          CFI (cfiCond1070) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1071 Using cfiCommon1
          CFI (cfiPicker1071) NoFunction
          CFI (cfiPicker1071) Picker
        INC     DPTR
          CFI EndBlock cfiCond1069
          CFI EndBlock cfiCond1070
          CFI EndBlock cfiPicker1071
        REQUIRE ??Subroutine197_0
        ; // Fall through to label ??Subroutine197_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine197_0:
          CFI Block cfiCond1072 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_447
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1073 Using cfiCommon0
          CFI (cfiCond1073) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_448
          CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1073) CFA_SP SP+-2
          CFI (cfiCond1073) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1074 Using cfiCommon0
          CFI (cfiCond1074) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1074) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1074) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1074) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1074) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1074) CFA_SP SP+-2
          CFI (cfiCond1074) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1075 Using cfiCommon0
          CFI (cfiCond1075) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1075) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1075) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1075) CFA_SP SP+-2
          CFI (cfiCond1075) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1076 Using cfiCommon0
          CFI (cfiCond1076) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1076) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond1076) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1076) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1076) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1076) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1076) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1076) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1076) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1076) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1076) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1076) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1076) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1076) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1076) CFA_SP SP+-2
          CFI (cfiCond1076) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1077 Using cfiCommon1
          CFI (cfiPicker1077) NoFunction
          CFI (cfiPicker1077) Picker
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiCond1073
          CFI EndBlock cfiCond1074
          CFI EndBlock cfiCond1075
          CFI EndBlock cfiCond1076
          CFI EndBlock cfiPicker1077

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond1078 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_464
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1079 Using cfiCommon0
          CFI (cfiCond1079) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1079) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond1079) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1079) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1079) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1079) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1079) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1079) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1079) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1079) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1079) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1079) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1079) CFA_SP SP+-2
          CFI (cfiCond1079) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker1080 Using cfiCommon1
          CFI (cfiPicker1080) NoFunction
          CFI (cfiPicker1080) Picker
        MOV     R4,DPL
        MOV     R5,DPH
          CFI EndBlock cfiCond1078
          CFI EndBlock cfiCond1079
          CFI EndBlock cfiPicker1080
        REQUIRE ??Subroutine198_0
        ; // Fall through to label ??Subroutine198_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine198_0:
          CFI Block cfiCond1081 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_461
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1082 Using cfiCommon0
          CFI (cfiCond1082) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1082) Conditional ??CrossCallReturnLabel_462
          CFI (cfiCond1082) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1082) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1082) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1082) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1082) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1082) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1082) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1082) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1082) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1082) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1082) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1082) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1082) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1082) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1082) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1082) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1082) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1082) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1082) CFA_SP SP+-2
          CFI (cfiCond1082) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1083 Using cfiCommon0
          CFI (cfiCond1083) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1083) CFA_SP SP+-2
          CFI (cfiCond1083) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1084 Using cfiCommon0
          CFI (cfiCond1084) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1084) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond1084) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1084) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1084) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1084) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1084) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1084) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1084) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1084) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1084) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1084) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1084) CFA_SP SP+-2
          CFI (cfiCond1084) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1085 Using cfiCommon0
          CFI (cfiCond1085) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1085) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond1085) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1085) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1085) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1085) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1085) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1085) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1085) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1085) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1085) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1085) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1085) CFA_SP SP+-2
          CFI (cfiCond1085) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker1086 Using cfiCommon1
          CFI (cfiPicker1086) NoFunction
          CFI (cfiPicker1086) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond1081
          CFI EndBlock cfiCond1082
          CFI EndBlock cfiCond1083
          CFI EndBlock cfiCond1084
          CFI EndBlock cfiCond1085
          CFI EndBlock cfiPicker1086
        REQUIRE ??Subroutine199_0
        ; // Fall through to label ??Subroutine199_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine199_0:
          CFI Block cfiCond1087 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_452
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1088 Using cfiCommon0
          CFI (cfiCond1088) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1088) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1088) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1088) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1088) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1088) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1088) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1088) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1088) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1088) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1088) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1088) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1088) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1088) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1088) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1088) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1088) CFA_SP SP+-2
          CFI (cfiCond1088) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1089 Using cfiCommon0
          CFI (cfiCond1089) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1089) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1089) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1089) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1089) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1089) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1089) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1089) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1089) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1089) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1089) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1089) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1089) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1089) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1089) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1089) CFA_SP SP+-2
          CFI (cfiCond1089) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1090 Using cfiCommon0
          CFI (cfiCond1090) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1090) Conditional ??CrossCallReturnLabel_455
          CFI (cfiCond1090) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1090) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1090) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1090) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1090) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1090) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1090) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1090) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1090) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1090) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1090) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1090) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1090) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1090) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1090) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1090) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1090) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1090) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1090) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1090) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1090) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1090) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1090) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1090) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1090) CFA_SP SP+-2
          CFI (cfiCond1090) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1091 Using cfiCommon0
          CFI (cfiCond1091) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1091) CFA_SP SP+-2
          CFI (cfiCond1091) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1092 Using cfiCommon0
          CFI (cfiCond1092) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1092) CFA_SP SP+-2
          CFI (cfiCond1092) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1093 Using cfiCommon0
          CFI (cfiCond1093) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1093) Conditional ??CrossCallReturnLabel_458
          CFI (cfiCond1093) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1093) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1093) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1093) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1093) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1093) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1093) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1093) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1093) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1093) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1093) CFA_SP SP+-2
          CFI (cfiCond1093) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1094 Using cfiCommon0
          CFI (cfiCond1094) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_459
          CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1094) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1094) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1094) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1094) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1094) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1094) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1094) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1094) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1094) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1094) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1094) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1094) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1094) CFA_SP SP+-2
          CFI (cfiCond1094) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1095 Using cfiCommon0
          CFI (cfiCond1095) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_460
          CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1095) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1095) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1095) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1095) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1095) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1095) CFA_SP SP+-2
          CFI (cfiCond1095) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1096 Using cfiCommon0
          CFI (cfiCond1096) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1096) Conditional ??CrossCallReturnLabel_461
          CFI (cfiCond1096) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1096) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1096) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1096) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1096) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1096) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1096) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1096) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1096) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1096) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1096) CFA_SP SP+-2
          CFI (cfiCond1096) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1097 Using cfiCommon0
          CFI (cfiCond1097) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_462
          CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1097) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1097) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1097) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1097) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1097) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1097) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1097) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1097) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1097) CFA_SP SP+-2
          CFI (cfiCond1097) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1098 Using cfiCommon0
          CFI (cfiCond1098) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1098) CFA_SP SP+-2
          CFI (cfiCond1098) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1099 Using cfiCommon0
          CFI (cfiCond1099) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1099) CFA_SP SP+-2
          CFI (cfiCond1099) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1100 Using cfiCommon0
          CFI (cfiCond1100) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1100) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond1100) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1100) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1100) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1100) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1100) CFA_SP SP+-2
          CFI (cfiCond1100) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker1101 Using cfiCommon1
          CFI (cfiPicker1101) NoFunction
          CFI (cfiPicker1101) Picker
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_481:
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1087
          CFI EndBlock cfiCond1088
          CFI EndBlock cfiCond1089
          CFI EndBlock cfiCond1090
          CFI EndBlock cfiCond1091
          CFI EndBlock cfiCond1092
          CFI EndBlock cfiCond1093
          CFI EndBlock cfiCond1094
          CFI EndBlock cfiCond1095
          CFI EndBlock cfiCond1096
          CFI EndBlock cfiCond1097
          CFI EndBlock cfiCond1098
          CFI EndBlock cfiCond1099
          CFI EndBlock cfiCond1100
          CFI EndBlock cfiPicker1101

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond1102 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_467
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1103 Using cfiCommon0
          CFI (cfiCond1103) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1103) Conditional ??CrossCallReturnLabel_468
          CFI (cfiCond1103) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1103) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1103) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1103) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1103) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1103) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1103) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1103) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1103) CFA_SP SP+-2
          CFI (cfiCond1103) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1104 Using cfiCommon1
          CFI (cfiPicker1104) NoFunction
          CFI (cfiPicker1104) Picker
        MOVX    A,@DPTR
        MOV     R2,A
          CFI EndBlock cfiCond1102
          CFI EndBlock cfiCond1103
          CFI EndBlock cfiPicker1104
        REQUIRE ??Subroutine200_0
        ; // Fall through to label ??Subroutine200_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine200_0:
          CFI Block cfiCond1105 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_466
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1106 Using cfiCommon0
          CFI (cfiCond1106) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1106) Conditional ??CrossCallReturnLabel_467
          CFI (cfiCond1106) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1106) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1106) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1106) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1106) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1106) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1106) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1106) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1106) CFA_SP SP+-2
          CFI (cfiCond1106) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1107 Using cfiCommon0
          CFI (cfiCond1107) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1107) Conditional ??CrossCallReturnLabel_468
          CFI (cfiCond1107) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1107) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1107) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1107) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1107) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1107) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1107) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1107) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1107) CFA_SP SP+-2
          CFI (cfiCond1107) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1108 Using cfiCommon1
          CFI (cfiPicker1108) NoFunction
          CFI (cfiPicker1108) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        RET
          CFI EndBlock cfiCond1105
          CFI EndBlock cfiCond1106
          CFI EndBlock cfiCond1107
          CFI EndBlock cfiPicker1108

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond1109 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1110 Using cfiCommon0
          CFI (cfiCond1110) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1110) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1110) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1110) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1110) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1110) CFA_SP SP+-2
          CFI (cfiCond1110) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1111 Using cfiCommon1
          CFI (cfiPicker1111) NoFunction
          CFI (cfiPicker1111) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R4
        ADD     A,R0
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     A,R2
        ADD     A,0xE0 /* A   */
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        RET
          CFI EndBlock cfiCond1109
          CFI EndBlock cfiCond1110
          CFI EndBlock cfiPicker1111

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond1112 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_63
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1113 Using cfiCommon0
          CFI (cfiCond1113) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1113) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1113) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1113) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1113) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1113) CFA_SP SP+-2
          CFI (cfiCond1113) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1114 Using cfiCommon1
          CFI (cfiPicker1114) NoFunction
          CFI (cfiPicker1114) Picker
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_393:
        MOV     R6,DPL
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond1112
          CFI EndBlock cfiCond1113
          CFI EndBlock cfiPicker1114

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond1115 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_469
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1116 Using cfiCommon0
          CFI (cfiCond1116) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_470
          CFI (cfiCond1116) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1116) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1116) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1116) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1116) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1116) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1116) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1116) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1116) CFA_SP SP+-2
          CFI (cfiCond1116) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1117 Using cfiCommon1
          CFI (cfiPicker1117) NoFunction
          CFI (cfiPicker1117) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R3,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R3
        MOV     DPH,A
        MOV     A,R4
          CFI EndBlock cfiCond1115
          CFI EndBlock cfiCond1116
          CFI EndBlock cfiPicker1117
        REQUIRE ??Subroutine201_0
        ; // Fall through to label ??Subroutine201_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine201_0:
          CFI Block cfiCond1118 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_471
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1119 Using cfiCommon0
          CFI (cfiCond1119) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1119) Conditional ??CrossCallReturnLabel_469
          CFI (cfiCond1119) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1119) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1119) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1119) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1119) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1119) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1119) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1119) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1119) CFA_SP SP+-2
          CFI (cfiCond1119) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1120 Using cfiCommon0
          CFI (cfiCond1120) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1120) Conditional ??CrossCallReturnLabel_470
          CFI (cfiCond1120) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1120) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1120) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1120) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1120) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1120) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1120) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1120) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1120) CFA_SP SP+-2
          CFI (cfiCond1120) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1121 Using cfiCommon1
          CFI (cfiPicker1121) NoFunction
          CFI (cfiPicker1121) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        RET
          CFI EndBlock cfiCond1118
          CFI EndBlock cfiCond1119
          CFI EndBlock cfiCond1120
          CFI EndBlock cfiPicker1121
// 3274 
// 3275 /*********************************************************************
// 3276  * @fn          ZDO_ParseDeviceAnnce
// 3277  *
// 3278  * @brief       Parse a Device Announce message.
// 3279  *
// 3280  * @param       inMsg - Incoming message
// 3281  * @param       pAnnce - place to put the parsed information
// 3282  *
// 3283  * @return      none
// 3284  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3285 void ZDO_ParseDeviceAnnce( zdoIncomingMsg_t *inMsg, ZDO_DeviceAnnce_t *pAnnce )
ZDO_ParseDeviceAnnce:
          CFI Block cfiBlock1122 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
        CODE
// 3286 {
        FUNCALL ZDO_ParseDeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3287   uint8 *msg;
// 3288 
// 3289   // Parse incoming message
// 3290   msg = inMsg->asdu;
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_139:
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_130:
        MOV     R7,A
// 3291   pAnnce->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_383:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine48 & 0xFFFF
// 3292   msg += 2;
??CrossCallReturnLabel_76:
        JNC     ??ZDO_ParseDeviceAnnce_0
        INC     R7
// 3293   osal_cpyExtAddr( pAnnce->extAddr, msg );
??ZDO_ParseDeviceAnnce_0:
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_350:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3294   msg += Z_EXTADDR_LEN;
// 3295   pAnnce->capabilities = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_101:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3296 }
        LJMP    ??Subroutine155_0 & 0xFFFF
          CFI EndBlock cfiBlock1122

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond1123 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_137
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1124 Using cfiCommon0
          CFI (cfiCond1124) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1124) Conditional ??CrossCallReturnLabel_138
          CFI (cfiCond1124) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1124) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1124) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1124) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1124) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1124) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1124) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1124) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1124) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1124) CFA_SP SP+-2
          CFI (cfiCond1124) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1125 Using cfiCommon0
          CFI (cfiCond1125) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1125) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond1125) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1125) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1125) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1125) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1125) CFA_SP SP+-2
          CFI (cfiCond1125) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1126 Using cfiCommon0
          CFI (cfiCond1126) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond1126) Conditional ??CrossCallReturnLabel_140
          CFI (cfiCond1126) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1126) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1126) CFA_SP SP+-7
          CFI Block cfiPicker1127 Using cfiCommon1
          CFI (cfiPicker1127) NoFunction
          CFI (cfiPicker1127) Picker
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_210:
        RET
          CFI EndBlock cfiCond1123
          CFI EndBlock cfiCond1124
          CFI EndBlock cfiCond1125
          CFI EndBlock cfiCond1126
          CFI EndBlock cfiPicker1127

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine138:
          CFI Block cfiCond1128 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_135
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1129 Using cfiCommon0
          CFI (cfiCond1129) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1129) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_136
          CFI (cfiCond1129) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1129) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1129) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1129) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1129) CFA_SP SP+-4
          CFI (cfiCond1129) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1130 Using cfiCommon0
          CFI (cfiCond1130) Function ZDO_ParseEPListRsp
          CFI (cfiCond1130) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_137
          CFI (cfiCond1130) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1130) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1130) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1130) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1130) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1130) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1130) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1130) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1130) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1130) CFA_SP SP+-4
          CFI (cfiCond1130) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1131 Using cfiCommon0
          CFI (cfiCond1131) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1131) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_138
          CFI (cfiCond1131) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1131) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1131) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1131) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1131) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1131) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1131) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1131) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1131) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1131) CFA_SP SP+-4
          CFI (cfiCond1131) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1132 Using cfiCommon0
          CFI (cfiCond1132) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1132) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_139
          CFI (cfiCond1132) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1132) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1132) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1132) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1132) CFA_SP SP+-4
          CFI (cfiCond1132) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1133 Using cfiCommon0
          CFI (cfiCond1133) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond1133) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_140
          CFI (cfiCond1133) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1133) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1133) CFA_SP SP+-9
          CFI Block cfiPicker1134 Using cfiCommon1
          CFI (cfiPicker1134) NoFunction
          CFI (cfiPicker1134) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_310:
        ADDC    A,R3
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond1128
          CFI EndBlock cfiCond1129
          CFI EndBlock cfiCond1130
          CFI EndBlock cfiCond1131
          CFI EndBlock cfiCond1132
          CFI EndBlock cfiCond1133
          CFI EndBlock cfiPicker1134

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond1135 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_129
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1136 Using cfiCommon0
          CFI (cfiCond1136) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1136) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond1136) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1136) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1136) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1136) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1136) CFA_SP SP+-2
          CFI (cfiCond1136) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1137 Using cfiCommon1
          CFI (cfiPicker1137) NoFunction
          CFI (cfiPicker1137) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_432:
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        RET
          CFI EndBlock cfiCond1135
          CFI EndBlock cfiCond1136
          CFI EndBlock cfiPicker1137

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond1138 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_75
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1139 Using cfiCommon0
          CFI (cfiCond1139) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1139) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond1139) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1139) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1139) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1139) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1139) CFA_SP SP+-2
          CFI (cfiCond1139) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1140 Using cfiCommon1
          CFI (cfiPicker1140) NoFunction
          CFI (cfiPicker1140) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        RET
          CFI EndBlock cfiCond1138
          CFI EndBlock cfiCond1139
          CFI EndBlock cfiPicker1140
// 3297 
// 3298 /*********************************************************************
// 3299  * @fn          ZDO_ParseMgmtNwkUpdateNotify
// 3300  *
// 3301  * @brief       This function handles parsing of the incoming Management
// 3302  *              Network Update notify.
// 3303  *
// 3304  * @param       inMsg - incoming message (request)
// 3305  *
// 3306  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3307  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3308  *          by the calling function [osal_mem_free()].
// 3309  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3310 ZDO_MgmtNwkUpdateNotify_t *ZDO_ParseMgmtNwkUpdateNotify( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtNwkUpdateNotify:
          CFI Block cfiBlock1141 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
        CODE
// 3311 {
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
// 3312   uint8 status;
// 3313   uint32 scannedChannels = 0;
        MOV     ?V4,#0x0
        MOV     ?V5,#0x0
        MOV     ?V6,#0x0
        MOV     ?V7,#0x0
// 3314   uint16 totalTransmissions = 0;
        MOV     ?V0,#0x0
        MOV     ?V1,#0x0
// 3315   uint16 transmissionFailures = 0;
        MOV     ?V2,#0x0
        MOV     ?V3,#0x0
// 3316   uint8 listCount = 0;
        MOV     ?V11,#0x0
// 3317   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine53 & 0xFFFF
// 3318   ZDO_MgmtNwkUpdateNotify_t *pRsp;
// 3319 
// 3320   status = *msg++;
??CrossCallReturnLabel_397:
        MOV     ?V10,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3321   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtNwkUpdateNotify_0
// 3322   {
// 3323     scannedChannels = osal_build_uint32( msg, 4 );
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V6,R4
        MOV     ?V7,R5
// 3324     msg += 4;
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_1
        INC     R7
// 3325     totalTransmissions = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtNwkUpdateNotify_1:
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_473:
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
// 3326     msg += 2;
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_2
        INC     R7
// 3327     transmissionFailures = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtNwkUpdateNotify_2:
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_474:
        MOV     ?V2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V3,A
// 3328     msg += 2;
// 3329     listCount = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V11,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_0
        INC     R7
// 3330   }
// 3331 
// 3332   pRsp = (ZDO_MgmtNwkUpdateNotify_t *)osal_mem_alloc( sizeof ( ZDO_MgmtNwkUpdateNotify_t ) + listCount );
??ZDO_ParseMgmtNwkUpdateNotify_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V11
        LCALL   ??Subroutine185_0 & 0xFFFF
??CrossCallReturnLabel_359:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V8,R2
        MOV     ?V9,R3
// 3333 
// 3334   if ( pRsp )
        MOV     A,R2
        ORL     A,?V9
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_3
// 3335   {
// 3336     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V10
        MOVX    @DPTR,A
// 3337     pRsp->scannedChannels = scannedChannels;
        INC     DPTR
        MOV     R0,#?V4
        LCALL   ?L_MOV_TO_X
// 3338     pRsp->totalTransmissions = totalTransmissions;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine15 & 0xFFFF
// 3339     pRsp->transmissionFailures = transmissionFailures;
??CrossCallReturnLabel_9:
        MOV     A,?V2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V3
        LCALL   ?Subroutine15 & 0xFFFF
// 3340     pRsp->listCount = listCount;
??CrossCallReturnLabel_10:
        INC     DPTR
        INC     DPTR
        MOV     A,?V11
        MOVX    @DPTR,A
// 3341 
// 3342     // Allocate a buffer big enough to handle the list.
// 3343     if ( listCount > 0 )
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_3
// 3344     {
// 3345       osal_memcpy( pRsp->energyValues, msg, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0,R6
        MOV     ?V1,R7
        MOV     ?V2,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,?V11
        MOV     R5,#0x0
        LCALL   ?Subroutine140 & 0xFFFF
// 3346     }
// 3347   }
??CrossCallReturnLabel_361:
        ADDC    A,?V9
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
// 3348 
// 3349   return ( pRsp );
??ZDO_ParseMgmtNwkUpdateNotify_3:
        MOV     R2,?V8
        MOV     R3,?V9
        LJMP    ?Subroutine6 & 0xFFFF
// 3350 }
          CFI EndBlock cfiBlock1141

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond1142 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_473
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1143 Using cfiCommon0
          CFI (cfiCond1143) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1143) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond1143) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1143) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1143) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1143) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1143) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1143) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1143) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1143) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1143) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1143) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1143) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1143) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1143) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1143) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1143) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1143) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1143) CFA_SP SP+-2
          CFI (cfiCond1143) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1144 Using cfiCommon1
          CFI (cfiPicker1144) NoFunction
          CFI (cfiPicker1144) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond1142
          CFI EndBlock cfiCond1143
          CFI EndBlock cfiPicker1144
        REQUIRE ??Subroutine202_0
        ; // Fall through to label ??Subroutine202_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine202_0:
          CFI Block cfiCond1145 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_472
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1146 Using cfiCommon0
          CFI (cfiCond1146) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1146) Conditional ??CrossCallReturnLabel_473
          CFI (cfiCond1146) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1146) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1146) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1146) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1146) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1146) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1146) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1146) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1146) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1146) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1146) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1146) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1146) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1146) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1146) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1146) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1146) CFA_SP SP+-2
          CFI (cfiCond1146) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1147 Using cfiCommon0
          CFI (cfiCond1147) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1147) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond1147) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1147) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1147) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1147) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1147) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1147) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1147) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1147) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1147) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1147) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1147) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1147) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1147) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1147) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1147) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1147) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1147) CFA_SP SP+-2
          CFI (cfiCond1147) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1148 Using cfiCommon1
          CFI (cfiPicker1148) NoFunction
          CFI (cfiPicker1148) Picker
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_476:
        RET
          CFI EndBlock cfiCond1145
          CFI EndBlock cfiCond1146
          CFI EndBlock cfiCond1147
          CFI EndBlock cfiPicker1148

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine147:
          CFI Block cfiCond1149 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1150 Using cfiCommon0
          CFI (cfiCond1150) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1150) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_82
          CFI (cfiCond1150) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1150) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1150) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1150) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1150) CFA_SP SP+-6
          CFI (cfiCond1150) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1151 Using cfiCommon0
          CFI (cfiCond1151) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1151) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_87
          CFI (cfiCond1151) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1151) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1151) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1151) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1151) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1151) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1151) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1151) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1151) CFA_SP SP+-6
          CFI (cfiCond1151) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1152 Using cfiCommon0
          CFI (cfiCond1152) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1152) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_88
          CFI (cfiCond1152) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1152) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1152) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1152) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1152) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1152) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1152) CFA_SP SP+-6
          CFI (cfiCond1152) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1153 Using cfiCommon0
          CFI (cfiCond1153) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1153) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_473
          CFI (cfiCond1153) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1153) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1153) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1153) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1153) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1153) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1153) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1153) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1153) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1153) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1153) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1153) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1153) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1153) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1153) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1153) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1153) CFA_SP SP+-4
          CFI (cfiCond1153) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1154 Using cfiCommon0
          CFI (cfiCond1154) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1154) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_474
          CFI (cfiCond1154) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1154) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1154) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1154) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1154) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1154) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1154) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1154) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1154) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1154) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1154) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1154) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1154) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1154) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1154) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1154) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1154) CFA_SP SP+-4
          CFI (cfiCond1154) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1155 Using cfiCommon0
          CFI (cfiCond1155) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1155) Conditional ??CrossCallReturnLabel_476, ??CrossCallReturnLabel_472
          CFI (cfiCond1155) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1155) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1155) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1155) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1155) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1155) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1155) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1155) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1155) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1155) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1155) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1155) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1155) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1155) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1155) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1155) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1155) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1155) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1155) CFA_SP SP+-4
          CFI (cfiCond1155) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker1156 Using cfiCommon1
          CFI (cfiPicker1156) NoFunction
          CFI (cfiPicker1156) Picker
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_482:
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        ADD     A,R0
        RET
          CFI EndBlock cfiCond1149
          CFI EndBlock cfiCond1150
          CFI EndBlock cfiCond1151
          CFI EndBlock cfiCond1152
          CFI EndBlock cfiCond1153
          CFI EndBlock cfiCond1154
          CFI EndBlock cfiCond1155
          CFI EndBlock cfiPicker1156

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond1157 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1158 Using cfiCommon0
          CFI (cfiCond1158) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1158) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond1158) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1158) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1158) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1158) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1158) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1158) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1158) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1158) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1158) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1158) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1158) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1158) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1158) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1158) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1158) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1158) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1158) CFA_SP SP+-2
          CFI (cfiCond1158) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1159 Using cfiCommon0
          CFI (cfiCond1159) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond1159) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1159) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1159) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1159) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1159) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1159) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1159) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1159) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1159) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1159) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1159) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1159) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1159) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1159) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1159) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1159) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1159) CFA_SP SP+-2
          CFI (cfiCond1159) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1160 Using cfiCommon1
          CFI (cfiPicker1160) NoFunction
          CFI (cfiPicker1160) Picker
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_180:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1157
          CFI EndBlock cfiCond1158
          CFI EndBlock cfiCond1159
          CFI EndBlock cfiPicker1160
// 3351 
// 3352 /*********************************************************************
// 3353  * @fn          ZDO_ParseMgmtNwkUpdateReq
// 3354  *
// 3355  * @brief       This function handles parsing the incoming Management
// 3356  *              Network Update request and starts the request (if needed).
// 3357  *
// 3358  * @param       inMsg - incoming message (request)
// 3359  * @param       pReq - pointer to place to parse message to
// 3360  *
// 3361  * @return      none
// 3362  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3363 void ZDO_ParseMgmtNwkUpdateReq( zdoIncomingMsg_t *inMsg, ZDO_MgmtNwkUpdateReq_t *pReq )
ZDO_ParseMgmtNwkUpdateReq:
          CFI Block cfiBlock1161 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
        CODE
// 3364 {
        FUNCALL ZDO_ParseMgmtNwkUpdateReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3365   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_145:
        LCALL   ?Subroutine71 & 0xFFFF
// 3366 
// 3367   pReq->channelMask = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_108:
        LCALL   `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?XSTORE_R0123
// 3368   msg += 4;
// 3369   pReq->scanDuration = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3370 
// 3371   if ( pReq->scanDuration <= 0x05 )
        CLR     C
        SUBB    A,#0x6
        JNC     ??ZDO_ParseMgmtNwkUpdateReq_0
// 3372   {
// 3373     // Request is to scan over channelMask
// 3374     pReq->scanCount = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine128 & 0xFFFF
// 3375   }
??CrossCallReturnLabel_199:
        SJMP    ??ZDO_ParseMgmtNwkUpdateReq_1
// 3376   else if ( ( pReq->scanDuration == 0xFE ) || ( pReq->scanDuration == 0xFF ) )
??ZDO_ParseMgmtNwkUpdateReq_0:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xfe
        JZ      ??ZDO_ParseMgmtNwkUpdateReq_2
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_3
// 3377   {
// 3378     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 3379     pReq->nwkUpdateId = *msg++;
??ZDO_ParseMgmtNwkUpdateReq_2:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_102:
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x6
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateReq_4
        INC     R7
// 3380 
// 3381     if ( pReq->scanDuration == 0xFF )
??ZDO_ParseMgmtNwkUpdateReq_4:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_3
// 3382     {
// 3383       pReq->nwkManagerAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine61 & 0xFFFF
// 3384     }
// 3385   }
??CrossCallReturnLabel_94:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseMgmtNwkUpdateReq_1:
        MOVX    @DPTR,A
// 3386 }
??ZDO_ParseMgmtNwkUpdateReq_3:
        LJMP    ??Subroutine155_0 & 0xFFFF
          CFI EndBlock cfiBlock1161

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond1162 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_107
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1163 Using cfiCommon0
          CFI (cfiCond1163) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1163) Conditional ??CrossCallReturnLabel_108
          CFI (cfiCond1163) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1163) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1163) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1163) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1163) CFA_SP SP+-2
          CFI (cfiCond1163) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1164 Using cfiCommon1
          CFI (cfiPicker1164) NoFunction
          CFI (cfiPicker1164) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        ; Setup parameters for call to function osal_build_uint32
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1162
          CFI EndBlock cfiCond1163
          CFI EndBlock cfiPicker1164

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond1165 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1166 Using cfiCommon0
          CFI (cfiCond1166) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1166) Conditional ??CrossCallReturnLabel_102
          CFI (cfiCond1166) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1166) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1166) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1166) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1166) CFA_SP SP+-2
          CFI (cfiCond1166) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1167 Using cfiCommon1
          CFI (cfiPicker1167) NoFunction
          CFI (cfiPicker1167) Picker
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_200:
        INC     DPTR
        RET
          CFI EndBlock cfiCond1165
          CFI EndBlock cfiCond1166
          CFI EndBlock cfiPicker1167

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine128:
          CFI Block cfiCond1168 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_199
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1169 Using cfiCommon0
          CFI (cfiCond1169) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1169) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_101
          CFI (cfiCond1169) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1169) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1169) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1169) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1169) CFA_SP SP+-4
          CFI (cfiCond1169) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1170 Using cfiCommon0
          CFI (cfiCond1170) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1170) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_102
          CFI (cfiCond1170) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1170) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1170) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1170) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1170) CFA_SP SP+-4
          CFI (cfiCond1170) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1171 Using cfiCommon1
          CFI (cfiPicker1171) NoFunction
          CFI (cfiPicker1171) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1168
          CFI EndBlock cfiCond1169
          CFI EndBlock cfiCond1170
          CFI EndBlock cfiPicker1171

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond1172 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1173 Using cfiCommon0
          CFI (cfiCond1173) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1173) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond1173) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1173) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1173) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1173) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1173) CFA_SP SP+-2
          CFI (cfiCond1173) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1174 Using cfiCommon1
          CFI (cfiPicker1174) NoFunction
          CFI (cfiPicker1174) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_385:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1172
          CFI EndBlock cfiCond1173
          CFI EndBlock cfiPicker1174
// 3387 
// 3388 /*********************************************************************
// 3389  * @fn          ZDO_ParseEndDeviceTimeoutRsp
// 3390  *
// 3391  * @brief       Parse the End_Device_Timeout_rsp message.
// 3392  *
// 3393  * @param       inMsg - incoming message.
// 3394  * @param       pRsp - place to put the parsed information.
// 3395  *
// 3396  * @return      none
// 3397  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3398 void ZDO_ParseEndDeviceTimeoutRsp( zdoIncomingMsg_t *inMsg, uint16 *pRsp )
ZDO_ParseEndDeviceTimeoutRsp:
          CFI Block cfiBlock1175 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceTimeoutRsp
        CODE
// 3399 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 3400   *pRsp = inMsg->asdu[0];
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_140:
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_287:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 3401 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1175

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zdpExternalStateTaskID>`:
        DATA16
        DW -1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_Init::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_StartDevice::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_StartDevice

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zdoSendStateChangeMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdoSendStateChangeMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateNwkStatus::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateNwkStatus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_AnyClusterMatches::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_AnyClusterMatches

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessNodeDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessPowerDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessPowerDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessSimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessActiveEPReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessActiveEPReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ConvertOTAClusters::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ConvertOTAClusters

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateAddrManager::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateAddrManager

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessEndDeviceTimeoutReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessEndDeviceTimeoutReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLqiReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLqiReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtRtgReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtRtgReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??NLME_PermitJoiningTimeout::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    NLME_PermitJoiningTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_BuildSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_BuildSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseAddrRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseAddrRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseNodeDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParsePowerDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParsePowerDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEPListRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEPListRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseUserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseUserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEndDeviceTimeoutRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceTimeoutRsp

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "StartDevice ERR">`:
        DB "StartDevice ERR"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "MODE unknown">`:
        DB "MODE unknown"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "End Device Bind">`:
        DB "End Device Bind"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Success Sent">`:
        DB "Success Sent"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Timeout">`:
        DB "Timeout"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Match Desc Req">`:
        DB "Match Desc Req"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Rsp Sent">`:
        DB "Rsp Sent"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Rsp Non Matched">`:
        DB "Rsp Non Matched"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Non Matched">`:
        DB "Non Matched"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e8:
        DD 1000

        END
// 3402 
// 3403 /*********************************************************************
// 3404 *********************************************************************/
// 
// 10 300 bytes in segment BANKED_CODE
//    276 bytes in segment BANK_RELAYS
//      2 bytes in segment XDATA_I
//      2 bytes in segment XDATA_ID
//    122 bytes in segment XDATA_ROM_C
//     61 bytes in segment XDATA_Z
// 
//    278 bytes of CODE     memory
//    118 bytes of CONST    memory (+ 4 bytes shared)
// 10 300 bytes of HUGECODE memory
//     63 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
