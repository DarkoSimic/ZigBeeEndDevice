///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.30.3.3983 for 8051               20/Apr/2017  12:17:45
// Copyright 2004-2016 IAR Systems AB.
// Evaluation license - IAR Embedded Workbench for 8051, Evaluation version 9.30
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Components\hal\BME280_driver-master\bme280.c
//    Command line       =  
//        -f
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0x0422
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
//        -DREJOIN_POLL_RATE=440
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Components\hal\BME280_driver-master\bme280.c
//        -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC
//        -D LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -lC
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\List
//        -lA
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\List
//        --diag_suppress Pe001,Pa010 -o
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\Obj
//        -e --no_code_motion --debug --core=plain --dptr=16,1
//        --data_model=large --code_model=banked
//        --calling_convention=xdata_reentrant --place_constants=data_rom
//        --nr_virtual_regs 16 -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\Source\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -I
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Components\hal\BME280_driver-master\
//        -Ohz --require_prototypes
//    List file          =  
//        C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\List\bme280.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME bme280

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__iar_require _formatted_write", ""
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FLT_ADD
        EXTERN ?FLT_DIV
        EXTERN ?FLT_GE
        EXTERN ?FLT_LT
        EXTERN ?FLT_MUL
        EXTERN ?FLT_SUB
        EXTERN ?FLT_TO_L
        EXTERN ?L_ADD
        EXTERN ?L_ADD_X
        EXTERN ?L_DIV_MOD
        EXTERN ?L_IOR
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?L_MUL
        EXTERN ?L_SHL
        EXTERN ?L_SUB
        EXTERN ?L_SUB_X
        EXTERN ?L_TO_FLT
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_FOUR
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?SL_GE_X
        EXTERN ?SL_SHR
        EXTERN ?SS_SHR
        EXTERN ?S_DIV_MOD
        EXTERN ?S_SHL
        EXTERN ?UL_DIV_MOD
        EXTERN ?UL_GE_X
        EXTERN ?UL_GT
        EXTERN ?UL_SHR
        EXTERN ?UL_TO_FLT
        EXTERN ?XLOAD_R0123
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN ?XSTORE_R0123
        EXTERN ?XSTORE_R2345
        EXTERN __INIT_XDATA_Z

        PUBLIC `??BME280_SPI_bus_read::?relay`
        FUNCTION `??BME280_SPI_bus_read::?relay`,0203H
        PUBLIC `??BME280_SPI_bus_write::?relay`
        FUNCTION `??BME280_SPI_bus_write::?relay`,0203H
        PUBLIC `??BME280_delay_msek::?relay`
        FUNCTION `??BME280_delay_msek::?relay`,0203H
        PUBLIC `??SPI_routine::?relay`
        FUNCTION `??SPI_routine::?relay`,0203H
        PUBLIC `??UARTPrint::?relay`
        FUNCTION `??UARTPrint::?relay`,0203H
        PUBLIC `??bme280_compensate_humidity_double::?relay`
        FUNCTION `??bme280_compensate_humidity_double::?relay`,0203H
        PUBLIC `??bme280_compensate_humidity_int32::?relay`
        FUNCTION `??bme280_compensate_humidity_int32::?relay`,0203H
        PUBLIC ??bme280_compensate_humidity_int32_sixteen_bit_
        FUNCTION ??bme280_compensate_humidity_int32_sixteen_bit_,0203H
        PUBLIC `??bme280_compensate_pressure_double::?relay`
        FUNCTION `??bme280_compensate_pressure_double::?relay`,0203H
        PUBLIC `??bme280_compensate_pressure_int32::?relay`
        FUNCTION `??bme280_compensate_pressure_int32::?relay`,0203H
        PUBLIC `??bme280_compensate_pressure_int64::?relay`
        FUNCTION `??bme280_compensate_pressure_int64::?relay`,0203H
        PUBLIC ??bme280_compensate_pressure_int64_twentyfour_b
        FUNCTION ??bme280_compensate_pressure_int64_twentyfour_b,0203H
        PUBLIC `??bme280_compensate_temperature_double::?relay`
        FUNCTION `??bme280_compensate_temperature_double::?relay`,0203H
        PUBLIC `??bme280_compensate_temperature_int32::?relay`
        FUNCTION `??bme280_compensate_temperature_int32::?relay`,0203H
        PUBLIC ??bme280_compensate_temperature_int32_sixteen_b
        FUNCTION ??bme280_compensate_temperature_int32_sixteen_b,0203H
        PUBLIC `??bme280_compute_wait_time::?relay`
        FUNCTION `??bme280_compute_wait_time::?relay`,0203H
        PUBLIC `??bme280_data_readout::?relay`
        FUNCTION `??bme280_data_readout::?relay`,0203H
        PUBLIC `??bme280_data_readout_template::?relay`
        FUNCTION `??bme280_data_readout_template::?relay`,0203H
        PUBLIC `??bme280_display::?relay`
        FUNCTION `??bme280_display::?relay`,0203H
        PUBLIC `??bme280_get_calib_param::?relay`
        FUNCTION `??bme280_get_calib_param::?relay`,0203H
        PUBLIC `??bme280_get_filter::?relay`
        FUNCTION `??bme280_get_filter::?relay`,0203H
        PUBLIC ??bme280_get_forced_uncomp_pressure_temperature
        FUNCTION ??bme280_get_forced_uncomp_pressure_temperature,0203H
        PUBLIC `??bme280_get_oversamp_humidity::?relay`
        FUNCTION `??bme280_get_oversamp_humidity::?relay`,0203H
        PUBLIC `??bme280_get_oversamp_pressure::?relay`
        FUNCTION `??bme280_get_oversamp_pressure::?relay`,0203H
        PUBLIC `??bme280_get_oversamp_temperature::?relay`
        FUNCTION `??bme280_get_oversamp_temperature::?relay`,0203H
        PUBLIC `??bme280_get_power_mode::?relay`
        FUNCTION `??bme280_get_power_mode::?relay`,0203H
        PUBLIC `??bme280_get_spi3::?relay`
        FUNCTION `??bme280_get_spi3::?relay`,0203H
        PUBLIC `??bme280_get_standby_durn::?relay`
        FUNCTION `??bme280_get_standby_durn::?relay`,0203H
        PUBLIC `??bme280_init::?relay`
        FUNCTION `??bme280_init::?relay`,0203H
        PUBLIC `??bme280_init_struct::?relay`
        FUNCTION `??bme280_init_struct::?relay`,0203H
        PUBLIC `??bme280_read_pressure_temperature_humidity::?r`
        FUNCTION `??bme280_read_pressure_temperature_humidity::?r`,0203H
        PUBLIC `??bme280_read_register::?relay`
        FUNCTION `??bme280_read_register::?relay`,0203H
        PUBLIC `??bme280_read_uncomp_humidity::?relay`
        FUNCTION `??bme280_read_uncomp_humidity::?relay`,0203H
        PUBLIC `??bme280_read_uncomp_pressure::?relay`
        FUNCTION `??bme280_read_uncomp_pressure::?relay`,0203H
        PUBLIC ??bme280_read_uncomp_pressure_temperature_humid
        FUNCTION ??bme280_read_uncomp_pressure_temperature_humid,0203H
        PUBLIC `??bme280_read_uncomp_temperature::?relay`
        FUNCTION `??bme280_read_uncomp_temperature::?relay`,0203H
        PUBLIC `??bme280_send_data::?relay`
        FUNCTION `??bme280_send_data::?relay`,0203H
        PUBLIC `??bme280_set::?relay`
        FUNCTION `??bme280_set::?relay`,0203H
        PUBLIC `??bme280_set_filter::?relay`
        FUNCTION `??bme280_set_filter::?relay`,0203H
        PUBLIC `??bme280_set_oversamp_humidity::?relay`
        FUNCTION `??bme280_set_oversamp_humidity::?relay`,0203H
        PUBLIC `??bme280_set_oversamp_pressure::?relay`
        FUNCTION `??bme280_set_oversamp_pressure::?relay`,0203H
        PUBLIC `??bme280_set_oversamp_temperature::?relay`
        FUNCTION `??bme280_set_oversamp_temperature::?relay`,0203H
        PUBLIC `??bme280_set_power_mode::?relay`
        FUNCTION `??bme280_set_power_mode::?relay`,0203H
        PUBLIC `??bme280_set_soft_rst::?relay`
        FUNCTION `??bme280_set_soft_rst::?relay`,0203H
        PUBLIC `??bme280_set_spi3::?relay`
        FUNCTION `??bme280_set_spi3::?relay`,0203H
        PUBLIC `??bme280_set_standby_durn::?relay`
        FUNCTION `??bme280_set_standby_durn::?relay`,0203H
        PUBLIC `??bme280_write_register::?relay`
        FUNCTION `??bme280_write_register::?relay`,0203H
        PUBLIC BME280_SPI_bus_read
        FUNCTION BME280_SPI_bus_read,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 37, STACK
        PUBLIC BME280_SPI_bus_write
        FUNCTION BME280_SPI_bus_write,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC BME280_delay_msek
        FUNCTION BME280_delay_msek,080603H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 24, STACK
        PUBLIC SPI_routine
        FUNCTION SPI_routine,0203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC UARTPrint
        FUNCTION UARTPrint,021203H
        ARGFRAME XSTACK, 84, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBWEAK _A_P1
        PUBWEAK __Constant_0
        PUBWEAK __Constant_1
        PUBWEAK __Constant_19
        PUBWEAK __Constant_19000001
        PUBWEAK __Constant_2000
        PUBWEAK __Constant_200000
        PUBWEAK __Constant_2e800000
        PUBWEAK __Constant_3
        PUBWEAK __Constant_30000000
        PUBWEAK __Constant_32
        PUBWEAK __Constant_32800000
        PUBWEAK __Constant_36000000
        PUBWEAK __Constant_37000000
        PUBWEAK __Constant_37800000
        PUBWEAK __Constant_38000000
        PUBWEAK __Constant_38800000
        PUBWEAK __Constant_39000000
        PUBWEAK __Constant_39800000
        PUBWEAK __Constant_3a800000
        PUBWEAK __Constant_3d800000
        PUBWEAK __Constant_3e800000
        PUBWEAK __Constant_3f000000
        PUBWEAK __Constant_3f800000
        PUBWEAK __Constant_4000
        PUBWEAK __Constant_40000000
        PUBWEAK __Constant_42800000
        PUBWEAK __Constant_42c80001
        PUBWEAK __Constant_45a00000
        PUBWEAK __Constant_45c35000
        PUBWEAK __Constant_47800000
        PUBWEAK __Constant_5
        PUBWEAK __Constant_64
        PUBWEAK __Constant_7e
        PUBWEAK __Constant_80
        PUBWEAK __Constant_8000
        PUBWEAK __Constant_80000000
        PUBWEAK __Constant_c35
        PUBWEAK __Constant_c77a0000
        PUBWEAK __Constant_c7960000
        PUBWEAK __Constant_ffd12080
        PUBWEAK __Constant_fffe0c00
        PUBWEAK __Constant_fffed400
        PUBWEAK __Constant_ffff0600
        PUBWEAK __Constant_ffffffff
        PUBLIC bme280_compensate_humidity_double
        FUNCTION bme280_compensate_humidity_double,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 8, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC bme280_compensate_humidity_int32
        FUNCTION bme280_compensate_humidity_int32,080203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 24, STACK
        PUBLIC bme280_compensate_humidity_int32_sixteen_bit_output
        FUNCTION bme280_compensate_humidity_int32_sixteen_bit_output,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC bme280_compensate_pressure_double
        FUNCTION bme280_compensate_pressure_double,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        PUBLIC bme280_compensate_pressure_int32
        FUNCTION bme280_compensate_pressure_int32,080203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 4, STACK
        LOCFRAME XSTACK, 28, STACK
        PUBLIC bme280_compensate_pressure_int64
        FUNCTION bme280_compensate_pressure_int64,080203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 4, STACK
        LOCFRAME XSTACK, 28, STACK
        PUBLIC bme280_compensate_pressure_int64_twentyfour_bit_output
        FUNCTION bme280_compensate_pressure_int64_twentyfour_bit_output,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC bme280_compensate_temperature_double
        FUNCTION bme280_compensate_temperature_double,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 4, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC bme280_compensate_temperature_int32
        FUNCTION bme280_compensate_temperature_int32,080203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 20, STACK
        PUBLIC bme280_compensate_temperature_int32_sixteen_bit_output
        FUNCTION bme280_compensate_temperature_int32_sixteen_bit_output,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC bme280_compute_wait_time
        FUNCTION bme280_compute_wait_time,080203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC bme280_data_readout
        FUNCTION bme280_data_readout,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC bme280_data_readout_template
        FUNCTION bme280_data_readout_template,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        PUBLIC bme280_display
        FUNCTION bme280_display,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC bme280_get_calib_param
        FUNCTION bme280_get_calib_param,080203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC bme280_get_filter
        FUNCTION bme280_get_filter,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC bme280_get_forced_uncomp_pressure_temperature_humidity
        FUNCTION bme280_get_forced_uncomp_pressure_temperature_humidity,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC bme280_get_oversamp_humidity
        FUNCTION bme280_get_oversamp_humidity,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC bme280_get_oversamp_pressure
        FUNCTION bme280_get_oversamp_pressure,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC bme280_get_oversamp_temperature
        FUNCTION bme280_get_oversamp_temperature,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC bme280_get_power_mode
        FUNCTION bme280_get_power_mode,0203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC bme280_get_spi3
        FUNCTION bme280_get_spi3,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC bme280_get_standby_durn
        FUNCTION bme280_get_standby_durn,0203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC bme280_init
        FUNCTION bme280_init,021203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC bme280_init_struct
        FUNCTION bme280_init_struct,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC bme280_read_pressure_temperature_humidity
        FUNCTION bme280_read_pressure_temperature_humidity,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC bme280_read_register
        FUNCTION bme280_read_register,0203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC bme280_read_uncomp_humidity
        FUNCTION bme280_read_uncomp_humidity,080203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 18, STACK
        PUBLIC bme280_read_uncomp_pressure
        FUNCTION bme280_read_uncomp_pressure,080203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 19, STACK
        PUBLIC bme280_read_uncomp_pressure_temperature_humidity
        FUNCTION bme280_read_uncomp_pressure_temperature_humidity,080203H
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 26, STACK
        PUBLIC bme280_read_uncomp_temperature
        FUNCTION bme280_read_uncomp_temperature,080203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 19, STACK
        PUBLIC bme280_send_data
        FUNCTION bme280_send_data,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 88, STACK
        PUBLIC bme280_set
        FUNCTION bme280_set,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC bme280_set_filter
        FUNCTION bme280_set_filter,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 15, STACK
        PUBLIC bme280_set_oversamp_humidity
        FUNCTION bme280_set_oversamp_humidity,0a1203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 15, STACK
        PUBLIC bme280_set_oversamp_pressure
        FUNCTION bme280_set_oversamp_pressure,0a1203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC bme280_set_oversamp_temperature
        FUNCTION bme280_set_oversamp_temperature,0a1203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC bme280_set_power_mode
        FUNCTION bme280_set_power_mode,0a1203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC bme280_set_soft_rst
        FUNCTION bme280_set_soft_rst,0203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 1, STACK
        PUBLIC bme280_set_spi3
        FUNCTION bme280_set_spi3,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 15, STACK
        PUBLIC bme280_set_standby_durn
        FUNCTION bme280_set_standby_durn,0a1203H
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 15, STACK
        PUBLIC bme280_write_register
        FUNCTION bme280_write_register,0203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
HalLcdWriteString   SYMBOL "HalLcdWriteString"
`??HalLcdWriteString::?relay` SYMBOL "?relay", HalLcdWriteString
SPIDataGet          SYMBOL "SPIDataGet"
`??SPIDataGet::?relay` SYMBOL "?relay", SPIDataGet
SPIDataPut          SYMBOL "SPIDataPut"
`??SPIDataPut::?relay` SYMBOL "?relay", SPIDataPut
sprintf             SYMBOL "sprintf"
`??sprintf::?relay` SYMBOL "?relay", sprintf
BME280_SPI_bus_read SYMBOL "BME280_SPI_bus_read"
`??BME280_SPI_bus_read::?relay` SYMBOL "?relay", BME280_SPI_bus_read
BME280_SPI_bus_write SYMBOL "BME280_SPI_bus_write"
`??BME280_SPI_bus_write::?relay` SYMBOL "?relay", BME280_SPI_bus_write
BME280_delay_msek   SYMBOL "BME280_delay_msek"
`??BME280_delay_msek::?relay` SYMBOL "?relay", BME280_delay_msek
SPI_routine         SYMBOL "SPI_routine"
`??SPI_routine::?relay` SYMBOL "?relay", SPI_routine
UARTPrint           SYMBOL "UARTPrint"
`??UARTPrint::?relay` SYMBOL "?relay", UARTPrint
bme280_compensate_humidity_double SYMBOL "bme280_compensate_humidity_double"
`??bme280_compensate_humidity_double::?relay` SYMBOL "?relay", bme280_compensate_humidity_double
bme280_compensate_humidity_int32 SYMBOL "bme280_compensate_humidity_int32"
`??bme280_compensate_humidity_int32::?relay` SYMBOL "?relay", bme280_compensate_humidity_int32
bme280_compensate_humidity_int32_sixteen_bit_output SYMBOL "bme280_compensate_humidity_int32_sixteen_bit_output"
??bme280_compensate_humidity_int32_sixteen_bit_ SYMBOL "?relay", bme280_compensate_humidity_int32_sixteen_bit_output
bme280_compensate_pressure_double SYMBOL "bme280_compensate_pressure_double"
`??bme280_compensate_pressure_double::?relay` SYMBOL "?relay", bme280_compensate_pressure_double
bme280_compensate_pressure_int32 SYMBOL "bme280_compensate_pressure_int32"
`??bme280_compensate_pressure_int32::?relay` SYMBOL "?relay", bme280_compensate_pressure_int32
bme280_compensate_pressure_int64 SYMBOL "bme280_compensate_pressure_int64"
`??bme280_compensate_pressure_int64::?relay` SYMBOL "?relay", bme280_compensate_pressure_int64
bme280_compensate_pressure_int64_twentyfour_bit_output SYMBOL "bme280_compensate_pressure_int64_twentyfour_bit_output"
??bme280_compensate_pressure_int64_twentyfour_b SYMBOL "?relay", bme280_compensate_pressure_int64_twentyfour_bit_output
bme280_compensate_temperature_double SYMBOL "bme280_compensate_temperature_double"
`??bme280_compensate_temperature_double::?relay` SYMBOL "?relay", bme280_compensate_temperature_double
bme280_compensate_temperature_int32 SYMBOL "bme280_compensate_temperature_int32"
`??bme280_compensate_temperature_int32::?relay` SYMBOL "?relay", bme280_compensate_temperature_int32
bme280_compensate_temperature_int32_sixteen_bit_output SYMBOL "bme280_compensate_temperature_int32_sixteen_bit_output"
??bme280_compensate_temperature_int32_sixteen_b SYMBOL "?relay", bme280_compensate_temperature_int32_sixteen_bit_output
bme280_compute_wait_time SYMBOL "bme280_compute_wait_time"
`??bme280_compute_wait_time::?relay` SYMBOL "?relay", bme280_compute_wait_time
bme280_data_readout SYMBOL "bme280_data_readout"
`??bme280_data_readout::?relay` SYMBOL "?relay", bme280_data_readout
bme280_data_readout_template SYMBOL "bme280_data_readout_template"
`??bme280_data_readout_template::?relay` SYMBOL "?relay", bme280_data_readout_template
bme280_display      SYMBOL "bme280_display"
`??bme280_display::?relay` SYMBOL "?relay", bme280_display
bme280_get_calib_param SYMBOL "bme280_get_calib_param"
`??bme280_get_calib_param::?relay` SYMBOL "?relay", bme280_get_calib_param
bme280_get_filter   SYMBOL "bme280_get_filter"
`??bme280_get_filter::?relay` SYMBOL "?relay", bme280_get_filter
bme280_get_forced_uncomp_pressure_temperature_humidity SYMBOL "bme280_get_forced_uncomp_pressure_temperature_humidity"
??bme280_get_forced_uncomp_pressure_temperature SYMBOL "?relay", bme280_get_forced_uncomp_pressure_temperature_humidity
bme280_get_oversamp_humidity SYMBOL "bme280_get_oversamp_humidity"
`??bme280_get_oversamp_humidity::?relay` SYMBOL "?relay", bme280_get_oversamp_humidity
bme280_get_oversamp_pressure SYMBOL "bme280_get_oversamp_pressure"
`??bme280_get_oversamp_pressure::?relay` SYMBOL "?relay", bme280_get_oversamp_pressure
bme280_get_oversamp_temperature SYMBOL "bme280_get_oversamp_temperature"
`??bme280_get_oversamp_temperature::?relay` SYMBOL "?relay", bme280_get_oversamp_temperature
bme280_get_power_mode SYMBOL "bme280_get_power_mode"
`??bme280_get_power_mode::?relay` SYMBOL "?relay", bme280_get_power_mode
bme280_get_spi3     SYMBOL "bme280_get_spi3"
`??bme280_get_spi3::?relay` SYMBOL "?relay", bme280_get_spi3
bme280_get_standby_durn SYMBOL "bme280_get_standby_durn"
`??bme280_get_standby_durn::?relay` SYMBOL "?relay", bme280_get_standby_durn
bme280_init         SYMBOL "bme280_init"
`??bme280_init::?relay` SYMBOL "?relay", bme280_init
bme280_init_struct  SYMBOL "bme280_init_struct"
`??bme280_init_struct::?relay` SYMBOL "?relay", bme280_init_struct
bme280_read_pressure_temperature_humidity SYMBOL "bme280_read_pressure_temperature_humidity"
`??bme280_read_pressure_temperature_humidity::?r` SYMBOL "?relay", bme280_read_pressure_temperature_humidity
bme280_read_register SYMBOL "bme280_read_register"
`??bme280_read_register::?relay` SYMBOL "?relay", bme280_read_register
bme280_read_uncomp_humidity SYMBOL "bme280_read_uncomp_humidity"
`??bme280_read_uncomp_humidity::?relay` SYMBOL "?relay", bme280_read_uncomp_humidity
bme280_read_uncomp_pressure SYMBOL "bme280_read_uncomp_pressure"
`??bme280_read_uncomp_pressure::?relay` SYMBOL "?relay", bme280_read_uncomp_pressure
bme280_read_uncomp_pressure_temperature_humidity SYMBOL "bme280_read_uncomp_pressure_temperature_humidity"
??bme280_read_uncomp_pressure_temperature_humid SYMBOL "?relay", bme280_read_uncomp_pressure_temperature_humidity
bme280_read_uncomp_temperature SYMBOL "bme280_read_uncomp_temperature"
`??bme280_read_uncomp_temperature::?relay` SYMBOL "?relay", bme280_read_uncomp_temperature
bme280_send_data    SYMBOL "bme280_send_data"
`??bme280_send_data::?relay` SYMBOL "?relay", bme280_send_data
bme280_set          SYMBOL "bme280_set"
`??bme280_set::?relay` SYMBOL "?relay", bme280_set
bme280_set_filter   SYMBOL "bme280_set_filter"
`??bme280_set_filter::?relay` SYMBOL "?relay", bme280_set_filter
bme280_set_oversamp_humidity SYMBOL "bme280_set_oversamp_humidity"
`??bme280_set_oversamp_humidity::?relay` SYMBOL "?relay", bme280_set_oversamp_humidity
bme280_set_oversamp_pressure SYMBOL "bme280_set_oversamp_pressure"
`??bme280_set_oversamp_pressure::?relay` SYMBOL "?relay", bme280_set_oversamp_pressure
bme280_set_oversamp_temperature SYMBOL "bme280_set_oversamp_temperature"
`??bme280_set_oversamp_temperature::?relay` SYMBOL "?relay", bme280_set_oversamp_temperature
bme280_set_power_mode SYMBOL "bme280_set_power_mode"
`??bme280_set_power_mode::?relay` SYMBOL "?relay", bme280_set_power_mode
bme280_set_soft_rst SYMBOL "bme280_set_soft_rst"
`??bme280_set_soft_rst::?relay` SYMBOL "?relay", bme280_set_soft_rst
bme280_set_spi3     SYMBOL "bme280_set_spi3"
`??bme280_set_spi3::?relay` SYMBOL "?relay", bme280_set_spi3
bme280_set_standby_durn SYMBOL "bme280_set_standby_durn"
`??bme280_set_standby_durn::?relay` SYMBOL "?relay", bme280_set_standby_durn
bme280_write_register SYMBOL "bme280_write_register"
`??bme280_write_register::?relay` SYMBOL "?relay", bme280_write_register

        EXTERN `??HalLcdWriteString::?relay`
        FUNCTION `??HalLcdWriteString::?relay`,00H
        EXTERN `??SPIDataGet::?relay`
        FUNCTION `??SPIDataGet::?relay`,00H
        EXTERN `??SPIDataPut::?relay`
        FUNCTION `??SPIDataPut::?relay`,00H
        EXTERN `??sprintf::?relay`
        FUNCTION `??sprintf::?relay`,00H
        EXTERN HalLcdWriteString
        FUNCTION HalLcdWriteString,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN SPIDataGet
        FUNCTION SPIDataGet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN SPIDataPut
        FUNCTION SPIDataPut,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sprintf
        FUNCTION sprintf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 88, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// C:\Users\bsavanovic\Desktop\EndDevice\ZigBeeEndDevice\Components\hal\BME280_driver-master\bme280.c
//    1 /*
//    2 ****************************************************************************
//    3 * Copyright (C) 2015 - 2016 Bosch Sensortec GmbH
//    4 *
//    5 * bme280.c
//    6 * Date: 2016/07/04
//    7 * Revision: 2.0.5(Pressure and Temperature compensation code revision is 1.1
//    8 *               and Humidity compensation code revision is 1.0)
//    9 *
//   10 * Usage: Sensor Driver file for BME280 sensor
//   11 *
//   12 ****************************************************************************
//   13 * License:
//   14 *
//   15 * Redistribution and use in source and binary forms, with or without
//   16 * modification, are permitted provided that the following conditions are met:
//   17 *
//   18 *   Redistributions of source code must retain the above copyright
//   19 *   notice, this list of conditions and the following disclaimer.
//   20 *
//   21 *   Redistributions in binary form must reproduce the above copyright
//   22 *   notice, this list of conditions and the following disclaimer in the
//   23 *   documentation and/or other materials provided with the distribution.
//   24 *
//   25 *   Neither the name of the copyright holder nor the names of the
//   26 *   contributors may be used to endorse or promote products derived from
//   27 *   this software without specific prior written permission.
//   28 *
//   29 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
//   30 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
//   31 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//   32 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//   33 * DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDER
//   34 * OR CONTRIBUTORS BE LIABLE FOR ANY
//   35 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
//   36 * OR CONSEQUENTIAL DAMAGES(INCLUDING, BUT NOT LIMITED TO,
//   37 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   38 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
//   39 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//   40 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   41 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
//   42 * ANY WAY OUT OF THE USE OF THIS
//   43 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE
//   44 *
//   45 * The information provided is believed to be accurate and reliable.
//   46 * The copyright holder assumes no responsibility
//   47 * for the consequences of use
//   48 * of such information nor for any infringement of patents or
//   49 * other rights of third parties which may result from its use.
//   50 * No license is granted by implication or otherwise under any patent or
//   51 * patent rights of the copyright holder.
//   52 **************************************************************************/
//   53 
//   54 #include <stdio.h>
//   55 #include <string.h>
//   56 #include "bme280.h"
//   57 #include "ioCC2530.h"

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1
//   58 
//   59 typedef uint8_t	        uint8;
//   60 
//   61 
//   62 #define SPI_READ					0x80
//   63 #define SPI_WRITE					0x7F
//   64 #define SPI_BUFFER_LEN 				        26
//   65 #define SPI_BUFFER_LEN_WRITE				4
//   66 
//   67 #define BME280_DATA_INDEX				1
//   68 #define BME280_ADDRESS_INDEX 		                2
//   69 
//   70 extern void SPIDataPut(uint8 );
//   71 
//   72 extern uint8 SPIDataGet(void);
//   73 
//   74 extern void uartSend(char);
//   75 
//   76 extern void HalLcdWriteString ( char *, uint8 );
//   77 
//   78 extern void WriteHex(char );
//   79 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   80 static struct bme280_t *p_bme280; /**< pointer to BME280 */
p_bme280:
        DS 2
        REQUIRE __INIT_XDATA_Z
//   81 //static struct value *p_val;
//   82 
//   83 /*!
//   84  *	@brief This function is used for initialize
//   85  *	the bus read and bus write functions
//   86  *  and assign the chip id and I2C address of the BME280 sensor
//   87  *	chip id is read in the register 0xD0 bit from 0 to 7
//   88  *
//   89  *	 @param bme280 structure pointer.
//   90  *
//   91  *	@note While changing the parameter of the bme280_t
//   92  *	@note consider the following point:
//   93  *	Changing the reference value of the parameter
//   94  *	will changes the local copy or local reference
//   95  *	make sure your changes will not
//   96  *	affect the reference value of the parameter
//   97  *	(Better case don't change the reference value of the parameter)
//   98  *
//   99  *
//  100  *
//  101  *
//  102  *	@return results of bus communication function
//  103  *	@retval 0 -> Success
//  104  *	@retval -1 -> Error
//  105  *
//  106  *
//  107 */
//  108 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  109 void bme280_init_struct(struct bme280_t *bme280)
bme280_init_struct:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function bme280_init_struct
        CODE
//  110 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  111 	p_bme280 = bme280;
        MOV     DPTR,#p_bme280
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  112 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock0
//  113 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  114 BME280_RETURN_FUNCTION_TYPE bme280_init(struct bme280_t *bme280)
bme280_init:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function bme280_init
        CODE
//  115 {
        FUNCALL bme280_init, bme280_get_calib_param
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  116 	/* used to return the communication result*/
//  117 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
//  118 	u8 v_data_u8 = BME280_INIT_VALUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
//  119 	u8 v_chip_id_read_count = BME280_CHIP_ID_READ_COUNT;
        MOV     R6,#0x5
//  120 
//  121 	/* assign BME280 ptr */
//  122 	p_bme280 = bme280;
        MOV     DPTR,#p_bme280
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  123 	while (v_chip_id_read_count > 0) {
//  124 
//  125 		/* read Chip Id */
//  126 		com_rslt = p_bme280->BME280_BUS_READ_FUNC(p_bme280->dev_addr,
//  127 				BME280_CHIP_ID_REG, &v_data_u8,
//  128 				BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_init_0:
        ; Setup parameters for indirect call
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0x30
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_315:
        LCALL   ?CALL_IND
//  129 		/* Check for the correct chip id */
//  130 		if (v_data_u8 == BME280_CHIP_ID)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,#0x60
        JZ      ??bme280_init_1
//  131 			break;
//  132 		v_chip_id_read_count--;
//  133 		/* Delay added concerning the low speed of power up system to
//  134 		facilitate the proper reading of the chip ID */
//  135 		p_bme280->delay_msec(3 * BME280_REGISTER_READ_DELAY);
        ; Setup parameters for indirect call
        MOV     DPTR,#__Constant_3
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine23 & 0xFFFF
//  136 	}
??CrossCallReturnLabel_42:
        LCALL   ?CALL_IND
        DEC     R6
        MOV     A,R6
        JNZ     ??bme280_init_0
//  137 	/*assign chip ID to the global structure*/
//  138 	p_bme280->chip_id = v_data_u8;
??bme280_init_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_173:
        ADD     A,#0x25
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  139 	/*com_rslt status of chip ID read*/
//  140 	com_rslt = (v_chip_id_read_count == BME280_INIT_VALUE) ?
//  141 			BME280_CHIP_ID_READ_FAIL : BME280_CHIP_ID_READ_SUCCESS;
        MOV     A,R6
        JNZ     ??bme280_init_2
        MOV     R1,#-0x1
        SJMP    ??bme280_init_3
//  142 
//  143 	if (com_rslt == BME280_CHIP_ID_READ_SUCCESS) {
//  144 		/* readout bme280 calibparam structure */
//  145 		com_rslt += bme280_get_calib_param();
??bme280_init_2:
        ; Setup parameters for call to function bme280_get_calib_param
        LCALL   `??bme280_get_calib_param::?relay`; Banked call to: bme280_get_calib_param
        MOV     A,R1
        MOV     R1,A
//  146 	}
//  147 	return com_rslt;
??bme280_init_3:
        LJMP    ?Subroutine1 & 0xFFFF
//  148 }
          CFI EndBlock cfiBlock1
//  149 
//  150 /*!
//  151  *	@brief This API is used to read uncompensated temperature
//  152  *	in the registers 0xFA, 0xFB and 0xFC
//  153  *	@note 0xFA -> MSB -> bit from 0 to 7
//  154  *	@note 0xFB -> LSB -> bit from 0 to 7
//  155  *	@note 0xFC -> LSB -> bit from 4 to 7
//  156  *
//  157  * @param v_uncomp_temperature_s32 : The value of uncompensated temperature
//  158  *
//  159  *
//  160  *
//  161  *	@return results of bus communication function
//  162  *	@retval 0 -> Success
//  163  *	@retval -1 -> Error
//  164  *
//  165  *
//  166 */
//  167 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  168 BME280_RETURN_FUNCTION_TYPE bme280_read_uncomp_temperature(
bme280_read_uncomp_temperature:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function bme280_read_uncomp_temperature
        CODE
//  169 s32 *v_uncomp_temperature_s32)
//  170 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  171 	/* used to return the communication result*/
//  172 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
//  173 	/* Array holding the MSB and LSb value
//  174 	a_data_u8r[0] - Temperature MSB
//  175 	a_data_u8r[1] - Temperature LSB
//  176 	a_data_u8r[2] - Temperature XLSB
//  177 	*/
//  178 	u8 a_data_u8r[BME280_TEMPERATURE_DATA_SIZE] = {
//  179 	BME280_INIT_VALUE, BME280_INIT_VALUE, BME280_INIT_VALUE};
        MOV     DPTR,#`?<Constant {0, 0, 0}>`
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     A,#0x3
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  180 	/* check the p_bme280 structure pointer as NULL*/
//  181 	if (p_bme280 == BME280_NULL) {
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_129:
        JNZ     ??bme280_read_uncomp_temperature_0
//  182 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_read_uncomp_temperature_1
//  183 		} else {
//  184 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
//  185 			p_bme280->dev_addr,
//  186 			BME280_TEMPERATURE_MSB_REG,
//  187 			a_data_u8r,
//  188 			BME280_TEMPERATURE_DATA_LENGTH);
??bme280_read_uncomp_temperature_0:
        ; Setup parameters for indirect call
        MOV     R3,#0x3
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0x6
        LCALL   ??Subroutine115_0 & 0xFFFF
//  189 			*v_uncomp_temperature_s32 = (s32)(((
//  190 			(u32) (a_data_u8r[BME280_TEMPERATURE_MSB_DATA]))
//  191 			<< BME280_SHIFT_BIT_POSITION_BY_12_BITS) |
//  192 			(((u32)(a_data_u8r[BME280_TEMPERATURE_LSB_DATA]))
//  193 			<< BME280_SHIFT_BIT_POSITION_BY_04_BITS)
//  194 			| ((u32)a_data_u8r[BME280_TEMPERATURE_XLSB_DATA] >>
//  195 			BME280_SHIFT_BIT_POSITION_BY_04_BITS));
//  196 		}
??CrossCallReturnLabel_316:
        LCALL   ?CALL_IND
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_116:
        LCALL   ?L_SHL
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_119:
        LCALL   ?L_SHL
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_IOR
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_93:
        LCALL   ?L_IOR
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0
        LCALL   ?L_MOV_TO_X
//  197 	return com_rslt;
        MOV     A,R2
        MOV     R1,A
??bme280_read_uncomp_temperature_1:
        LJMP    ?Subroutine2 & 0xFFFF
//  198 }
          CFI EndBlock cfiBlock2
//  199 
//  200 /*!
//  201  * @brief Reads actual temperature from uncompensated temperature
//  202  * @note Returns the value in 0.01 degree Centigrade
//  203  * Output value of "5123" equals 51.23 DegC.
//  204  *
//  205  *
//  206  *
//  207  *  @param  v_uncomp_temperature_s32 : value of uncompensated temperature
//  208  *
//  209  *
//  210  *  @return Returns the actual temperature
//  211  *
//  212 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  213 s32 bme280_compensate_temperature_int32(s32 v_uncomp_temperature_s32)
bme280_compensate_temperature_int32:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32
        CODE
//  214 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V6,R4
        MOV     ?V7,R5
//  215 	s32 v_x1_u32r = BME280_INIT_VALUE;
//  216 	s32 v_x2_u32r = BME280_INIT_VALUE;
//  217 	s32 temperature = BME280_INIT_VALUE;
//  218 
//  219 	/* calculate x1*/
//  220 	v_x1_u32r  =
//  221 	((((v_uncomp_temperature_s32
//  222 	>> BME280_SHIFT_BIT_POSITION_BY_03_BITS) -
//  223 	((s32)p_bme280->cal_param.dig_T1
//  224 	<< BME280_SHIFT_BIT_POSITION_BY_01_BIT))) *
//  225 	((s32)p_bme280->cal_param.dig_T2)) >>
//  226 	BME280_SHIFT_BIT_POSITION_BY_11_BITS;
//  227 	/* calculate x2*/
//  228 	v_x2_u32r  = (((((v_uncomp_temperature_s32
//  229 	>> BME280_SHIFT_BIT_POSITION_BY_04_BITS) -
//  230 	((s32)p_bme280->cal_param.dig_T1))
//  231 	* ((v_uncomp_temperature_s32 >> BME280_SHIFT_BIT_POSITION_BY_04_BITS) -
//  232 	((s32)p_bme280->cal_param.dig_T1)))
//  233 	>> BME280_SHIFT_BIT_POSITION_BY_12_BITS) *
//  234 	((s32)p_bme280->cal_param.dig_T3))
//  235 	>> BME280_SHIFT_BIT_POSITION_BY_14_BITS;
//  236 	/* calculate t_fine*/
//  237 	p_bme280->cal_param.t_fine = v_x1_u32r + v_x2_u32r;
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_279:
        MOVX    A,@DPTR
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_192:
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     ?V10,R4
        MOV     ?V11,R5
        MOV     A,#0x4
        MOV     R0,#?V8
        LCALL   ?SL_SHR
        MOV     R0,#?V8
        MOV     R1,#?V0
        LCALL   ?L_SUB
        MOV     A,#0x3
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        INC     A
        MOV     R0,#?V0
        LCALL   ?L_SHL
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?L_SUB
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_134:
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_282:
        LCALL   ?L_MUL
        MOV     A,#0xb
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        MOV     ?V0,?V8
        MOV     ?V1,?V9
        MOV     ?V2,?V10
        MOV     ?V3,?V11
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?L_MUL
        MOV     A,#0xc
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_135:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_273:
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?L_MUL
        MOV     A,#0xe
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?L_ADD
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_149:
        MOV     R0,#?V4
        LCALL   ?L_MOV_TO_X
//  238 	/* calculate temperature*/
//  239 	temperature  = (p_bme280->cal_param.t_fine * 5 + 128)
//  240 	>> BME280_SHIFT_BIT_POSITION_BY_08_BITS;
//  241 	return temperature;
        MOV     DPTR,#__Constant_5
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?L_MUL
        MOV     DPTR,#__Constant_80
        MOV     R0,#?V4
        LCALL   ?L_ADD_X
        MOV     A,#0x8
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        MOV     R2,?V4
        MOV     R3,?V5
        MOV     R4,?V6
        MOV     R5,?V7
          CFI EndBlock cfiBlock3
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
//  242 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock4

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond5 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32
          CFI Conditional ??CrossCallReturnLabel_279
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function bme280_compensate_temperature_double
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond6) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond6) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond6) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond6) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond6) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond6) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond6) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond6) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond6) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond6) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond6) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond6) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond6) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond6) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond6) CFA_SP SP+-2
          CFI (cfiCond6) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function bme280_compensate_temperature_double
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond7) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond7) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond7) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond7) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond7) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond7) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond7) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond7) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond7) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond7) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond7) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+-2
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        MOV     DPTR,#p_bme280
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8
        REQUIRE ??Subroutine105_0
        ; // Fall through to label ??Subroutine105_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine105_0:
          CFI Block cfiCond9 Using cfiCommon0
          CFI Function bme280_read_uncomp_pressure_temperature_humidity
          CFI Conditional ??CrossCallReturnLabel_277
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond10 Using cfiCommon0
          CFI (cfiCond10) Function bme280_read_pressure_temperature_humidity
          CFI (cfiCond10) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond10) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond10) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond10) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond10) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond10) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond10) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond10) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond10) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond10) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond10) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond10) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond10) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond10) CFA_SP SP+-2
          CFI (cfiCond10) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function bme280_compensate_temperature_int32
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond11) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond11) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond11) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond11) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond11) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond11) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond11) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond11) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond11) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond11) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond11) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond11) CFA_SP SP+-2
          CFI (cfiCond11) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function bme280_compensate_temperature_double
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond12) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond12) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond12) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond12) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond12) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond12) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond12) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond12) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond12) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond12) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond12) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond12) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+-2
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond13 Using cfiCommon0
          CFI (cfiCond13) Function bme280_compensate_temperature_double
          CFI (cfiCond13) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond13) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond13) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond13) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond13) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond13) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond13) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond13) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond13) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond13) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond13) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond13) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond13) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond13) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond13) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond13) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond13) CFA_SP SP+-2
          CFI (cfiCond13) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker14 Using cfiCommon1
          CFI (cfiPicker14) NoFunction
          CFI (cfiPicker14) Picker
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_333:
        RET
          CFI EndBlock cfiCond9
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiCond13
          CFI EndBlock cfiPicker14
//  243 
//  244 /*!
//  245  * @brief Reads actual temperature from uncompensated temperature
//  246  * @note Returns the value with 500LSB/DegC centred around 24 DegC
//  247  * output value of "5123" equals(5123/500)+24 = 34.246DegC
//  248  *
//  249  *
//  250  *  @param v_uncomp_temperature_s32: value of uncompensated temperature
//  251  *
//  252  *
//  253  *
//  254  *  @return Return the actual temperature as s16 output
//  255  *
//  256 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  257 s16 bme280_compensate_temperature_int32_sixteen_bit_output(
bme280_compensate_temperature_int32_sixteen_bit_output:
          CFI Block cfiBlock15 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32_sixteen_bit_output
        CODE
//  258 s32 v_uncomp_temperature_s32)
//  259 {
        FUNCALL bme280_compensate_temperature_int32_sixteen_bit_output, bme280_compensate_temperature_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
//  260 	s16 temperature = BME280_INIT_VALUE;
//  261 
//  262 	bme280_compensate_temperature_int32(
//  263 	v_uncomp_temperature_s32);
        ; Setup parameters for call to function bme280_compensate_temperature_int32
        LCALL   `??bme280_compensate_temperature_int32::?relay`; Banked call to: bme280_compensate_temperature_int32
//  264 	temperature  = (s16)((((
//  265 	p_bme280->cal_param.t_fine - 122880) * 25) + 128)
//  266 	>> BME280_SHIFT_BIT_POSITION_BY_08_BITS);
//  267 
//  268 	return temperature;
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_89:
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_19
        MOV     R0,#?V4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_MUL
        MOV     DPTR,#__Constant_ffd12080
        MOV     R0,#?V0
        LCALL   ?L_ADD_X
        MOV     A,#0x8
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        MOV     R2,?V0
        MOV     R3,?V1
        LJMP    ??Subroutine107_0 & 0xFFFF
//  269 }
          CFI EndBlock cfiBlock15
//  270 
//  271 /*!
//  272  *	@brief This API is used to read uncompensated pressure.
//  273  *	in the registers 0xF7, 0xF8 and 0xF9
//  274  *	@note 0xF7 -> MSB -> bit from 0 to 7
//  275  *	@note 0xF8 -> LSB -> bit from 0 to 7
//  276  *	@note 0xF9 -> LSB -> bit from 4 to 7
//  277  *
//  278  *
//  279  *
//  280  *	@param v_uncomp_pressure_s32 : The value of uncompensated pressure
//  281  *
//  282  *
//  283  *
//  284  *	@return results of bus communication function
//  285  *	@retval 0 -> Success
//  286  *	@retval -1 -> Error
//  287  *
//  288  *
//  289 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  290 BME280_RETURN_FUNCTION_TYPE bme280_read_uncomp_pressure(
bme280_read_uncomp_pressure:
          CFI Block cfiBlock16 Using cfiCommon0
          CFI Function bme280_read_uncomp_pressure
        CODE
//  291 s32 *v_uncomp_pressure_s32)
//  292 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  293 	/* used to return the communication result*/
//  294 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
//  295 	/* Array holding the MSB and LSb value
//  296 	a_data_u8[0] - Pressure MSB
//  297 	a_data_u8[1] - Pressure LSB
//  298 	a_data_u8[2] - Pressure XLSB
//  299 	*/
//  300 	u8 a_data_u8[BME280_PRESSURE_DATA_SIZE] = {
//  301 	BME280_INIT_VALUE, BME280_INIT_VALUE, BME280_INIT_VALUE};
        MOV     DPTR,#`?<Constant {0, 0, 0}>_1`
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     A,#0x3
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  302 	/* check the p_bme280 structure pointer as NULL*/
//  303 	if (p_bme280 == BME280_NULL) {
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_130:
        JNZ     ??bme280_read_uncomp_pressure_0
//  304 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_read_uncomp_pressure_1
//  305 		} else {
//  306 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
//  307 			p_bme280->dev_addr,
//  308 			BME280_PRESSURE_MSB_REG,
//  309 			a_data_u8, BME280_PRESSURE_DATA_LENGTH);
??bme280_read_uncomp_pressure_0:
        ; Setup parameters for indirect call
        MOV     R3,#0x3
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0x9
        LCALL   ??Subroutine115_0 & 0xFFFF
//  310 			*v_uncomp_pressure_s32 = (s32)((
//  311 			((u32)(a_data_u8[BME280_PRESSURE_MSB_DATA]))
//  312 			<< BME280_SHIFT_BIT_POSITION_BY_12_BITS) |
//  313 			(((u32)(a_data_u8[BME280_PRESSURE_LSB_DATA]))
//  314 			<< BME280_SHIFT_BIT_POSITION_BY_04_BITS) |
//  315 			((u32)a_data_u8[BME280_PRESSURE_XLSB_DATA] >>
//  316 			BME280_SHIFT_BIT_POSITION_BY_04_BITS));
//  317 		}
??CrossCallReturnLabel_317:
        LCALL   ?CALL_IND
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_117:
        LCALL   ?L_SHL
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_120:
        LCALL   ?L_SHL
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_IOR
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_94:
        LCALL   ?L_IOR
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0
        LCALL   ?L_MOV_TO_X
//  318 	return com_rslt;
        MOV     A,R2
        MOV     R1,A
??bme280_read_uncomp_pressure_1:
        LJMP    ?Subroutine2 & 0xFFFF
//  319 }
          CFI EndBlock cfiBlock16

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond17 Using cfiCommon0
          CFI Function bme280_read_uncomp_temperature
          CFI Conditional ??CrossCallReturnLabel_119
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function bme280_read_uncomp_pressure
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond18) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond18) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+-2
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond19) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond19) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond19) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond19) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond19) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond19) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond19) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond19) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond19) CFA_SP SP+-2
          CFI (cfiCond19) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker20 Using cfiCommon1
          CFI (cfiPicker20) NoFunction
          CFI (cfiPicker20) Picker
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_262:
        MOV     A,#0x4
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiPicker20

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond21 Using cfiCommon0
          CFI Function bme280_read_uncomp_temperature
          CFI Conditional ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function bme280_read_uncomp_pressure
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond22) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond22) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond22) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+-2
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond23 Using cfiCommon0
          CFI (cfiCond23) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond23) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond23) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond23) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond23) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond23) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond23) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond23) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond23) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond23) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond23) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond23) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond23) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond23) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond23) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond23) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond23) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond23) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond23) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond23) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond23) CFA_SP SP+-2
          CFI (cfiCond23) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker24 Using cfiCommon1
          CFI (cfiPicker24) NoFunction
          CFI (cfiPicker24) Picker
        MOV     A,R1
        MOV     R2,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_263:
        MOV     ?V3,A
        MOV     A,#0xc
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiCond23
          CFI EndBlock cfiPicker24

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond25 Using cfiCommon0
          CFI Function bme280_read_uncomp_temperature
          CFI Conditional ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond26 Using cfiCommon0
          CFI (cfiCond26) Function bme280_read_uncomp_pressure
          CFI (cfiCond26) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond26) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond26) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond26) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond26) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond26) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond26) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond26) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond26) CFA_SP SP+-2
          CFI (cfiCond26) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond27 Using cfiCommon0
          CFI (cfiCond27) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond27) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond27) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond27) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond27) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond27) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond27) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond27) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond27) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond27) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond27) CFA_SP SP+-2
          CFI (cfiCond27) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_96
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond28) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond28) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond28) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond28) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond28) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond28) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+-2
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker29 Using cfiCommon1
          CFI (cfiPicker29) NoFunction
          CFI (cfiPicker29) Picker
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V4,A
        CLR     A
        MOV     ?V5,A
        MOV     R0,#?V0
        MOV     R1,#?V4
        RET
          CFI EndBlock cfiCond25
          CFI EndBlock cfiCond26
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiPicker29
//  320 
//  321 /*!
//  322  * @brief Reads actual pressure from uncompensated pressure
//  323  * @note Returns the value in Pascal(Pa)
//  324  * Output value of "96386" equals 96386 Pa =
//  325  * 963.86 hPa = 963.86 millibar
//  326  *
//  327  *
//  328  *
//  329  *  @param v_uncomp_pressure_s32 : value of uncompensated pressure
//  330  *
//  331  *
//  332  *
//  333  *  @return Return the actual pressure output as u32
//  334  *
//  335 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  336 u32 bme280_compensate_pressure_int32(s32 v_uncomp_pressure_s32)
bme280_compensate_pressure_int32:
          CFI Block cfiBlock30 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
        CODE
//  337 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine12 & 0xFFFF
//  338 	s32 v_x1_u32 = BME280_INIT_VALUE;
//  339 	s32 v_x2_u32 = BME280_INIT_VALUE;
//  340 	u32 v_pressure_u32 = BME280_INIT_VALUE;
//  341 
//  342 	/* calculate x1*/
//  343 	v_x1_u32 = (((s32)p_bme280->cal_param.t_fine)
//  344 	>> BME280_SHIFT_BIT_POSITION_BY_01_BIT) - (s32)64000;
??CrossCallReturnLabel_15:
        LCALL   ?L_MOV_X
        MOV     A,#0x1
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        MOV     DPTR,#__Constant_ffff0600
        MOV     R0,#?V4
        LCALL   ?L_ADD_X
//  345 	/* calculate x2*/
//  346 	v_x2_u32 = (((v_x1_u32 >> BME280_SHIFT_BIT_POSITION_BY_02_BITS)
//  347 	* (v_x1_u32 >> BME280_SHIFT_BIT_POSITION_BY_02_BITS)
//  348 	) >> BME280_SHIFT_BIT_POSITION_BY_11_BITS)
//  349 	* ((s32)p_bme280->cal_param.dig_P6);
//  350 	/* calculate x2*/
//  351 	v_x2_u32 = v_x2_u32 + ((v_x1_u32 *
//  352 	((s32)p_bme280->cal_param.dig_P5))
//  353 	<< BME280_SHIFT_BIT_POSITION_BY_01_BIT);
        MOV     ?V8,?V4
        MOV     ?V9,?V5
        MOV     ?V10,?V6
        MOV     ?V11,?V7
        MOV     A,#0x2
        MOV     R0,#?V8
        LCALL   ?SL_SHR
        MOV     ?V0,?V4
        MOV     ?V1,?V5
        MOV     ?V2,?V6
        MOV     ?V3,?V7
        MOV     A,#0x2
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        MOV     R0,#?V8
        MOV     R1,#?V0
        LCALL   ?L_MUL
        MOV     ?V0,?V8
        MOV     ?V1,?V9
        MOV     ?V2,?V10
        MOV     ?V3,?V11
        MOV     A,#0xb
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_164:
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_385:
        LCALL   ?L_MUL
        PUSH    ?V0
          CFI CFA_SP SP+-1
        PUSH    ?V1
          CFI CFA_SP SP+-2
        PUSH    ?V2
          CFI CFA_SP SP+-3
        PUSH    ?V3
          CFI CFA_SP SP+-4
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_388:
        LCALL   ?L_MUL
        MOV     A,#0x1
        MOV     R0,#?V0
        LCALL   ?L_SHL
        POP     ?V15
          CFI CFA_SP SP+-3
        POP     ?V14
          CFI CFA_SP SP+-2
        POP     ?V13
          CFI CFA_SP SP+-1
        POP     ?V12
          CFI CFA_SP SP+0
        MOV     R0,#?V12
        MOV     R1,#?V0
        LCALL   ?L_ADD
//  354 	/* calculate x2*/
//  355 	v_x2_u32 = (v_x2_u32 >> BME280_SHIFT_BIT_POSITION_BY_02_BITS) +
//  356 	(((s32)p_bme280->cal_param.dig_P4)
//  357 	<< BME280_SHIFT_BIT_POSITION_BY_16_BITS);
//  358 	/* calculate x1*/
//  359 	v_x1_u32 = (((p_bme280->cal_param.dig_P3 *
//  360 	(((v_x1_u32 >> BME280_SHIFT_BIT_POSITION_BY_02_BITS) *
//  361 	(v_x1_u32 >> BME280_SHIFT_BIT_POSITION_BY_02_BITS))
//  362 	>> BME280_SHIFT_BIT_POSITION_BY_13_BITS))
//  363 	>> BME280_SHIFT_BIT_POSITION_BY_03_BITS) +
//  364 	((((s32)p_bme280->cal_param.dig_P2) *
//  365 	v_x1_u32) >> BME280_SHIFT_BIT_POSITION_BY_01_BIT))
//  366 	>> BME280_SHIFT_BIT_POSITION_BY_18_BITS;
//  367 	/* calculate x1*/
//  368 	v_x1_u32 = ((((32768 + v_x1_u32)) *
//  369 	((s32)p_bme280->cal_param.dig_P1))
//  370 	>> BME280_SHIFT_BIT_POSITION_BY_15_BITS);
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_99:
        MOV     A,#0xd
        MOV     R0,#?V8
        LCALL   ?SL_SHR
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?L_MUL
        MOV     A,#0x3
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_167:
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_137:
        MOV     R1,#?V4
        LCALL   ?L_MUL
        MOV     A,#0x1
        MOV     R0,#?V8
        LCALL   ?SL_SHR
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?L_ADD
        MOV     A,#0x12
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        MOV     DPTR,#__Constant_8000
        MOV     R0,#?V0
        LCALL   ?L_ADD_X
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_101:
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_194:
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_MUL
        MOV     A,#0xf
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        MOV     ?V4,?V0
        MOV     ?V5,?V1
        MOV     ?V6,?V2
        MOV     ?V7,?V3
//  371 	/* calculate pressure*/
//  372 	v_pressure_u32 =
//  373 	(((u32)(((s32)1048576) - v_uncomp_pressure_s32)
//  374 	- (v_x2_u32 >> BME280_SHIFT_BIT_POSITION_BY_12_BITS))) * 3125;
        MOV     ?V8,A
        MOV     ?V9,A
        MOV     ?V10,#0x10
        MOV     ?V11,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,#?V8
        LCALL   ?L_SUB_X
        MOV     A,#0x2
        MOV     R0,#?V12
        LCALL   ?SL_SHR
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_174:
        ADD     A,#0xc
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_381:
        MOV     A,#0x10
        MOV     R0,#?V0
        LCALL   ?L_SHL
        MOV     R0,#?V12
        MOV     R1,#?V0
        LCALL   ?L_ADD
        MOV     A,#0xc
        MOV     R0,#?V12
        LCALL   ?SL_SHR
        MOV     R0,#?V8
        MOV     R1,#?V12
        LCALL   ?L_SUB
        MOV     DPTR,#__Constant_c35
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        MOV     R0,#?V8
        MOV     R1,#?V0
        LCALL   ?L_MUL
//  375 	if (v_pressure_u32
//  376 	< 0x80000000)
        MOV     DPTR,#__Constant_80000000
        MOV     R0,#?V8
        LCALL   ?UL_GE_X
        MOV     A,?V4
        ORL     A,?V5
        ORL     A,?V6
        ORL     A,?V7
        JNC     $+5
        LJMP    ??bme280_compensate_pressure_int32_0 & 0xFFFF
//  377 		/* Avoid exception caused by division by zero */
//  378 		if (v_x1_u32 != BME280_INIT_VALUE)
        JNZ     $+5
        LJMP    ??bme280_compensate_pressure_int32_1 & 0xFFFF
//  379 			v_pressure_u32 =
//  380 			(v_pressure_u32
//  381 			<< BME280_SHIFT_BIT_POSITION_BY_01_BIT) /
//  382 			((u32)v_x1_u32);
        MOV     A,#0x1
        MOV     R0,#?V8
        LCALL   ?L_SHL
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?UL_DIV_MOD
//  383 		else
//  384 			return BME280_INVALID_DATA;
//  385 	else
//  386 		/* Avoid exception caused by division by zero */
//  387 		if (v_x1_u32 != BME280_INIT_VALUE)
//  388 			v_pressure_u32 = (v_pressure_u32
//  389 			/ (u32)v_x1_u32) * 2;
//  390 		else
//  391 			return BME280_INVALID_DATA;
//  392 
//  393 		v_x1_u32 = (((s32)p_bme280->cal_param.dig_P9) *
//  394 		((s32)(((v_pressure_u32 >> BME280_SHIFT_BIT_POSITION_BY_03_BITS)
//  395 		* (v_pressure_u32 >> BME280_SHIFT_BIT_POSITION_BY_03_BITS))
//  396 		>> BME280_SHIFT_BIT_POSITION_BY_13_BITS)))
//  397 		>> BME280_SHIFT_BIT_POSITION_BY_12_BITS;
//  398 		v_x2_u32 = (((s32)(v_pressure_u32
//  399 		>> BME280_SHIFT_BIT_POSITION_BY_02_BITS)) *
//  400 		((s32)p_bme280->cal_param.dig_P8))
//  401 		>> BME280_SHIFT_BIT_POSITION_BY_13_BITS;
//  402 		v_pressure_u32 = (u32)((s32)v_pressure_u32 +
//  403 		((v_x1_u32 + v_x2_u32 + p_bme280->cal_param.dig_P7)
//  404 		>> BME280_SHIFT_BIT_POSITION_BY_04_BITS));
//  405 
//  406 	return v_pressure_u32;
??bme280_compensate_pressure_int32_2:
        MOV     ?V12,?V8
        MOV     ?V13,?V9
        MOV     ?V14,?V10
        MOV     ?V15,?V11
        MOV     A,#0x3
        MOV     R0,#?V12
        LCALL   ?UL_SHR
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_175:
        ADD     A,#0x16
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_122:
        MOV     ?V0,?V12
        MOV     ?V1,?V13
        MOV     ?V2,?V14
        MOV     ?V3,?V15
        MOV     R0,#?V0
        MOV     R1,#?V12
        LCALL   ?L_MUL
        MOV     A,#0xd
        MOV     R0,#?V0
        LCALL   ?UL_SHR
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?L_MUL
        MOV     A,#0xc
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        MOV     ?V0,?V8
        MOV     ?V1,?V9
        MOV     ?V2,?V10
        MOV     ?V3,?V11
        MOV     A,#0x2
        MOV     R0,#?V0
        LCALL   ?UL_SHR
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_176:
        ADD     A,#0x14
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_386:
        LCALL   ?L_MUL
        MOV     A,#0xd
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?L_ADD
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_170:
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_283:
        LCALL   ?L_ADD
        MOV     A,#0x4
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?L_ADD
        MOV     R2,?V8
        MOV     R3,?V9
        MOV     R4,?V10
        MOV     R5,?V11
??bme280_compensate_pressure_int32_3:
        LJMP    ?Subroutine4 & 0xFFFF
??bme280_compensate_pressure_int32_0:
        JZ      ??bme280_compensate_pressure_int32_1
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?UL_DIV_MOD
        MOV     A,#0x1
        MOV     R0,#?V8
        LCALL   ?L_SHL
        LJMP    ??bme280_compensate_pressure_int32_2 & 0xFFFF
??bme280_compensate_pressure_int32_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R4,#0x0
        MOV     R5,#0x0
        SJMP    ??bme280_compensate_pressure_int32_3
//  407 }
          CFI EndBlock cfiBlock30
//  408 
//  409 /*!
//  410  *	@brief This API is used to read uncompensated humidity.
//  411  *	in the registers 0xF7, 0xF8 and 0xF9
//  412  *	@note 0xFD -> MSB -> bit from 0 to 7
//  413  *	@note 0xFE -> LSB -> bit from 0 to 7
//  414  *
//  415  *
//  416  *
//  417  *	@param v_uncomp_humidity_s32 : The value of uncompensated humidity
//  418  *
//  419  *
//  420  *
//  421  *	@return results of bus communication function
//  422  *	@retval 0 -> Success
//  423  *	@retval -1 -> Error
//  424  *
//  425  *
//  426 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  427 BME280_RETURN_FUNCTION_TYPE bme280_read_uncomp_humidity(
bme280_read_uncomp_humidity:
          CFI Block cfiBlock31 Using cfiCommon0
          CFI Function bme280_read_uncomp_humidity
        CODE
//  428 s32 *v_uncomp_humidity_s32)
//  429 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  430 	/* used to return the communication result*/
//  431 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
//  432 	/* Array holding the MSB and LSb value
//  433 	a_data_u8[0] - Humidity MSB
//  434 	a_data_u8[1] - Humidity LSB
//  435 	*/
//  436 	u8 a_data_u8[BME280_HUMIDITY_DATA_SIZE] = {
//  437 	BME280_INIT_VALUE, BME280_INIT_VALUE};
        MOV     DPTR,#`?<Constant {0, 0}>`
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     A,#0x2
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  438 	/* check the p_bme280 structure pointer as NULL*/
//  439 	if (p_bme280 == BME280_NULL) {
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_131:
        JNZ     ??bme280_read_uncomp_humidity_0
//  440 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_read_uncomp_humidity_1
//  441 		} else {
//  442 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
//  443 			p_bme280->dev_addr,
//  444 			BME280_HUMIDITY_MSB_REG, a_data_u8,
//  445 			BME280_HUMIDITY_DATA_LENGTH);
??bme280_read_uncomp_humidity_0:
        ; Setup parameters for indirect call
        MOV     R3,#0x2
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0x3
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_318:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     R2,A
//  446 			*v_uncomp_humidity_s32 = (s32)(
//  447 			(((u32)(a_data_u8[BME280_HUMIDITY_MSB_DATA]))
//  448 			<< BME280_SHIFT_BIT_POSITION_BY_08_BITS)|
//  449 			((u32)(a_data_u8[BME280_HUMIDITY_LSB_DATA])));
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine60 & 0xFFFF
//  450 		}
??CrossCallReturnLabel_159:
        MOV     ?V3,A
        MOV     A,#0x8
        MOV     R0,#?V0
        LCALL   ?L_SHL
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_261:
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_IOR
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0
        LCALL   ?L_MOV_TO_X
//  451 	return com_rslt;
        MOV     A,R2
        MOV     R1,A
??bme280_read_uncomp_humidity_1:
        MOV     A,#0x2
        SJMP    ??Subroutine106_0
//  452 }
          CFI EndBlock cfiBlock31

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond32 Using cfiCommon0
          CFI Function bme280_read_uncomp_temperature
          CFI Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_119
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond33 Using cfiCommon0
          CFI (cfiCond33) Function bme280_read_uncomp_pressure
          CFI (cfiCond33) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_120
          CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond33) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond33) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond33) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond33) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond33) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond33) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond33) CFA_SP SP+-4
          CFI (cfiCond33) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond34 Using cfiCommon0
          CFI (cfiCond34) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond34) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_121
          CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond34) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond34) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond34) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond34) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond34) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond34) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond34) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond34) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond34) CFA_SP SP+-4
          CFI (cfiCond34) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function bme280_read_uncomp_humidity
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond35) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond35) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond35) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+-2
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker36 Using cfiCommon1
          CFI (cfiPicker36) NoFunction
          CFI (cfiPicker36) Picker
        MOVX    A,@DPTR
        MOV     ?V4,A
        CLR     A
        MOV     ?V5,A
        MOV     ?V6,A
        MOV     ?V7,A
        RET
          CFI EndBlock cfiCond32
          CFI EndBlock cfiCond33
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiPicker36

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond37 Using cfiCommon0
          CFI Function bme280_read_uncomp_temperature
          CFI Conditional ??CrossCallReturnLabel_129
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function bme280_read_uncomp_pressure
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond38) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond38) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond38) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond38) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+-2
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function bme280_read_uncomp_humidity
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond39) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-2
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond40) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-2
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function bme280_get_calib_param
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+-2
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker42 Using cfiCommon1
          CFI (cfiPicker42) NoFunction
          CFI (cfiPicker42) Picker
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        RET
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiPicker42

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock43 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x3
          CFI EndBlock cfiBlock43
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine106_0:
          CFI Block cfiBlock44 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock44
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine107_0:
          CFI Block cfiBlock45 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock45
//  453 
//  454 /*!
//  455  * @brief Reads actual humidity from uncompensated humidity
//  456  * @note Returns the value in %rH as unsigned 32bit integer
//  457  * in Q22.10 format(22 integer 10 fractional bits).
//  458  * @note An output value of 42313
//  459  * represents 42313 / 1024 = 41.321 %rH
//  460  *
//  461  *
//  462  *
//  463  *  @param  v_uncomp_humidity_s32: value of uncompensated humidity
//  464  *
//  465  *  @return Return the actual relative humidity output as u32
//  466  *
//  467 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  468 u32 bme280_compensate_humidity_int32(s32 v_uncomp_humidity_s32)
bme280_compensate_humidity_int32:
          CFI Block cfiBlock46 Using cfiCommon0
          CFI Function bme280_compensate_humidity_int32
        CODE
//  469 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     ?V10,R4
        MOV     ?V11,R5
//  470 	s32 v_x1_u32 = BME280_INIT_VALUE;
//  471 
//  472 	/* calculate x1*/
//  473 	v_x1_u32 = (p_bme280->cal_param.t_fine - ((s32)76800));
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_90:
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_fffed400
        MOV     R0,#?V0
        LCALL   ?L_ADD_X
//  474 	/* calculate x1*/
//  475 	v_x1_u32 = (((((v_uncomp_humidity_s32
//  476 	<< BME280_SHIFT_BIT_POSITION_BY_14_BITS) -
//  477 	(((s32)p_bme280->cal_param.dig_H4)
//  478 	<< BME280_SHIFT_BIT_POSITION_BY_20_BITS) -
//  479 	(((s32)p_bme280->cal_param.dig_H5) * v_x1_u32)) +
//  480 	((s32)16384)) >> BME280_SHIFT_BIT_POSITION_BY_15_BITS)
//  481 	* (((((((v_x1_u32 *
//  482 	((s32)p_bme280->cal_param.dig_H6))
//  483 	>> BME280_SHIFT_BIT_POSITION_BY_10_BITS) *
//  484 	(((v_x1_u32 * ((s32)p_bme280->cal_param.dig_H3))
//  485 	>> BME280_SHIFT_BIT_POSITION_BY_11_BITS) + ((s32)32768)))
//  486 	>> BME280_SHIFT_BIT_POSITION_BY_10_BITS) + ((s32)2097152)) *
//  487 	((s32)p_bme280->cal_param.dig_H2) + 8192) >> 14));
        MOV     A,#0xe
        MOV     R0,#?V8
        LCALL   ?L_SHL
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_177:
        ADD     A,#0x1c
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_123:
        MOV     A,#0x14
        MOV     R0,#?V4
        LCALL   ?L_SHL
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?L_SUB
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_178:
        ADD     A,#0x1e
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_52:
        MOV     R1,#?V0
        LCALL   ?L_MUL
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?L_SUB
        MOV     DPTR,#__Constant_4000
        MOV     R0,#?V8
        LCALL   ?L_ADD_X
        MOV     A,#0xf
        MOV     R0,#?V8
        LCALL   ?SL_SHR
        MOV     ?V4,?V0
        MOV     ?V5,?V1
        MOV     ?V6,?V2
        MOV     ?V7,?V3
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_143:
        MOV     ?V12,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V13,A
        MOV     ?V14,A
        MOV     ?V15,A
        MOV     R0,#?V4
        MOV     R1,#?V12
        LCALL   ?L_MUL
        MOV     A,#0xa
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_125:
        MOV     R0,#?V0
        MOV     R1,#?V12
        LCALL   ?L_MUL
        MOV     A,#0xb
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        MOV     DPTR,#__Constant_8000
        MOV     R0,#?V0
        LCALL   ?L_ADD_X
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?L_MUL
        MOV     A,#0xa
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        MOV     DPTR,#__Constant_200000
        MOV     R0,#?V4
        LCALL   ?L_ADD_X
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_179:
        ADD     A,#0x19
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_284:
        LCALL   ?L_MUL
        MOV     DPTR,#__Constant_2000
        MOV     R0,#?V4
        LCALL   ?L_ADD_X
        MOV     A,#0xe
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?L_MUL
        MOV     ?V0,?V8
        MOV     ?V1,?V9
        MOV     ?V2,?V10
        MOV     ?V3,?V11
//  488 	v_x1_u32 = (v_x1_u32 - (((((v_x1_u32
//  489 	>> BME280_SHIFT_BIT_POSITION_BY_15_BITS) *
//  490 	(v_x1_u32 >> BME280_SHIFT_BIT_POSITION_BY_15_BITS))
//  491 	>> BME280_SHIFT_BIT_POSITION_BY_07_BITS) *
//  492 	((s32)p_bme280->cal_param.dig_H1))
//  493 	>> BME280_SHIFT_BIT_POSITION_BY_04_BITS));
        MOV     A,#0xf
        MOV     R0,#?V8
        LCALL   ?SL_SHR
        MOV     ?V4,?V8
        MOV     ?V5,?V9
        MOV     ?V6,?V10
        MOV     ?V7,?V11
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?L_MUL
        MOV     A,#0x7
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_127:
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?L_MUL
        MOV     A,#0x4
        MOV     R0,#?V4
        LCALL   ?SL_SHR
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_SUB
//  494 	v_x1_u32 = (v_x1_u32 < 0 ? 0 : v_x1_u32);
        MOV     DPTR,#__Constant_0
        MOV     R0,#?V0
        LCALL   ?SL_GE_X
        JC      ??bme280_compensate_humidity_int32_0
        MOV     ?V0,#0x0
        MOV     ?V1,#0x0
        MOV     ?V2,#0x0
        MOV     ?V3,#0x0
??bme280_compensate_humidity_int32_1:
        MOV     A,#0xc
        MOV     R0,#?V0
        LCALL   ?SL_SHR
//  495 	v_x1_u32 = (v_x1_u32 > 419430400 ?
//  496 	419430400 : v_x1_u32);
//  497 	return (u32)(v_x1_u32 >> BME280_SHIFT_BIT_POSITION_BY_12_BITS);
??bme280_compensate_humidity_int32_2:
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     R4,?V2
        MOV     R5,?V3
        LJMP    ??Subroutine124_0 & 0xFFFF
??bme280_compensate_humidity_int32_0:
        MOV     DPTR,#__Constant_19000001
        MOV     R0,#?V0
        LCALL   ?SL_GE_X
        JNC     ??bme280_compensate_humidity_int32_1
        MOV     ?V0,#0x0
        MOV     ?V1,#-0x70
        MOV     ?V2,#0x1
        MOV     ?V3,#0x0
        SJMP    ??bme280_compensate_humidity_int32_2
//  498 }
          CFI EndBlock cfiBlock46

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond47 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function bme280_compensate_humidity_int32
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond48) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond48) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond48) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond48) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond48) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond48) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond48) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond48) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond48) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond48) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond48) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+-2
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function bme280_compensate_pressure_int64
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond49) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond49) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond49) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond49) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond49) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond49) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond49) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond49) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond49) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond49) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond49) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+-2
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker50 Using cfiCommon1
          CFI (cfiPicker50) NoFunction
          CFI (cfiPicker50) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_235:
        RET
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiPicker50

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond51 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function bme280_compensate_humidity_int32
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_123
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond52) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond52) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond52) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond52) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond52) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond52) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond52) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond52) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond52) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond52) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond52) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+-4
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function bme280_compensate_pressure_int64
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_124
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond53) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond53) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond53) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond53) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond53) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond53) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond53) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond53) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-4
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function bme280_compensate_humidity_int32
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_52
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-4
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function bme280_compensate_pressure_double
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_53
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond55) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond55) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond55) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond55) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond55) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond55) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond55) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-4
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond56 Using cfiCommon0
          CFI (cfiCond56) Function bme280_compensate_pressure_double
          CFI (cfiCond56) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_54
          CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond56) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond56) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond56) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond56) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond56) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond56) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond56) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond56) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond56) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond56) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond56) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond56) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond56) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond56) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond56) CFA_SP SP+-4
          CFI (cfiCond56) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function bme280_compensate_pressure_double
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_55
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond57) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond57) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond57) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond57) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond57) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond57) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond57) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond57) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond57) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+-4
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function bme280_compensate_pressure_double
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_56
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond58) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond58) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond58) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond58) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond58) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond58) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond58) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond58) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond58) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond58) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond58) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-4
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function bme280_compensate_humidity_double
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_57
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond59) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond59) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond59) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond59) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond59) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond59) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond59) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+-8
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function bme280_compensate_humidity_double
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_58
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond60) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond60) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond60) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond60) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond60) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+-8
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker61 Using cfiCommon1
          CFI (cfiPicker61) NoFunction
          CFI (cfiPicker61) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V6,A
        MOV     ?V7,A
        RET
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiPicker61

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond62 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_283
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function bme280_compensate_humidity_int32
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond63) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond63) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond63) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+-2
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function bme280_compensate_pressure_int64
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_285
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond64) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond64) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond64) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond64) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond64) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-2
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker65 Using cfiCommon1
          CFI (cfiPicker65) NoFunction
          CFI (cfiPicker65) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiPicker65
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine108_0:
          CFI Block cfiCond66 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32
          CFI Conditional ??CrossCallReturnLabel_282
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function bme280_compensate_pressure_int32
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond67) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond67) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond67) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond67) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond67) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond67) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond67) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond67) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond67) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond67) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond67) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond67) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+-2
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function bme280_compensate_humidity_int32
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond68) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond68) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond68) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond68) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function bme280_compensate_pressure_int64
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_285
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond69) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond69) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond69) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond69) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond69) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond69) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond69) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond69) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond69) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond69) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+-2
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker70 Using cfiCommon1
          CFI (cfiPicker70) NoFunction
          CFI (cfiPicker70) Picker
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_383:
        MOV     R0,#?V4
        MOV     R1,#?V0
        RET
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiPicker70
//  499 
//  500 /*!
//  501  * @brief Reads actual humidity from uncompensated humidity
//  502  * @note Returns the value in %rH as unsigned 16bit integer
//  503  * @note An output value of 42313
//  504  * represents 42313/512 = 82.643 %rH
//  505  *
//  506  *
//  507  *
//  508  *  @param v_uncomp_humidity_s32: value of uncompensated humidity
//  509  *
//  510  *
//  511  *  @return Return the actual relative humidity output as u16
//  512  *
//  513 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  514 u16 bme280_compensate_humidity_int32_sixteen_bit_output(
bme280_compensate_humidity_int32_sixteen_bit_output:
          CFI Block cfiBlock71 Using cfiCommon0
          CFI Function bme280_compensate_humidity_int32_sixteen_bit_output
        CODE
//  515 s32 v_uncomp_humidity_s32)
//  516 {
        FUNCALL bme280_compensate_humidity_int32_sixteen_bit_output, bme280_compensate_humidity_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
//  517 	u32 v_x1_u32 = BME280_INIT_VALUE;
//  518 	u16 v_x2_u32 = BME280_INIT_VALUE;
//  519 
//  520 	v_x1_u32 =  bme280_compensate_humidity_int32(v_uncomp_humidity_s32);
//  521 	v_x2_u32 = (u16)(v_x1_u32 >> BME280_SHIFT_BIT_POSITION_BY_01_BIT);
//  522 	return v_x2_u32;
        ; Setup parameters for call to function bme280_compensate_humidity_int32
        LCALL   `??bme280_compensate_humidity_int32::?relay`; Banked call to: bme280_compensate_humidity_int32
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V2,R4
        MOV     ?V3,R5
        MOV     A,#0x1
        MOV     R0,#?V0
        LCALL   ?UL_SHR
        MOV     R2,?V0
        MOV     R3,?V1
        SJMP    ??Subroutine109_0
//  523 }
          CFI EndBlock cfiBlock71

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock72 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock72
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine109_0:
          CFI Block cfiBlock73 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock73
//  524 
//  525 /*!
//  526  * @brief This API used to read uncompensated
//  527  * pressure,temperature and humidity
//  528  *
//  529  *
//  530  *
//  531  *
//  532  *  @param  v_uncomp_pressure_s32: The value of uncompensated pressure.
//  533  *  @param  v_uncomp_temperature_s32: The value of uncompensated temperature
//  534  *  @param  v_uncomp_humidity_s32: The value of uncompensated humidity.
//  535  *
//  536  *
//  537  *
//  538  *	@return results of bus communication function
//  539  *	@retval 0 -> Success
//  540  *	@retval -1 -> Error
//  541  *
//  542  *
//  543 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  544 BME280_RETURN_FUNCTION_TYPE bme280_read_uncomp_pressure_temperature_humidity(
bme280_read_uncomp_pressure_temperature_humidity:
          CFI Block cfiBlock74 Using cfiCommon0
          CFI Function bme280_read_uncomp_pressure_temperature_humidity
        CODE
//  545 s32 *v_uncomp_pressure_s32,
//  546 s32 *v_uncomp_temperature_s32, s32 *v_uncomp_humidity_s32)
//  547 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 8
        MOV     A,#-0x8
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V8,R4
        MOV     ?V9,R5
//  548 	/* used to return the communication result*/
//  549 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
//  550 	/* Array holding the MSB and LSb value of
//  551 	a_data_u8[0] - Pressure MSB
//  552 	a_data_u8[1] - Pressure LSB
//  553 	a_data_u8[1] - Pressure LSB
//  554 	a_data_u8[1] - Temperature MSB
//  555 	a_data_u8[1] - Temperature LSB
//  556 	a_data_u8[1] - Temperature LSB
//  557 	a_data_u8[1] - Humidity MSB
//  558 	a_data_u8[1] - Humidity LSB
//  559 	*/
//  560 	u8 a_data_u8[BME280_DATA_FRAME_SIZE] = {
//  561 	BME280_INIT_VALUE, BME280_INIT_VALUE,
//  562 	BME280_INIT_VALUE, BME280_INIT_VALUE,
//  563 	BME280_INIT_VALUE, BME280_INIT_VALUE,
//  564 	BME280_INIT_VALUE, BME280_INIT_VALUE};
        MOV     DPTR,#`?<Constant {0, 0, 0, 0, 0, 0, 0, 0}>`
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     A,#0x8
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  565 	/* check the p_bme280 structure pointer as NULL*/
//  566 	if (p_bme280 == BME280_NULL) {
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_132:
        JNZ     ??bme280_read_uncomp_pressure_temperature_humid_1
//  567 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        LJMP    ??bme280_read_uncomp_pressure_temperature_humid_2 & 0xFFFF
//  568 		} else {
//  569 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
//  570 			p_bme280->dev_addr,
//  571 			BME280_PRESSURE_MSB_REG,
//  572 			a_data_u8, BME280_ALL_DATA_FRAME_LENGTH);
??bme280_read_uncomp_pressure_temperature_humid_1:
        ; Setup parameters for indirect call
        MOV     R3,#0x8
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0x9
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_319:
        LCALL   ?CALL_IND
        LCALL   ?Subroutine42 & 0xFFFF
//  573 			/*Pressure*/
//  574 			*v_uncomp_pressure_s32 = (s32)((
//  575 			((u32)(a_data_u8[
//  576 			BME280_DATA_FRAME_PRESSURE_MSB_BYTE]))
//  577 			<< BME280_SHIFT_BIT_POSITION_BY_12_BITS) |
//  578 			(((u32)(a_data_u8[
//  579 			BME280_DATA_FRAME_PRESSURE_LSB_BYTE]))
//  580 			<< BME280_SHIFT_BIT_POSITION_BY_04_BITS) |
//  581 			((u32)a_data_u8[
//  582 			BME280_DATA_FRAME_PRESSURE_XLSB_BYTE] >>
//  583 			BME280_SHIFT_BIT_POSITION_BY_04_BITS));
??CrossCallReturnLabel_118:
        LCALL   ?L_SHL
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_121:
        LCALL   ?L_SHL
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_IOR
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_95:
        LCALL   ?L_IOR
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0
        LCALL   ?L_MOV_TO_X
//  584 
//  585 			/* Temperature */
//  586 			*v_uncomp_temperature_s32 = (s32)(((
//  587 			(u32) (a_data_u8[
//  588 			BME280_DATA_FRAME_TEMPERATURE_MSB_BYTE]))
//  589 			<< BME280_SHIFT_BIT_POSITION_BY_12_BITS) |
//  590 			(((u32)(a_data_u8[
//  591 			BME280_DATA_FRAME_TEMPERATURE_LSB_BYTE]))
//  592 			<< BME280_SHIFT_BIT_POSITION_BY_04_BITS)
//  593 			| ((u32)a_data_u8[
//  594 			BME280_DATA_FRAME_TEMPERATURE_XLSB_BYTE]
//  595 			>> BME280_SHIFT_BIT_POSITION_BY_04_BITS));
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_160:
        MOV     A,#0xc
        MOV     R0,#?V0
        LCALL   ?L_SHL
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,#0x4
        MOV     R0,#?V4
        LCALL   ?L_SHL
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_IOR
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_96:
        LCALL   ?L_IOR
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOV     R0,#?V0
        LCALL   ?L_MOV_TO_X
//  596 
//  597 			/*Humidity*/
//  598 			*v_uncomp_humidity_s32 = (s32)((
//  599 			((u32)(a_data_u8[
//  600 			BME280_DATA_FRAME_HUMIDITY_MSB_BYTE]))
//  601 			<< BME280_SHIFT_BIT_POSITION_BY_08_BITS)|
//  602 			((u32)(a_data_u8[
//  603 			BME280_DATA_FRAME_HUMIDITY_LSB_BYTE])));
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine60 & 0xFFFF
//  604 		}
??CrossCallReturnLabel_161:
        MOV     A,#0x8
        MOV     R0,#?V0
        LCALL   ?L_SHL
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_IOR
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine105_0 & 0xFFFF
??CrossCallReturnLabel_277:
        MOV     R0,#?V0
        LCALL   ?L_MOV_TO_X
//  605 	return com_rslt;
        MOV     A,R2
        MOV     R1,A
??bme280_read_uncomp_pressure_temperature_humid_2:
        MOV     A,#0x8
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
//  606 }
          CFI EndBlock cfiBlock74

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond75 Using cfiCommon0
          CFI Function bme280_read_uncomp_humidity
          CFI Conditional ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond76) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond76) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond76) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_SP SP+-2
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond77) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond77) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+-2
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker78 Using cfiCommon1
          CFI (cfiPicker78) NoFunction
          CFI (cfiPicker78) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_264:
        RET
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiPicker78

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond79 Using cfiCommon0
          CFI Function bme280_read_uncomp_temperature
          CFI Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function bme280_read_uncomp_pressure
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_117
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-4
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_118
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond81) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond81) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond81) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond81) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond81) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+-4
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function bme280_read_uncomp_humidity
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_159
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond82) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-4
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_160
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond83) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond83) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond83) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond83) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-4
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_161
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-4
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker85 Using cfiCommon1
          CFI (cfiPicker85) NoFunction
          CFI (cfiPicker85) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        CLR     A
        MOV     ?V1,A
        MOV     ?V2,A
        RET
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiPicker85
//  607 
//  608 /*!
//  609  * @brief This API used to read true pressure, temperature and humidity
//  610  *
//  611  *
//  612  *
//  613  *
//  614  *	@param  v_pressure_u32 : The value of compensated pressure.
//  615  *	@param  v_temperature_s32 : The value of compensated temperature.
//  616  *	@param  v_humidity_u32 : The value of compensated humidity.
//  617  *
//  618  *
//  619  *	@return results of bus communication function
//  620  *	@retval 0 -> Success
//  621  *	@retval -1 -> Error
//  622  *
//  623  *
//  624 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  625 BME280_RETURN_FUNCTION_TYPE bme280_read_pressure_temperature_humidity(
bme280_read_pressure_temperature_humidity:
          CFI Block cfiBlock86 Using cfiCommon0
          CFI Function bme280_read_pressure_temperature_humidity
        CODE
//  626 u32 *v_pressure_u32, s32 *v_temperature_s32, u32 *v_humidity_u32)
//  627 {
        FUNCALL bme280_read_pressure_temperature_humidity, bme280_read_uncomp_pressure_temperature_humidity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_read_pressure_temperature_humidity, bme280_compensate_temperature_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_read_pressure_temperature_humidity, bme280_compensate_pressure_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_read_pressure_temperature_humidity, bme280_compensate_humidity_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  628 	/* used to return the communication result*/
//  629 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
//  630 	s32 v_uncomp_pressure_s32 = BME280_INIT_VALUE;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine19 & 0xFFFF
//  631 	s32 v_uncom_temperature_s32 = BME280_INIT_VALUE;
??CrossCallReturnLabel_37:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine14 & 0xFFFF
//  632 	s32 v_uncom_humidity_s32 = BME280_INIT_VALUE;
??CrossCallReturnLabel_17:
        LCALL   ??Subroutine121_0 & 0xFFFF
//  633 	/* check the p_bme280 structure pointer as NULL*/
//  634 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_358:
        JNZ     ??bme280_read_pressure_temperature_humidity_0
//  635 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_read_pressure_temperature_humidity_1
//  636 		} else {
//  637 			/* read the uncompensated pressure,
//  638 			temperature and humidity*/
//  639 			com_rslt =
//  640 			bme280_read_uncomp_pressure_temperature_humidity(
//  641 			&v_uncomp_pressure_s32, &v_uncom_temperature_s32,
//  642 			&v_uncom_humidity_s32);
??bme280_read_pressure_temperature_humidity_0:
        ; Setup parameters for call to function bme280_read_uncomp_pressure_temperature_humidity
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP102_8
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??bme280_read_uncomp_pressure_temperature_humid; Banked call to: bme280_read_uncomp_pressure_temperature_humidity
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R1
        MOV     ?V0,A
//  643 			/* read the true pressure, temperature and humidity*/
//  644 			*v_temperature_s32 =
//  645 			bme280_compensate_temperature_int32(
//  646 			v_uncom_temperature_s32);
        ; Setup parameters for call to function bme280_compensate_temperature_int32
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R2345
        LCALL   `??bme280_compensate_temperature_int32::?relay`; Banked call to: bme280_compensate_temperature_int32
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?XSTORE_R2345
//  647 			*v_pressure_u32 = bme280_compensate_pressure_int32(
//  648 			v_uncomp_pressure_s32);
        ; Setup parameters for call to function bme280_compensate_pressure_int32
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R2345
        LCALL   `??bme280_compensate_pressure_int32::?relay`; Banked call to: bme280_compensate_pressure_int32
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?XSTORE_R2345
//  649 			*v_humidity_u32 = bme280_compensate_humidity_int32(
//  650 			v_uncom_humidity_s32);
        ; Setup parameters for call to function bme280_compensate_humidity_int32
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?XLOAD_R2345
        LCALL   `??bme280_compensate_humidity_int32::?relay`; Banked call to: bme280_compensate_humidity_int32
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine105_0 & 0xFFFF
//  651 		}
??CrossCallReturnLabel_278:
        LCALL   ?XSTORE_R2345
//  652 	return com_rslt;
        MOV     R1,?V0
??bme280_read_pressure_temperature_humidity_1:
        MOV     A,#0xc
        LJMP    ?Subroutine5 & 0xFFFF
//  653 }
          CFI EndBlock cfiBlock86
//  654 
//  655 /*!
//  656  *	@brief This API is used to
//  657  *	calibration parameters used for calculation in the registers
//  658  *
//  659  *  parameter | Register address |   bit
//  660  *------------|------------------|----------------
//  661  *	dig_T1    |  0x88 and 0x89   | from 0 : 7 to 8: 15
//  662  *	dig_T2    |  0x8A and 0x8B   | from 0 : 7 to 8: 15
//  663  *	dig_T3    |  0x8C and 0x8D   | from 0 : 7 to 8: 15
//  664  *	dig_P1    |  0x8E and 0x8F   | from 0 : 7 to 8: 15
//  665  *	dig_P2    |  0x90 and 0x91   | from 0 : 7 to 8: 15
//  666  *	dig_P3    |  0x92 and 0x93   | from 0 : 7 to 8: 15
//  667  *	dig_P4    |  0x94 and 0x95   | from 0 : 7 to 8: 15
//  668  *	dig_P5    |  0x96 and 0x97   | from 0 : 7 to 8: 15
//  669  *	dig_P6    |  0x98 and 0x99   | from 0 : 7 to 8: 15
//  670  *	dig_P7    |  0x9A and 0x9B   | from 0 : 7 to 8: 15
//  671  *	dig_P8    |  0x9C and 0x9D   | from 0 : 7 to 8: 15
//  672  *	dig_P9    |  0x9E and 0x9F   | from 0 : 7 to 8: 15
//  673  *	dig_H1    |         0xA1     | from 0 to 7
//  674  *	dig_H2    |  0xE1 and 0xE2   | from 0 : 7 to 8: 15
//  675  *	dig_H3    |         0xE3     | from 0 to 7
//  676  *	dig_H4    |  0xE4 and 0xE5   | from 4 : 11 to 0: 3
//  677  *	dig_H5    |  0xE5 and 0xE6   | from 0 : 3 to 4: 11
//  678  *	dig_H6    |         0xE7     | from 0 to 7
//  679  *
//  680  *	@return results of bus communication function
//  681  *	@retval 0 -> Success
//  682  *	@retval -1 -> Error
//  683  *
//  684  *
//  685 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  686 BME280_RETURN_FUNCTION_TYPE bme280_get_calib_param(void)
bme280_get_calib_param:
          CFI Block cfiBlock87 Using cfiCommon0
          CFI Function bme280_get_calib_param
        CODE
//  687 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 26
        MOV     A,#-0x1a
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
//  688 	/* used to return the communication result*/
//  689 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
//  690 	u8 a_data_u8[BME280_CALIB_DATA_SIZE] = {
//  691 	BME280_INIT_VALUE, BME280_INIT_VALUE,
//  692 	BME280_INIT_VALUE, BME280_INIT_VALUE, BME280_INIT_VALUE,
//  693 	BME280_INIT_VALUE, BME280_INIT_VALUE, BME280_INIT_VALUE,
//  694 	BME280_INIT_VALUE, BME280_INIT_VALUE, BME280_INIT_VALUE,
//  695 	BME280_INIT_VALUE, BME280_INIT_VALUE, BME280_INIT_VALUE,
//  696 	BME280_INIT_VALUE, BME280_INIT_VALUE, BME280_INIT_VALUE,
//  697 	BME280_INIT_VALUE, BME280_INIT_VALUE, BME280_INIT_VALUE,
//  698 	BME280_INIT_VALUE, BME280_INIT_VALUE, BME280_INIT_VALUE,
//  699 	BME280_INIT_VALUE, BME280_INIT_VALUE, BME280_INIT_VALUE};
        MOV     DPTR,#`?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0`
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     A,#0x1a
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  700 	/* check the p_bme280 structure pointer as NULL*/
//  701 	if (p_bme280 == BME280_NULL) {
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_133:
        JNZ     ??bme280_get_calib_param_0
//  702 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        LJMP    ??bme280_get_calib_param_1 & 0xFFFF
//  703 		} else {
//  704 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
//  705 			p_bme280->dev_addr,
//  706 			BME280_TEMPERATURE_CALIB_DIG_T1_LSB_REG,
//  707 			a_data_u8,
//  708 			BME280_PRESSURE_TEMPERATURE_CALIB_DATA_LENGTH);
??bme280_get_calib_param_0:
        ; Setup parameters for indirect call
        MOV     R3,#0x1a
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0x78
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_320:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     R6,A
//  709 
//  710 			p_bme280->cal_param.dig_T1 = (u16)(((
//  711 			(u16)((u8)a_data_u8[
//  712 			BME280_TEMPERATURE_CALIB_DIG_T1_MSB])) <<
//  713 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  714 			| a_data_u8[BME280_TEMPERATURE_CALIB_DIG_T1_LSB]);
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_196:
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_255:
        LCALL   ??Subroutine110_0 & 0xFFFF
//  715 			p_bme280->cal_param.dig_T2 = (s16)(((
//  716 			(s16)((s8)a_data_u8[
//  717 			BME280_TEMPERATURE_CALIB_DIG_T2_MSB])) <<
//  718 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  719 			| a_data_u8[BME280_TEMPERATURE_CALIB_DIG_T2_LSB]);
??CrossCallReturnLabel_286:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_141:
        LCALL   ??Subroutine110_0 & 0xFFFF
//  720 			p_bme280->cal_param.dig_T3 = (s16)(((
//  721 			(s16)((s8)a_data_u8[
//  722 			BME280_TEMPERATURE_CALIB_DIG_T3_MSB])) <<
//  723 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  724 			| a_data_u8[BME280_TEMPERATURE_CALIB_DIG_T3_LSB]);
??CrossCallReturnLabel_287:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_142:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine110_0 & 0xFFFF
//  725 			p_bme280->cal_param.dig_P1 = (u16)(((
//  726 			(u16)((u8)a_data_u8[
//  727 			BME280_PRESSURE_CALIB_DIG_P1_MSB])) <<
//  728 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  729 			| a_data_u8[BME280_PRESSURE_CALIB_DIG_P1_LSB]);
??CrossCallReturnLabel_288:
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_67:
        ADD     A,#0x6
        LCALL   ?Subroutine15 & 0xFFFF
//  730 			p_bme280->cal_param.dig_P2 = (s16)(((
//  731 			(s16)((s8)a_data_u8[
//  732 			BME280_PRESSURE_CALIB_DIG_P2_MSB])) <<
//  733 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  734 			| a_data_u8[BME280_PRESSURE_CALIB_DIG_P2_LSB]);
??CrossCallReturnLabel_289:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_68:
        ADD     A,#0x8
        LCALL   ?Subroutine15 & 0xFFFF
//  735 			p_bme280->cal_param.dig_P3 = (s16)(((
//  736 			(s16)((s8)a_data_u8[
//  737 			BME280_PRESSURE_CALIB_DIG_P3_MSB])) <<
//  738 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  739 			| a_data_u8[
//  740 			BME280_PRESSURE_CALIB_DIG_P3_LSB]);
??CrossCallReturnLabel_290:
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_69:
        ADD     A,#0xa
        LCALL   ?Subroutine15 & 0xFFFF
//  741 			p_bme280->cal_param.dig_P4 = (s16)(((
//  742 			(s16)((s8)a_data_u8[
//  743 			BME280_PRESSURE_CALIB_DIG_P4_MSB])) <<
//  744 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  745 			| a_data_u8[BME280_PRESSURE_CALIB_DIG_P4_LSB]);
??CrossCallReturnLabel_291:
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_70:
        ADD     A,#0xc
        LCALL   ?Subroutine15 & 0xFFFF
//  746 			p_bme280->cal_param.dig_P5 = (s16)(((
//  747 			(s16)((s8)a_data_u8[
//  748 			BME280_PRESSURE_CALIB_DIG_P5_MSB])) <<
//  749 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  750 			| a_data_u8[BME280_PRESSURE_CALIB_DIG_P5_LSB]);
??CrossCallReturnLabel_292:
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_71:
        ADD     A,#0xe
        LCALL   ?Subroutine15 & 0xFFFF
//  751 			p_bme280->cal_param.dig_P6 = (s16)(((
//  752 			(s16)((s8)a_data_u8[
//  753 			BME280_PRESSURE_CALIB_DIG_P6_MSB])) <<
//  754 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  755 			| a_data_u8[BME280_PRESSURE_CALIB_DIG_P6_LSB]);
??CrossCallReturnLabel_293:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_72:
        ADD     A,#0x10
        LCALL   ?Subroutine15 & 0xFFFF
//  756 			p_bme280->cal_param.dig_P7 = (s16)(((
//  757 			(s16)((s8)a_data_u8[
//  758 			BME280_PRESSURE_CALIB_DIG_P7_MSB])) <<
//  759 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  760 			| a_data_u8[BME280_PRESSURE_CALIB_DIG_P7_LSB]);
??CrossCallReturnLabel_294:
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_73:
        ADD     A,#0x12
        LCALL   ?Subroutine15 & 0xFFFF
//  761 			p_bme280->cal_param.dig_P8 = (s16)(((
//  762 			(s16)((s8)a_data_u8[
//  763 			BME280_PRESSURE_CALIB_DIG_P8_MSB])) <<
//  764 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  765 			| a_data_u8[BME280_PRESSURE_CALIB_DIG_P8_LSB]);
??CrossCallReturnLabel_295:
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_74:
        ADD     A,#0x14
        LCALL   ?Subroutine15 & 0xFFFF
//  766 			p_bme280->cal_param.dig_P9 = (s16)(((
//  767 			(s16)((s8)a_data_u8[
//  768 			BME280_PRESSURE_CALIB_DIG_P9_MSB])) <<
//  769 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  770 			| a_data_u8[BME280_PRESSURE_CALIB_DIG_P9_LSB]);
??CrossCallReturnLabel_296:
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_75:
        ADD     A,#0x16
        LCALL   ?Subroutine15 & 0xFFFF
//  771 			p_bme280->cal_param.dig_H1 =
//  772 			a_data_u8[BME280_HUMIDITY_CALIB_DIG_H1];
??CrossCallReturnLabel_297:
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_180:
        ADD     A,#0x18
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  773 			
//  774 			com_rslt += p_bme280->BME280_BUS_READ_FUNC(
//  775 			p_bme280->dev_addr,
//  776 			BME280_HUMIDITY_CALIB_DIG_H2_LSB_REG, a_data_u8,
//  777 			BME280_HUMIDITY_CALIB_DATA_LENGTH);
        ; Setup parameters for indirect call
        MOV     R3,#0x7
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0x1f
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_321:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     R4,A
//  778 			p_bme280->cal_param.dig_H2 = (s16)(((
//  779 			(s16)((s8)a_data_u8[
//  780 			BME280_HUMIDITY_CALIB_DIG_H2_MSB])) <<
//  781 			BME280_SHIFT_BIT_POSITION_BY_08_BITS)
//  782 			| a_data_u8[BME280_HUMIDITY_CALIB_DIG_H2_LSB]);
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_197:
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_76:
        ADD     A,#0x19
        LCALL   ?Subroutine15 & 0xFFFF
//  783 			p_bme280->cal_param.dig_H3 =
//  784 			a_data_u8[BME280_HUMIDITY_CALIB_DIG_H3];
??CrossCallReturnLabel_298:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_181:
        ADD     A,#0x1b
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  785 			p_bme280->cal_param.dig_H4 = (s16)(((
//  786 			(s16)((s8)a_data_u8[
//  787 			BME280_HUMIDITY_CALIB_DIG_H4_MSB])) <<
//  788 			BME280_SHIFT_BIT_POSITION_BY_04_BITS) |
//  789 			(((u8)BME280_MASK_DIG_H4) &
//  790 			a_data_u8[BME280_HUMIDITY_CALIB_DIG_H4_LSB]));
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL   ?S_SHL
        MOV     A,R2
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_198:
        MOV     R3,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R3
        ADD     A,#0x1c
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        MOVX    @DPTR,A
//  791 			p_bme280->cal_param.dig_H5 = (s16)(((
//  792 			(s16)((s8)a_data_u8[
//  793 			BME280_HUMIDITY_CALIB_DIG_H5_MSB])) <<
//  794 			BME280_SHIFT_BIT_POSITION_BY_04_BITS) |
//  795 			(a_data_u8[BME280_HUMIDITY_CALIB_DIG_H4_LSB] >>
//  796 			BME280_SHIFT_BIT_POSITION_BY_04_BITS));
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_163:
        LCALL   ?S_SHL
        MOV     A,R2
        SWAP    A
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_199:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R2
        ADD     A,#0x1e
        MOV     DPL,A
        CLR     A
        ADDC    A,R2
        MOV     DPH,A
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        MOVX    @DPTR,A
//  797 			p_bme280->cal_param.dig_H6 =
//  798 			(s8)a_data_u8[BME280_HUMIDITY_CALIB_DIG_H6];
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine65 & 0xFFFF
//  799 		}
??CrossCallReturnLabel_182:
        ADD     A,#0x20
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  800 	return com_rslt;
        MOV     A,R6
        ADD     A,R4
        MOV     R1,A
??bme280_get_calib_param_1:
        MOV     A,#0x1a
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
//  801 }
          CFI EndBlock cfiBlock87

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond88 Using cfiCommon0
          CFI Function bme280_get_calib_param
          CFI Conditional ??CrossCallReturnLabel_198
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function bme280_get_calib_param
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+-2
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker90 Using cfiCommon1
          CFI (cfiPicker90) NoFunction
          CFI (cfiPicker90) Picker
        ANL     A,#0xf
        MOV     R0,A
        MOV     A,?V0
        ORL     A,R0
        MOV     R0,A
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiPicker90

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond91 Using cfiCommon0
          CFI Function bme280_get_calib_param
          CFI Conditional ??CrossCallReturnLabel_196
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function bme280_get_calib_param
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-2
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker93 Using cfiCommon1
          CFI (cfiPicker93) NoFunction
          CFI (cfiPicker93) Picker
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiPicker93

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond94 Using cfiCommon0
          CFI Function bme280_get_calib_param
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond95 Using cfiCommon0
          CFI (cfiCond95) Function bme280_get_calib_param
          CFI (cfiCond95) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond95) CFA_SP SP+-2
          CFI (cfiCond95) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker96 Using cfiCommon1
          CFI (cfiPicker96) NoFunction
          CFI (cfiPicker96) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V1,A
        MOV     A,#0x4
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond94
          CFI EndBlock cfiCond95
          CFI EndBlock cfiPicker96

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond97 Using cfiCommon0
          CFI Function bme280_get_calib_param
          CFI Conditional ??CrossCallReturnLabel_141
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function bme280_get_calib_param
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+-2
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker99 Using cfiCommon1
          CFI (cfiPicker99) NoFunction
          CFI (cfiPicker99) Picker
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_256:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiPicker99

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond100 Using cfiCommon0
          CFI Function bme280_get_calib_param
          CFI Conditional ??CrossCallReturnLabel_255
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function bme280_get_calib_param
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_141
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-4
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function bme280_get_calib_param
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_142
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+-4
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker103 Using cfiCommon1
          CFI (cfiPicker103) NoFunction
          CFI (cfiPicker103) Picker
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_276:
        MOV     DPH,A
        MOV     DPL,R2
        RET
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiPicker103

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond104 Using cfiCommon0
          CFI Function bme280_get_calib_param
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function bme280_get_calib_param
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+-2
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function bme280_get_calib_param
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+-2
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function bme280_get_calib_param
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+-2
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function bme280_get_calib_param
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-2
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function bme280_get_calib_param
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-2
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function bme280_get_calib_param
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-2
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function bme280_get_calib_param
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-2
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function bme280_get_calib_param
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-2
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function bme280_get_calib_param
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-2
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker114 Using cfiCommon1
          CFI (cfiPicker114) NoFunction
          CFI (cfiPicker114) Picker
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_275:
        XCH     A,R2
        RET
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiPicker114

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond115 Using cfiCommon0
          CFI Function bme280_get_calib_param
          CFI Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_255
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function bme280_get_calib_param
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_141
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-6
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function bme280_get_calib_param
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_142
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-6
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function bme280_get_calib_param
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_67
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+-4
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function bme280_get_calib_param
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_68
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+-4
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function bme280_get_calib_param
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_69
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-4
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function bme280_get_calib_param
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_70
          CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond121) CFA_SP SP+-4
          CFI (cfiCond121) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function bme280_get_calib_param
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_71
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+-4
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function bme280_get_calib_param
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_72
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+-4
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function bme280_get_calib_param
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_73
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+-4
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function bme280_get_calib_param
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_74
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-4
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function bme280_get_calib_param
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_75
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-4
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function bme280_get_calib_param
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_76
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-4
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker128 Using cfiCommon1
          CFI (cfiPicker128) NoFunction
          CFI (cfiPicker128) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiPicker128

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond129 Using cfiCommon0
          CFI Function bme280_get_calib_param
          CFI Conditional ??CrossCallReturnLabel_289
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function bme280_get_calib_param
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+-2
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function bme280_get_calib_param
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond131) CFA_SP SP+-2
          CFI (cfiCond131) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function bme280_get_calib_param
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-2
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function bme280_get_calib_param
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-2
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function bme280_get_calib_param
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+-2
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function bme280_get_calib_param
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-2
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function bme280_get_calib_param
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-2
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function bme280_get_calib_param
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+-2
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function bme280_get_calib_param
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+-2
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker139 Using cfiCommon1
          CFI (cfiPicker139) NoFunction
          CFI (cfiPicker139) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R2
        MOV     DPH,A
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiPicker139
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine110_0:
          CFI Block cfiCond140 Using cfiCommon0
          CFI Function bme280_get_calib_param
          CFI Conditional ??CrossCallReturnLabel_286
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function bme280_get_calib_param
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_287
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-2
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function bme280_get_calib_param
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function bme280_get_calib_param
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+-2
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function bme280_get_calib_param
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+-2
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function bme280_get_calib_param
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond145) CFA_SP SP+-2
          CFI (cfiCond145) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function bme280_get_calib_param
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+-2
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function bme280_get_calib_param
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-2
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function bme280_get_calib_param
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-2
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function bme280_get_calib_param
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+-2
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function bme280_get_calib_param
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-2
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function bme280_get_calib_param
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-2
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function bme280_get_calib_param
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-2
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker153 Using cfiCommon1
          CFI (cfiPicker153) NoFunction
          CFI (cfiPicker153) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiPicker153
//  802 
//  803 /*!
//  804  *	@brief This API is used to get
//  805  *	the temperature oversampling setting in the register 0xF4
//  806  *	bits from 5 to 7
//  807  *
//  808  *	value               |   Temperature oversampling
//  809  * ---------------------|---------------------------------
//  810  *	0x00                | Skipped
//  811  *	0x01                | BME280_OVERSAMP_1X
//  812  *	0x02                | BME280_OVERSAMP_2X
//  813  *	0x03                | BME280_OVERSAMP_4X
//  814  *	0x04                | BME280_OVERSAMP_8X
//  815  *	0x05,0x06 and 0x07  | BME280_OVERSAMP_16X
//  816  *
//  817  *
//  818  *  @param v_value_u8 : The value of temperature over sampling
//  819  *
//  820  *
//  821  *
//  822  *	@return results of bus communication function
//  823  *	@retval 0 -> Success
//  824  *	@retval -1 -> Error
//  825  *
//  826  *
//  827 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  828 BME280_RETURN_FUNCTION_TYPE bme280_get_oversamp_temperature(
bme280_get_oversamp_temperature:
          CFI Block cfiBlock154 Using cfiCommon0
          CFI Function bme280_get_oversamp_temperature
        CODE
//  829 u8 *v_value_u8)
//  830 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        LCALL   ?Subroutine9 & 0xFFFF
//  831 	/* used to return the communication result*/
//  832 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
//  833 	u8 v_data_u8 = BME280_INIT_VALUE;
//  834 	/* check the p_bme280 structure pointer as NULL*/
//  835 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_344:
        JNZ     ??bme280_get_oversamp_temperature_0
//  836 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_get_oversamp_temperature_1
//  837 		} else {
//  838 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
//  839 			p_bme280->dev_addr,
//  840 			BME280_CTRL_MEAS_REG_OVERSAMP_TEMPERATURE__REG,
//  841 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_get_oversamp_temperature_0:
        ; Setup parameters for indirect call
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_327:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     R1,A
//  842 			*v_value_u8 = BME280_GET_BITSLICE(v_data_u8,
//  843 			BME280_CTRL_MEAS_REG_OVERSAMP_TEMPERATURE);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        SWAP    A
        RRC     A
        LCALL   ?Subroutine75 & 0xFFFF
//  844 
//  845 			p_bme280->oversamp_temperature = *v_value_u8;
??CrossCallReturnLabel_214:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine57 & 0xFFFF
//  846 		}
??CrossCallReturnLabel_153:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  847 	return com_rslt;
??bme280_get_oversamp_temperature_1:
        LJMP    ?Subroutine1 & 0xFFFF
//  848 }
          CFI EndBlock cfiBlock154
//  849 
//  850 /*!
//  851  *	@brief This API is used to set
//  852  *	the temperature oversampling setting in the register 0xF4
//  853  *	bits from 5 to 7
//  854  *
//  855  *	value               |   Temperature oversampling
//  856  * ---------------------|---------------------------------
//  857  *	0x00                | Skipped
//  858  *	0x01                | BME280_OVERSAMP_1X
//  859  *	0x02                | BME280_OVERSAMP_2X
//  860  *	0x03                | BME280_OVERSAMP_4X
//  861  *	0x04                | BME280_OVERSAMP_8X
//  862  *	0x05,0x06 and 0x07  | BME280_OVERSAMP_16X
//  863  *
//  864  *
//  865  *  @param v_value_u8 : The value of temperature over sampling
//  866  *
//  867  *
//  868  *
//  869  *	@return results of bus communication function
//  870  *	@retval 0 -> Success
//  871  *	@retval -1 -> Error
//  872  *
//  873  *
//  874 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  875 BME280_RETURN_FUNCTION_TYPE bme280_set_oversamp_temperature(
bme280_set_oversamp_temperature:
          CFI Block cfiBlock155 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
        CODE
//  876 u8 v_value_u8)
//  877 {
        FUNCALL bme280_set_oversamp_temperature, bme280_get_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_temperature, bme280_set_soft_rst
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_temperature, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_temperature, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_temperature, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_temperature, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_temperature, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_temperature, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     R6,A
//  878 	/* used to return the communication result*/
//  879 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
//  880 	u8 v_data_u8 = BME280_INIT_VALUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
//  881 	u8 v_prev_pow_mode_u8 = BME280_INIT_VALUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//  882 	u8 v_pre_ctrl_hum_value_u8 = BME280_INIT_VALUE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//  883 	u8 v_pre_config_value_u8 = BME280_INIT_VALUE;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine120_0 & 0xFFFF
//  884 	/* check the p_bme280 structure pointer as NULL*/
//  885 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_351:
        JNZ     ??bme280_set_oversamp_temperature_0
//  886 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        LJMP    ??bme280_set_oversamp_temperature_1 & 0xFFFF
//  887 		} else {
//  888 			v_data_u8 = p_bme280->ctrl_meas_reg;
//  889 			v_data_u8 =
//  890 			BME280_SET_BITSLICE(v_data_u8,
//  891 			BME280_CTRL_MEAS_REG_OVERSAMP_TEMPERATURE, v_value_u8);
??bme280_set_oversamp_temperature_0:
        MOV     A,R6
        SWAP    A
        RLC     A
        ANL     A,#0xe0
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_104:
        ANL     A,#0x1f
        LCALL   ?Subroutine76 & 0xFFFF
//  892 			com_rslt = bme280_get_power_mode(&v_prev_pow_mode_u8);
??CrossCallReturnLabel_217:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_get_power_mode::?relay`; Banked call to: bme280_get_power_mode
//  893 			if (v_prev_pow_mode_u8 != BME280_SLEEP_MODE) {
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JZ      ??bme280_set_oversamp_temperature_2
//  894 				com_rslt += bme280_set_soft_rst();
        ; Setup parameters for call to function bme280_set_soft_rst
        LCALL   `??bme280_set_soft_rst::?relay`; Banked call to: bme280_set_soft_rst
//  895 				p_bme280->delay_msec(BME280_3MS_DELAY);
        ; Setup parameters for indirect call
        MOV     DPTR,#__Constant_3
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_43:
        LCALL   ?CALL_IND
//  896 				/* write previous value
//  897 				of configuration register*/
//  898 				v_pre_config_value_u8 = p_bme280->config_reg;
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_77:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
//  899 				com_rslt += bme280_write_register(
//  900 					BME280_CONFIG_REG,
//  901 				&v_pre_config_value_u8,
//  902 				BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_28:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xb
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
//  903 				/* write previous value
//  904 				of humidity oversampling*/
//  905 				v_pre_ctrl_hum_value_u8 =
//  906 				p_bme280->ctrl_hum_reg;
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_364:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  907 				com_rslt += bme280_write_register(
//  908 					BME280_CTRL_HUMIDITY_REG,
//  909 				&v_pre_ctrl_hum_value_u8,
//  910 				BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xe
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
//  911 				/* write previous and updated value
//  912 				of configuration register*/
//  913 				com_rslt += bme280_write_register(
//  914 					BME280_CTRL_MEAS_REG,
//  915 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xc
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        SJMP    ??bme280_set_oversamp_temperature_3
//  916 			} else {
//  917 				com_rslt = p_bme280->BME280_BUS_WRITE_FUNC(
//  918 				p_bme280->dev_addr,
//  919 				BME280_CTRL_MEAS_REG_OVERSAMP_TEMPERATURE__REG,
//  920 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_set_oversamp_temperature_2:
        ; Setup parameters for indirect call
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0xc
        LCALL   ??Subroutine112_0 & 0xFFFF
//  921 			}
??CrossCallReturnLabel_307:
        LCALL   ?CALL_IND
//  922 				p_bme280->oversamp_temperature = v_value_u8;
??bme280_set_oversamp_temperature_3:
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_183:
        ADD     A,#0x27
        LCALL   ?Subroutine13 & 0xFFFF
//  923 				/* read the control measurement register value*/
//  924 				com_rslt = bme280_read_register(
//  925 					BME280_CTRL_MEAS_REG,
//  926 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_299:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R7,A
//  927 				p_bme280->ctrl_meas_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_82:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine11 & 0xFFFF
//  928 				/* read the control humidity register value*/
//  929 				com_rslt += bme280_read_register(
//  930 					BME280_CTRL_HUMIDITY_REG,
//  931 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_8:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V0,A
//  932 				p_bme280->ctrl_hum_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_59:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine10 & 0xFFFF
//  933 				/* read the control
//  934 				configuration register value*/
//  935 				com_rslt += bme280_read_register(
//  936 					BME280_CONFIG_REG,
//  937 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_0:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R0,A
//  938 				p_bme280->config_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine41 & 0xFFFF
//  939 		}
??CrossCallReturnLabel_110:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  940 	return com_rslt;
        MOV     A,R7
        ADD     A,?V0
        ADD     A,R0
        MOV     R1,A
??bme280_set_oversamp_temperature_1:
          CFI EndBlock cfiBlock155
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
//  941 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock156 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x4
        LJMP    ??Subroutine116_0 & 0xFFFF
          CFI EndBlock cfiBlock156

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond157 Using cfiCommon0
          CFI Function bme280_init
          CFI Conditional ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function bme280_compensate_pressure_int32
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond158) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond158) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond158) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond158) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+-2
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function bme280_compensate_pressure_int32
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-2
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function bme280_compensate_pressure_int32
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-2
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function bme280_compensate_humidity_int32
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond161) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond161) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-2
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function bme280_compensate_humidity_int32
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond162) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond162) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond162) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond162) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond162) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+-2
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function bme280_compensate_humidity_int32
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond163) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond163) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond163) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond163) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond163) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond163) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond163) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond163) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond163) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+-2
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function bme280_get_calib_param
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function bme280_get_calib_param
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function bme280_get_calib_param
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function bme280_set_oversamp_temperature
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-2
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function bme280_get_oversamp_pressure
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function bme280_set_oversamp_pressure
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+-2
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function bme280_compensate_pressure_double
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond170) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond170) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond170) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond170) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond170) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond170) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond170) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond170) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+-2
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function bme280_compensate_pressure_double
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond171) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond171) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-2
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function bme280_compensate_pressure_double
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-2
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function bme280_compensate_humidity_double
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-6
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function bme280_compensate_humidity_double
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond174) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond174) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond174) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+-6
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function bme280_compensate_humidity_double
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-6
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker176 Using cfiCommon1
          CFI (cfiPicker176) NoFunction
          CFI (cfiPicker176) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_254:
        RET
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiPicker176

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond177 Using cfiCommon0
          CFI Function bme280_init
          CFI Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-5
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function bme280_compensate_pressure_int32
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_174
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond178) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond178) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond178) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond178) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond178) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond178) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+-4
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function bme280_compensate_pressure_int32
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_175
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond179) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond179) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond179) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond179) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-4
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function bme280_compensate_pressure_int32
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_176
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond180) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-4
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function bme280_compensate_humidity_int32
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_177
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond181) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond181) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond181) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-4
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function bme280_compensate_humidity_int32
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_178
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond182) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond182) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond182) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+-4
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function bme280_compensate_humidity_int32
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_179
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+-4
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function bme280_get_calib_param
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_180
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-5
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function bme280_get_calib_param
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_181
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-5
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function bme280_get_calib_param
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_182
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+-5
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function bme280_set_oversamp_temperature
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_183
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+-4
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function bme280_get_oversamp_pressure
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_184
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+-5
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function bme280_set_oversamp_pressure
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_185
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+-4
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function bme280_compensate_pressure_double
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_186
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond190) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond190) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond190) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond190) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond190) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond190) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond190) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond190) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond190) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond190) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond190) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond190) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+-4
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function bme280_compensate_pressure_double
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_187
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-4
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function bme280_compensate_pressure_double
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_188
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond192) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond192) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond192) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond192) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond192) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-4
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function bme280_compensate_humidity_double
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_189
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond193) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond193) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond193) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-8
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function bme280_compensate_humidity_double
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_190
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-8
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function bme280_compensate_humidity_double
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_191
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond195) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond195) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond195) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond195) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond195) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond195) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond195) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-8
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function bme280_init
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_42
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-4
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function bme280_set_oversamp_temperature
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_43
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-4
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function bme280_set_oversamp_pressure
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_44
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-4
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function bme280_set_oversamp_humidity
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_45
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-4
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function bme280_set_power_mode
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_46
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-4
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function bme280_set_spi3
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_47
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-4
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function bme280_set_filter
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_48
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+-4
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function bme280_set_standby_durn
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_49
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-4
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_50
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-4
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_51
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-4
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function bme280_compensate_pressure_int32
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_170
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond206) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond206) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond206) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond206) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond206) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond206) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond206) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond206) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond206) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond206) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond206) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-4
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function bme280_compensate_pressure_double
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_171
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond207) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond207) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-4
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function bme280_compensate_pressure_int64
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_172
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond208) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond208) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond208) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond208) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond208) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond208) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-4
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function bme280_compensate_pressure_int32
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_167
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond209) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond209) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond209) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond209) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-4
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function bme280_compensate_pressure_double
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_168
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-4
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function bme280_compensate_pressure_int64
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_169
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+-4
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function bme280_compensate_pressure_int32
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_164
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond212) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond212) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond212) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+-4
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function bme280_compensate_pressure_double
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_165
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond213) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond213) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond213) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-4
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function bme280_compensate_pressure_int64
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_166
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond214) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond214) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond214) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond214) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond214) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond214) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond214) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond214) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond214) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-4
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function bme280_compensate_pressure_int32
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_101
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond215) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-4
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function bme280_compensate_pressure_double
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_102
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond216) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-4
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function bme280_compensate_pressure_int64
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_103
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond217) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond217) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond217) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond217) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond217) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-4
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function bme280_compensate_humidity_int32
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_143
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-4
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function bme280_compensate_humidity_double
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_144
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond219) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-12
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function bme280_compensate_humidity_int32
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_127
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond220) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond220) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond220) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond220) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond220) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond220) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond220) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond220) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond220) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+-4
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function bme280_compensate_humidity_double
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_128
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond221) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond221) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond221) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond221) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond221) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond221) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond221) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond221) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond221) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond221) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond221) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-4
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function bme280_compensate_humidity_int32
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_125
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-4
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function bme280_compensate_humidity_double
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_126
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond223) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond223) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond223) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond223) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond223) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond223) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond223) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-12
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function bme280_compensate_pressure_double
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_151
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond224) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond224) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond224) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond224) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond224) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond224) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond224) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond224) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond224) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond224) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond224) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-4
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function bme280_compensate_pressure_int64
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_152
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond225) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond225) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond225) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond225) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond225) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond225) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond225) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond225) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond225) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond225) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond225) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-4
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function bme280_compensate_pressure_int32
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_99
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond226) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond226) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond226) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond226) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond226) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond226) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond226) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond226) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond226) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+-4
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function bme280_compensate_pressure_int64
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_100
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond227) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond227) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond227) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond227) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond227) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+-4
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function bme280_compensate_pressure_double
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_97
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-4
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function bme280_compensate_pressure_int64
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_98
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond229) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond229) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-4
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function bme280_compensate_pressure_int32
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_388
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond230) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond230) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond230) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond230) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond230) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond230) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond230) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond230) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond230) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond230) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond230) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+-8
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function bme280_compensate_pressure_int64
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_389
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond231) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond231) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond231) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond231) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond231) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond231) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond231) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond231) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond231) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond231) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond231) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond231) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+-8
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function bme280_get_oversamp_temperature
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_153
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-5
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function bme280_compute_wait_time
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_154
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-4
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function bme280_compute_wait_time
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_145
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-4
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function bme280_compute_wait_time
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_146
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+-4
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker236 Using cfiCommon1
          CFI (cfiPicker236) NoFunction
          CFI (cfiPicker236) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_374:
        RET
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiPicker236

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond237 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_299
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function bme280_set_oversamp_pressure
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_300
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+-2
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker239 Using cfiCommon1
          CFI (cfiPicker239) NoFunction
          CFI (cfiPicker239) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOV     A,R6
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiPicker239
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine111_0:
          CFI Block cfiCond240 Using cfiCommon0
          CFI Function bme280_set_oversamp_humidity
          CFI Conditional ??CrossCallReturnLabel_301
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+-2
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function bme280_set_oversamp_temperature
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+-2
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function bme280_set_oversamp_pressure
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_300
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-2
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker244 Using cfiCommon1
          CFI (cfiPicker244) NoFunction
          CFI (cfiPicker244) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_303:
        MOV     R1,#-0xc
        RET
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiPicker244
//  942 
//  943 /*!
//  944  *	@brief This API is used to get
//  945  *	the pressure oversampling setting in the register 0xF4
//  946  *	bits from 2 to 4
//  947  *
//  948  *	value              | Pressure oversampling
//  949  * --------------------|--------------------------
//  950  *	0x00               | Skipped
//  951  *	0x01               | BME280_OVERSAMP_1X
//  952  *	0x02               | BME280_OVERSAMP_2X
//  953  *	0x03               | BME280_OVERSAMP_4X
//  954  *	0x04               | BME280_OVERSAMP_8X
//  955  *	0x05,0x06 and 0x07 | BME280_OVERSAMP_16X
//  956  *
//  957  *
//  958  *  @param v_value_u8 : The value of pressure oversampling
//  959  *
//  960  *
//  961  *
//  962  *	@return results of bus communication function
//  963  *	@retval 0 -> Success
//  964  *	@retval -1 -> Error
//  965  *
//  966  *
//  967 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  968 BME280_RETURN_FUNCTION_TYPE bme280_get_oversamp_pressure(
bme280_get_oversamp_pressure:
          CFI Block cfiBlock245 Using cfiCommon0
          CFI Function bme280_get_oversamp_pressure
        CODE
//  969 u8 *v_value_u8)
//  970 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        LCALL   ?Subroutine9 & 0xFFFF
//  971 	/* used to return the communication result*/
//  972 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
//  973 	u8 v_data_u8 = BME280_INIT_VALUE;
//  974 	/* check the p_bme280 structure pointer as NULL*/
//  975 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_345:
        JNZ     ??bme280_get_oversamp_pressure_0
//  976 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_get_oversamp_pressure_1
//  977 		} else {
//  978 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
//  979 			p_bme280->dev_addr,
//  980 			BME280_CTRL_MEAS_REG_OVERSAMP_PRESSURE__REG,
//  981 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_get_oversamp_pressure_0:
        ; Setup parameters for indirect call
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_328:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     R1,A
//  982 			*v_value_u8 = BME280_GET_BITSLICE(
//  983 			v_data_u8,
//  984 			BME280_CTRL_MEAS_REG_OVERSAMP_PRESSURE);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        RRC     A
        RRC     A
        ANL     A,#0x3f
        LCALL   ?Subroutine75 & 0xFFFF
//  985 
//  986 			p_bme280->oversamp_pressure = *v_value_u8;
??CrossCallReturnLabel_215:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine65 & 0xFFFF
//  987 		}
??CrossCallReturnLabel_184:
        ADD     A,#0x28
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  988 	return com_rslt;
??bme280_get_oversamp_pressure_1:
        LJMP    ?Subroutine1 & 0xFFFF
//  989 }
          CFI EndBlock cfiBlock245

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond246 Using cfiCommon0
          CFI Function bme280_get_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_214
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function bme280_get_oversamp_pressure
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+-2
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function bme280_get_oversamp_humidity
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-2
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker249 Using cfiCommon1
          CFI (cfiPicker249) NoFunction
          CFI (cfiPicker249) Picker
        ANL     A,#0x7
        MOV     R0,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiPicker249
//  990 
//  991 /*!
//  992  *	@brief This API is used to set
//  993  *	the pressure oversampling setting in the register 0xF4
//  994  *	bits from 2 to 4
//  995  *
//  996  *	value              | Pressure oversampling
//  997  * --------------------|--------------------------
//  998  *	0x00               | Skipped
//  999  *	0x01               | BME280_OVERSAMP_1X
// 1000  *	0x02               | BME280_OVERSAMP_2X
// 1001  *	0x03               | BME280_OVERSAMP_4X
// 1002  *	0x04               | BME280_OVERSAMP_8X
// 1003  *	0x05,0x06 and 0x07 | BME280_OVERSAMP_16X
// 1004  *
// 1005  *
// 1006  *  @param v_value_u8 : The value of pressure oversampling
// 1007  *
// 1008  *
// 1009  *
// 1010  *	@return results of bus communication function
// 1011  *	@retval 0 -> Success
// 1012  *	@retval -1 -> Error
// 1013  *
// 1014  *
// 1015 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1016 BME280_RETURN_FUNCTION_TYPE bme280_set_oversamp_pressure(
bme280_set_oversamp_pressure:
          CFI Block cfiBlock250 Using cfiCommon0
          CFI Function bme280_set_oversamp_pressure
        CODE
// 1017 u8 v_value_u8)
// 1018 {
        FUNCALL bme280_set_oversamp_pressure, bme280_get_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_pressure, bme280_set_soft_rst
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_pressure, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_pressure, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_pressure, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_pressure, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_pressure, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_pressure, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     R6,A
// 1019 	/* used to return the communication result*/
// 1020 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1021 	u8 v_data_u8 = BME280_INIT_VALUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1022 	u8 v_prev_pow_mode_u8 = BME280_INIT_VALUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1023 	u8 v_pre_ctrl_hum_value_u8 = BME280_INIT_VALUE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1024 	u8 v_pre_config_value_u8 = BME280_INIT_VALUE;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine120_0 & 0xFFFF
// 1025 	/* check the p_bme280 structure pointer as NULL*/
// 1026 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_352:
        JNZ     ??bme280_set_oversamp_pressure_0
// 1027 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        LJMP    ??bme280_set_oversamp_pressure_1 & 0xFFFF
// 1028 		} else {
// 1029 			v_data_u8 = p_bme280->ctrl_meas_reg;
// 1030 			v_data_u8 =
// 1031 			BME280_SET_BITSLICE(v_data_u8,
// 1032 			BME280_CTRL_MEAS_REG_OVERSAMP_PRESSURE, v_value_u8);
??bme280_set_oversamp_pressure_0:
        MOV     A,R6
        RLC     A
        RLC     A
        ANL     A,#0xfc
        ANL     A,#0x1c
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_105:
        ANL     A,#0xe3
        LCALL   ?Subroutine76 & 0xFFFF
// 1033 			com_rslt = bme280_get_power_mode(&v_prev_pow_mode_u8);
??CrossCallReturnLabel_218:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_get_power_mode::?relay`; Banked call to: bme280_get_power_mode
// 1034 			if (v_prev_pow_mode_u8 != BME280_SLEEP_MODE) {
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JZ      ??bme280_set_oversamp_pressure_2
// 1035 				com_rslt += bme280_set_soft_rst();
        ; Setup parameters for call to function bme280_set_soft_rst
        LCALL   `??bme280_set_soft_rst::?relay`; Banked call to: bme280_set_soft_rst
// 1036 				p_bme280->delay_msec(BME280_3MS_DELAY);
        ; Setup parameters for indirect call
        MOV     DPTR,#__Constant_3
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_44:
        LCALL   ?CALL_IND
// 1037 				/* write previous value of
// 1038 				configuration register*/
// 1039 				v_pre_config_value_u8 = p_bme280->config_reg;
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_78:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
// 1040 				com_rslt = bme280_write_register(
// 1041 					BME280_CONFIG_REG,
// 1042 				&v_pre_config_value_u8,
// 1043 				BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_29:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xb
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
// 1044 				/* write previous value of
// 1045 				humidity oversampling*/
// 1046 				v_pre_ctrl_hum_value_u8 =
// 1047 				p_bme280->ctrl_hum_reg;
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_365:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1048 				com_rslt += bme280_write_register(
// 1049 					BME280_CTRL_HUMIDITY_REG,
// 1050 				&v_pre_ctrl_hum_value_u8,
// 1051 				BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xe
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
// 1052 				/* write previous and updated value of
// 1053 				control measurement register*/
// 1054 				bme280_write_register(
// 1055 					BME280_CTRL_MEAS_REG,
// 1056 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xc
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        SJMP    ??bme280_set_oversamp_pressure_3
// 1057 			} else {
// 1058 				com_rslt = p_bme280->BME280_BUS_WRITE_FUNC(
// 1059 				p_bme280->dev_addr,
// 1060 				BME280_CTRL_MEAS_REG_OVERSAMP_PRESSURE__REG,
// 1061 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_set_oversamp_pressure_2:
        ; Setup parameters for indirect call
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0xc
        LCALL   ??Subroutine112_0 & 0xFFFF
// 1062 			}
??CrossCallReturnLabel_308:
        LCALL   ?CALL_IND
// 1063 				p_bme280->oversamp_pressure = v_value_u8;
??bme280_set_oversamp_pressure_3:
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_185:
        ADD     A,#0x28
        LCALL   ?Subroutine13 & 0xFFFF
// 1064 				/* read the control measurement register value*/
// 1065 				com_rslt = bme280_read_register(
// 1066 					BME280_CTRL_MEAS_REG,
// 1067 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_300:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R7,A
// 1068 				p_bme280->ctrl_meas_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_83:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine11 & 0xFFFF
// 1069 				/* read the control humidity register value*/
// 1070 				com_rslt += bme280_read_register(
// 1071 					BME280_CTRL_HUMIDITY_REG,
// 1072 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_9:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V0,A
// 1073 				p_bme280->ctrl_hum_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_60:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine10 & 0xFFFF
// 1074 				/* read the control
// 1075 				configuration register value*/
// 1076 				com_rslt += bme280_read_register(
// 1077 					BME280_CONFIG_REG,
// 1078 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_1:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R0,A
// 1079 				p_bme280->config_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine41 & 0xFFFF
// 1080 		}
??CrossCallReturnLabel_111:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1081 	return com_rslt;
        MOV     A,R7
        ADD     A,?V0
        ADD     A,R0
        MOV     R1,A
??bme280_set_oversamp_pressure_1:
        LJMP    ?Subroutine8 & 0xFFFF
// 1082 }
          CFI EndBlock cfiBlock250

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond251 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_217
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function bme280_set_oversamp_pressure
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-2
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker253 Using cfiCommon1
          CFI (cfiPicker253) NoFunction
          CFI (cfiPicker253) Picker
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_272:
        ; Setup parameters for call to function bme280_get_power_mode
        ; Setup parameters for call to function bme280_get_power_mode
        MOV     A,#0x3
        RET
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiPicker253

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond254 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function bme280_set_oversamp_pressure
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-2
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function bme280_set_power_mode
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-2
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker257 Using cfiCommon1
          CFI (cfiPicker257) NoFunction
          CFI (cfiPicker257) Picker
        MOV     R0,A
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_258:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiPicker257
// 1083 
// 1084 /*!
// 1085  *	@brief This API is used to get
// 1086  *	the humidity oversampling setting in the register 0xF2
// 1087  *	bits from 0 to 2
// 1088  *
// 1089  *	value               | Humidity oversampling
// 1090  * ---------------------|-------------------------
// 1091  *	0x00                | Skipped
// 1092  *	0x01                | BME280_OVERSAMP_1X
// 1093  *	0x02                | BME280_OVERSAMP_2X
// 1094  *	0x03                | BME280_OVERSAMP_4X
// 1095  *	0x04                | BME280_OVERSAMP_8X
// 1096  *	0x05,0x06 and 0x07  | BME280_OVERSAMP_16X
// 1097  *
// 1098  *
// 1099  *  @param  v_value_u8 : The value of humidity over sampling
// 1100  *
// 1101  *
// 1102  *
// 1103  *	@return results of bus communication function
// 1104  *	@retval 0 -> Success
// 1105  *	@retval -1 -> Error
// 1106  *
// 1107  *
// 1108 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1109 BME280_RETURN_FUNCTION_TYPE bme280_get_oversamp_humidity(
bme280_get_oversamp_humidity:
          CFI Block cfiBlock258 Using cfiCommon0
          CFI Function bme280_get_oversamp_humidity
        CODE
// 1110 u8 *v_value_u8)
// 1111 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        LCALL   ?Subroutine9 & 0xFFFF
// 1112 	/* used to return the communication result*/
// 1113 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1114 	u8 v_data_u8 = BME280_INIT_VALUE;
// 1115 	/* check the p_bme280 structure pointer as NULL*/
// 1116 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_346:
        JNZ     ??bme280_get_oversamp_humidity_0
// 1117 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_get_oversamp_humidity_1
// 1118 		} else {
// 1119 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
// 1120 			p_bme280->dev_addr,
// 1121 			BME280_CTRL_HUMIDITY_REG_OVERSAMP_HUMIDITY__REG,
// 1122 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_get_oversamp_humidity_0:
        ; Setup parameters for indirect call
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0xe
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_322:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     R1,A
// 1123 			*v_value_u8 = BME280_GET_BITSLICE(
// 1124 			v_data_u8,
// 1125 			BME280_CTRL_HUMIDITY_REG_OVERSAMP_HUMIDITY);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        LCALL   ?Subroutine75 & 0xFFFF
// 1126 
// 1127 			p_bme280->oversamp_humidity = *v_value_u8;
??CrossCallReturnLabel_216:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine58 & 0xFFFF
// 1128 		}
??CrossCallReturnLabel_155:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1129 	return com_rslt;
??bme280_get_oversamp_humidity_1:
        LJMP    ?Subroutine1 & 0xFFFF
// 1130 }
          CFI EndBlock cfiBlock258
// 1131 
// 1132 /*!
// 1133  *	@brief This API is used to set
// 1134  *	the humidity oversampling setting in the register 0xF2
// 1135  *	bits from 0 to 2
// 1136  *
// 1137  *	value               | Humidity oversampling
// 1138  * ---------------------|-------------------------
// 1139  *	0x00                | Skipped
// 1140  *	0x01                | BME280_OVERSAMP_1X
// 1141  *	0x02                | BME280_OVERSAMP_2X
// 1142  *	0x03                | BME280_OVERSAMP_4X
// 1143  *	0x04                | BME280_OVERSAMP_8X
// 1144  *	0x05,0x06 and 0x07  | BME280_OVERSAMP_16X
// 1145  *
// 1146  *
// 1147  *  @param  v_value_u8 : The value of humidity over sampling
// 1148  *
// 1149  *
// 1150  *
// 1151  * @note The "BME280_CTRL_HUMIDITY_REG_OVERSAMP_HUMIDITY"
// 1152  * register sets the humidity
// 1153  * data acquisition options of the device.
// 1154  * @note changes to this registers only become
// 1155  * effective after a write operation to
// 1156  * "BME280_CTRL_MEAS_REG" register.
// 1157  * @note In the code automated reading and writing of
// 1158  *	"BME280_CTRL_HUMIDITY_REG_OVERSAMP_HUMIDITY"
// 1159  * @note register first set the
// 1160  * "BME280_CTRL_HUMIDITY_REG_OVERSAMP_HUMIDITY"
// 1161  *  and then read and write
// 1162  *  the "BME280_CTRL_MEAS_REG" register in the function.
// 1163  *
// 1164  *
// 1165  *	@return results of bus communication function
// 1166  *	@retval 0 -> Success
// 1167  *	@retval -1 -> Error
// 1168  *
// 1169  *
// 1170 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1171 BME280_RETURN_FUNCTION_TYPE bme280_set_oversamp_humidity(
bme280_set_oversamp_humidity:
          CFI Block cfiBlock259 Using cfiCommon0
          CFI Function bme280_set_oversamp_humidity
        CODE
// 1172 u8 v_value_u8)
// 1173 {
        FUNCALL bme280_set_oversamp_humidity, bme280_get_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_humidity, bme280_set_soft_rst
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_humidity, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_humidity, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_humidity, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_humidity, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_humidity, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_humidity, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_oversamp_humidity, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R7,A
// 1174 	/* used to return the communication result*/
// 1175 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1176 	u8 v_data_u8 = BME280_INIT_VALUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1177 	u8 pre_ctrl_meas_value = BME280_INIT_VALUE;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1178 	u8 v_pre_config_value_u8 = BME280_INIT_VALUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1179 	u8 v_prev_pow_mode_u8 = BME280_INIT_VALUE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine120_0 & 0xFFFF
// 1180 	/* check the p_bme280 structure pointer as NULL*/
// 1181 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_353:
        JNZ     ??bme280_set_oversamp_humidity_0
// 1182 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        LJMP    ??bme280_set_oversamp_humidity_1 & 0xFFFF
// 1183 		} else {
// 1184 			/* write humidity oversampling*/
// 1185 			v_data_u8 = p_bme280->ctrl_hum_reg;
// 1186 			v_data_u8 =
// 1187 			BME280_SET_BITSLICE(v_data_u8,
// 1188 			BME280_CTRL_HUMIDITY_REG_OVERSAMP_HUMIDITY, v_value_u8);
??bme280_set_oversamp_humidity_0:
        MOV     A,#0x7
        ANL     A,R7
        MOV     R0,A
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R1
        ADD     A,#0x2a
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        ANL     A,#0xf8
        LCALL   ?Subroutine74 & 0xFFFF
// 1189 			com_rslt = bme280_get_power_mode(&v_prev_pow_mode_u8);
??CrossCallReturnLabel_210:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_get_power_mode::?relay`; Banked call to: bme280_get_power_mode
        MOV     A,R1
        MOV     R6,A
// 1190 			if (v_prev_pow_mode_u8 != BME280_SLEEP_MODE) {
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JZ      ??bme280_set_oversamp_humidity_2
// 1191 				com_rslt += bme280_set_soft_rst();
        ; Setup parameters for call to function bme280_set_soft_rst
        LCALL   `??bme280_set_soft_rst::?relay`; Banked call to: bme280_set_soft_rst
        MOV     A,R1
        MOV     ?V0,A
// 1192 				p_bme280->delay_msec(BME280_3MS_DELAY);
        ; Setup parameters for indirect call
        MOV     DPTR,#__Constant_3
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_45:
        LCALL   ?CALL_IND
// 1193 				/* write previous value of
// 1194 				configuration register*/
// 1195 				v_pre_config_value_u8 = p_bme280->config_reg;
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_79:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine16 & 0xFFFF
// 1196 				com_rslt += bme280_write_register(
// 1197 					BME280_CONFIG_REG,
// 1198 				&v_pre_config_value_u8,
// 1199 				BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_19:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xb
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        MOV     A,R1
        MOV     ?V1,A
// 1200 				/* write the value of control humidity*/
// 1201 				com_rslt += bme280_write_register(
// 1202 					BME280_CTRL_HUMIDITY_REG,
// 1203 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xe
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        LCALL   ?Subroutine31 & 0xFFFF
// 1204 				/* write previous value of
// 1205 				control measurement register*/
// 1206 				pre_ctrl_meas_value =
// 1207 				p_bme280->ctrl_meas_reg;
// 1208 				com_rslt += bme280_write_register(
// 1209 					BME280_CTRL_MEAS_REG,
// 1210 				&pre_ctrl_meas_value,
// 1211 				BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1212 			} else {
??CrossCallReturnLabel_337:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_30:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xc
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        MOV     A,?V0
        ADD     A,?V1
        ADD     A,?V2
        ADD     A,R1
        SJMP    ??bme280_set_oversamp_humidity_3
// 1213 				com_rslt +=
// 1214 				p_bme280->BME280_BUS_WRITE_FUNC(
// 1215 				p_bme280->dev_addr,
// 1216 				BME280_CTRL_HUMIDITY_REG_OVERSAMP_HUMIDITY__REG,
// 1217 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_set_oversamp_humidity_2:
        ; Setup parameters for indirect call
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0xe
        LCALL   ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_309:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     ?V0,A
// 1218 				/* Control humidity write will effective only
// 1219 				after the control measurement register*/
// 1220 				pre_ctrl_meas_value =
// 1221 				p_bme280->ctrl_meas_reg;
        LCALL   ??Subroutine119_0 & 0xFFFF
// 1222 				com_rslt += bme280_write_register(
// 1223 					BME280_CTRL_MEAS_REG,
// 1224 				&pre_ctrl_meas_value,
// 1225 				BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1226 			}
??CrossCallReturnLabel_341:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_31:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xc
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        MOV     A,R1
        ADD     A,?V0
??bme280_set_oversamp_humidity_3:
        ADD     A,R6
        MOV     R6,A
// 1227 			p_bme280->oversamp_humidity = v_value_u8;
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_156:
        MOV     A,R7
        LCALL   ??Subroutine111_0 & 0xFFFF
// 1228 			/* read the control measurement register value*/
// 1229 			com_rslt += bme280_read_register(BME280_CTRL_MEAS_REG,
// 1230 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_301:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V0,A
// 1231 			p_bme280->ctrl_meas_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_84:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine11 & 0xFFFF
// 1232 
// 1233 			/* read the control humidity register value*/
// 1234 			com_rslt += bme280_read_register(
// 1235 			BME280_CTRL_HUMIDITY_REG,
// 1236 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_10:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V1,A
// 1237 			p_bme280->ctrl_hum_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_61:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine10 & 0xFFFF
// 1238 			/* read the control configuration register value*/
// 1239 			com_rslt += bme280_read_register(BME280_CONFIG_REG,
// 1240 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_2:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R0,A
// 1241 			p_bme280->config_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine41 & 0xFFFF
// 1242 			
// 1243 		}
??CrossCallReturnLabel_112:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1244 	return com_rslt;
        MOV     A,R6
        ADD     A,?V0
        ADD     A,?V1
        ADD     A,R0
        MOV     R1,A
??bme280_set_oversamp_humidity_1:
        LJMP    ?Subroutine6 & 0xFFFF
// 1245 }
          CFI EndBlock cfiBlock259

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond260 Using cfiCommon0
          CFI Function bme280_get_oversamp_humidity
          CFI Conditional ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function bme280_set_oversamp_humidity
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+-2
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker262 Using cfiCommon1
          CFI (cfiPicker262) NoFunction
          CFI (cfiPicker262) Picker
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_237:
        RET
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiPicker262

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond263 Using cfiCommon0
          CFI Function bme280_get_oversamp_humidity
          CFI Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-5
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function bme280_set_oversamp_humidity
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_156
          CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond264) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond264) CFA_SP SP+-4
          CFI (cfiCond264) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function bme280_compute_wait_time
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_147
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-4
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function bme280_compute_wait_time
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_148
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-4
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker267 Using cfiCommon1
          CFI (cfiPicker267) NoFunction
          CFI (cfiPicker267) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_372:
        ADD     A,#0x29
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiPicker267

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond268 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function bme280_set_oversamp_pressure
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-2
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function bme280_set_oversamp_humidity
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+-2
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function bme280_set_power_mode
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-2
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-2
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker273 Using cfiCommon1
          CFI (cfiPicker273) NoFunction
          CFI (cfiPicker273) Picker
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_238:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiPicker273
// 1246 
// 1247 /*!
// 1248  *	@brief This API used to get the
// 1249  *	Operational Mode from the sensor in the register 0xF4 bit 0 and 1
// 1250  *
// 1251  *
// 1252  *
// 1253  *	@param v_power_mode_u8 : The value of power mode
// 1254  *  value           |    mode
// 1255  * -----------------|------------------
// 1256  *	0x00            | BME280_SLEEP_MODE
// 1257  *	0x01 and 0x02   | BME280_FORCED_MODE
// 1258  *	0x03            | BME280_NORMAL_MODE
// 1259  *
// 1260  *	@return results of bus communication function
// 1261  *	@retval 0 -> Success
// 1262  *	@retval -1 -> Error
// 1263  *
// 1264  *
// 1265 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1266 BME280_RETURN_FUNCTION_TYPE bme280_get_power_mode(u8 *v_power_mode_u8)
bme280_get_power_mode:
          CFI Block cfiBlock274 Using cfiCommon0
          CFI Function bme280_get_power_mode
        CODE
// 1267 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        LCALL   ?Subroutine9 & 0xFFFF
// 1268 	/* used to return the communication result*/
// 1269 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1270 	u8 v_mode_u8r = BME280_INIT_VALUE;
// 1271 	/* check the p_bme280 structure pointer as NULL*/
// 1272 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_347:
        JNZ     ??bme280_get_power_mode_0
// 1273 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_get_power_mode_1
// 1274 		} else {
// 1275 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
// 1276 			p_bme280->dev_addr,
// 1277 			BME280_CTRL_MEAS_REG_POWER_MODE__REG,
// 1278 			&v_mode_u8r, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_get_power_mode_0:
        ; Setup parameters for indirect call
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_329:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     R1,A
// 1279 			*v_power_mode_u8 = BME280_GET_BITSLICE(v_mode_u8r,
// 1280 			BME280_CTRL_MEAS_REG_POWER_MODE);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ANL     A,#0x3
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
// 1281 		}
// 1282 	return com_rslt;
??bme280_get_power_mode_1:
        LJMP    ?Subroutine1 & 0xFFFF
// 1283 }
          CFI EndBlock cfiBlock274
// 1284 
// 1285 /*!
// 1286  *	@brief This API used to set the
// 1287  *	Operational Mode from the sensor in the register 0xF4 bit 0 and 1
// 1288  *
// 1289  *
// 1290  *
// 1291  *	@param v_power_mode_u8 : The value of power mode
// 1292  *  value           |    mode
// 1293  * -----------------|------------------
// 1294  *	0x00            | BME280_SLEEP_MODE
// 1295  *	0x01 and 0x02   | BME280_FORCED_MODE
// 1296  *	0x03            | BME280_NORMAL_MODE
// 1297  *
// 1298  *	@return results of bus communication function
// 1299  *	@retval 0 -> Success
// 1300  *	@retval -1 -> Error
// 1301  *
// 1302  *
// 1303 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1304 BME280_RETURN_FUNCTION_TYPE bme280_set_power_mode(u8 v_power_mode_u8)
bme280_set_power_mode:
          CFI Block cfiBlock275 Using cfiCommon0
          CFI Function bme280_set_power_mode
        CODE
// 1305 {
        FUNCALL bme280_set_power_mode, bme280_get_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_power_mode, bme280_set_soft_rst
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_power_mode, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_power_mode, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_power_mode, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_power_mode, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_power_mode, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_power_mode, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,R1
        MOV     R7,A
// 1306 	/* used to return the communication result*/
// 1307 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1308 	u8 v_mode_u8r = BME280_INIT_VALUE;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1309 	u8 v_prev_pow_mode_u8 = BME280_INIT_VALUE;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1310 	u8 v_pre_ctrl_hum_value_u8 = BME280_INIT_VALUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1311 	u8 v_pre_config_value_u8 = BME280_INIT_VALUE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1312 	u8 v_data_u8 = BME280_INIT_VALUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine121_0 & 0xFFFF
// 1313 	/* check the p_bme280 structure pointer as NULL*/
// 1314 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_359:
        JNZ     ??bme280_set_power_mode_0
// 1315 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        LJMP    ??bme280_set_power_mode_1 & 0xFFFF
// 1316 		} else {
// 1317 			if (v_power_mode_u8 <= BME280_NORMAL_MODE) {
??bme280_set_power_mode_0:
        MOV     A,R7
        CLR     C
        SUBB    A,#0x4
        JC      $+5
        LJMP    ??bme280_set_power_mode_2 & 0xFFFF
// 1318 				v_mode_u8r = p_bme280->ctrl_meas_reg;
// 1319 				v_mode_u8r =
// 1320 				BME280_SET_BITSLICE(v_mode_u8r,
// 1321 				BME280_CTRL_MEAS_REG_POWER_MODE,
// 1322 				v_power_mode_u8);
        MOV     A,#0x3
        ANL     A,R7
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_106:
        ANL     A,#0xfc
        ORL     A,R0
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1323 				com_rslt = bme280_get_power_mode(
// 1324 					&v_prev_pow_mode_u8);
        ; Setup parameters for call to function bme280_get_power_mode
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_get_power_mode::?relay`; Banked call to: bme280_get_power_mode
// 1325 				if (v_prev_pow_mode_u8 != BME280_SLEEP_MODE) {
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JZ      ??bme280_set_power_mode_3
// 1326 					com_rslt += bme280_set_soft_rst();
        ; Setup parameters for call to function bme280_set_soft_rst
        LCALL   `??bme280_set_soft_rst::?relay`; Banked call to: bme280_set_soft_rst
// 1327 					p_bme280->delay_msec(BME280_3MS_DELAY);
        ; Setup parameters for indirect call
        MOV     DPTR,#__Constant_3
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_46:
        LCALL   ?CALL_IND
// 1328 					/* write previous value of
// 1329 					configuration register*/
// 1330 					v_pre_config_value_u8 =
// 1331 					p_bme280->config_reg;
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_80:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1332 					com_rslt = bme280_write_register(
// 1333 						BME280_CONFIG_REG,
// 1334 					&v_pre_config_value_u8,
// 1335 					BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xb
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
// 1336 					/* write previous value of
// 1337 					humidity oversampling*/
// 1338 					v_pre_ctrl_hum_value_u8 =
// 1339 					p_bme280->ctrl_hum_reg;
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_366:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine16 & 0xFFFF
// 1340 					com_rslt += bme280_write_register(
// 1341 					BME280_CTRL_HUMIDITY_REG,
// 1342 					&v_pre_ctrl_hum_value_u8,
// 1343 					BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_20:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xe
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
// 1344 					/* write previous and updated value of
// 1345 					control measurement register*/
// 1346 					com_rslt += bme280_write_register(
// 1347 					BME280_CTRL_MEAS_REG,
// 1348 					&v_mode_u8r,
// 1349 					BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     A,R4
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xc
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        SJMP    ??bme280_set_power_mode_4
// 1350 				} else {
// 1351 					com_rslt =
// 1352 					p_bme280->BME280_BUS_WRITE_FUNC(
// 1353 					p_bme280->dev_addr,
// 1354 					BME280_CTRL_MEAS_REG_POWER_MODE__REG,
// 1355 					&v_mode_u8r,
// 1356 					BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_set_power_mode_3:
        ; Setup parameters for indirect call
        MOV     R3,#0x1
        MOV     A,R3
        LCALL   ?XSTACK_DISP102_8
        MOV     R2,#-0xc
        LCALL   ??Subroutine112_0 & 0xFFFF
// 1357 				}
??CrossCallReturnLabel_310:
        LCALL   ?CALL_IND
// 1358 				/* read the control measurement register value*/
// 1359 				com_rslt = bme280_read_register(
// 1360 					BME280_CTRL_MEAS_REG,
// 1361 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_set_power_mode_4:
        ; Setup parameters for call to function bme280_read_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xc
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R6,A
// 1362 				p_bme280->ctrl_meas_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_85:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine11 & 0xFFFF
// 1363 				/* read the control humidity register value*/
// 1364 				com_rslt += bme280_read_register(
// 1365 					BME280_CTRL_HUMIDITY_REG,
// 1366 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_11:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V0,A
// 1367 				p_bme280->ctrl_hum_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_62:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine10 & 0xFFFF
// 1368 				/* read the config register value*/
// 1369 				com_rslt += bme280_read_register(
// 1370 					BME280_CONFIG_REG,
// 1371 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_3:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        ADD     A,?V0
        ADD     A,R6
        MOV     R6,A
// 1372 				p_bme280->config_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine59 & 0xFFFF
// 1373 			} else {
??CrossCallReturnLabel_157:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        SJMP    ??bme280_set_power_mode_5
// 1374 			com_rslt = E_BME280_OUT_OF_RANGE;
??bme280_set_power_mode_2:
        MOV     R6,#-0x2
// 1375 			}
// 1376 		}
// 1377 	return com_rslt;
??bme280_set_power_mode_5:
        MOV     A,R6
        MOV     R1,A
??bme280_set_power_mode_1:
        MOV     A,#0x5
        LJMP    ??Subroutine116_0 & 0xFFFF
// 1378 }
          CFI EndBlock cfiBlock275

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond276 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function bme280_set_oversamp_pressure
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function bme280_set_oversamp_humidity
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function bme280_set_power_mode
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function bme280_set_spi3
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function bme280_set_filter
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function bme280_set_standby_durn
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker283 Using cfiCommon1
          CFI (cfiPicker283) NoFunction
          CFI (cfiPicker283) Picker
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_342:
        RET
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiPicker283

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond284 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-5
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function bme280_set_oversamp_pressure
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_83
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-5
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function bme280_set_oversamp_humidity
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_84
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-5
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function bme280_set_power_mode
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_85
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-5
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function bme280_set_spi3
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_86
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-5
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function bme280_set_filter
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_87
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-5
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function bme280_set_standby_durn
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_88
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-5
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function bme280_set_oversamp_humidity
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_337
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-4
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function bme280_set_spi3
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_338
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-4
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function bme280_set_filter
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_339
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-4
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function bme280_set_standby_durn
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_340
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-4
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function bme280_set_oversamp_humidity
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_341
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-4
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker296 Using cfiCommon1
          CFI (cfiPicker296) NoFunction
          CFI (cfiPicker296) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_376:
        ADD     A,#0x2b
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiPicker296

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond297 Using cfiCommon0
          CFI Function bme280_init
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function bme280_set_oversamp_temperature
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-2
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function bme280_set_oversamp_pressure
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-2
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function bme280_set_oversamp_humidity
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-2
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function bme280_set_power_mode
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-2
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function bme280_set_spi3
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-2
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function bme280_set_filter
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-2
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function bme280_set_standby_durn
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+-2
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-2
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-2
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker307 Using cfiCommon1
          CFI (cfiPicker307) NoFunction
          CFI (cfiPicker307) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_240:
        ADD     A,#0x31
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_334:
        RET
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiPicker307

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond308 Using cfiCommon0
          CFI Function bme280_set_spi3
          CFI Conditional ??CrossCallReturnLabel_312
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function bme280_set_filter
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-2
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function bme280_set_standby_durn
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-2
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker311 Using cfiCommon1
          CFI (cfiPicker311) NoFunction
          CFI (cfiPicker311) Picker
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0xb
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiPicker311
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine112_0:
          CFI Block cfiCond312 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_307
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function bme280_set_oversamp_pressure
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-2
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function bme280_set_oversamp_humidity
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-2
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function bme280_set_power_mode
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-2
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function bme280_write_register
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+-2
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function bme280_set_spi3
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-2
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function bme280_set_filter
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-2
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function bme280_set_standby_durn
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-2
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker320 Using cfiCommon1
          CFI (cfiPicker320) NoFunction
          CFI (cfiPicker320) Picker
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiPicker320
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine113_0:
          CFI Block cfiCond321 Using cfiCommon0
          CFI Function bme280_set_soft_rst
          CFI Conditional ??CrossCallReturnLabel_306
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-7
          CFI CFA_XSP16 add(XSP16, 1)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function bme280_set_oversamp_temperature
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+-2
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond323 Using cfiCommon0
          CFI (cfiCond323) Function bme280_set_oversamp_pressure
          CFI (cfiCond323) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond323) CFA_SP SP+-2
          CFI (cfiCond323) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond324 Using cfiCommon0
          CFI (cfiCond324) Function bme280_set_oversamp_humidity
          CFI (cfiCond324) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond324) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond324) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond324) CFA_SP SP+-2
          CFI (cfiCond324) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function bme280_set_power_mode
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-2
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function bme280_write_register
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-2
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function bme280_set_spi3
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_SP SP+-2
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function bme280_set_filter
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+-2
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function bme280_set_standby_durn
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond329) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond329) CFA_SP SP+-2
          CFI (cfiCond329) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker330 Using cfiCommon1
          CFI (cfiPicker330) NoFunction
          CFI (cfiPicker330) Picker
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_330:
        ADD     A,#0x2d
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_335:
        RET
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiCond323
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiPicker330

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond331 Using cfiCommon0
          CFI Function bme280_init
          CFI Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function bme280_set_oversamp_temperature
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_43
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-4
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function bme280_set_oversamp_pressure
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_44
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-4
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function bme280_set_oversamp_humidity
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_45
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-4
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function bme280_set_power_mode
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_46
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-4
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function bme280_set_spi3
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_47
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-4
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function bme280_set_filter
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_48
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-4
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function bme280_set_standby_durn
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_49
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-4
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_50
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-4
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_51
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+-4
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function bme280_set_spi3
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_312
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-4
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function bme280_set_filter
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_313
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-4
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function bme280_set_standby_durn
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_314
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-4
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function bme280_set_oversamp_temperature
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_307
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-4
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function bme280_set_oversamp_pressure
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_308
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-4
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function bme280_set_oversamp_humidity
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_309
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-4
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function bme280_set_power_mode
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_310
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+-4
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function bme280_write_register
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_311
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+-4
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function bme280_set_soft_rst
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_306
          CFI (cfiCond349) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond349) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond349) CFA_SP SP+-9
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 1)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function bme280_get_oversamp_temperature
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_327
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-4
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function bme280_get_oversamp_pressure
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_328
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-4
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function bme280_get_power_mode
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_329
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+-4
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function bme280_init
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_315
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+-4
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function bme280_read_uncomp_temperature
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_316
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+-4
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function bme280_read_uncomp_pressure
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_317
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-4
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function bme280_read_uncomp_humidity
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_318
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-4
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_319
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-4
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function bme280_get_calib_param
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_320
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-4
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function bme280_get_calib_param
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_321
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+-4
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function bme280_get_oversamp_humidity
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_322
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-4
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function bme280_get_spi3
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_323
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-4
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function bme280_get_filter
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_324
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-4
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function bme280_get_standby_durn
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_325
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+-4
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function bme280_read_register
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_326
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-4
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker365 Using cfiCommon1
          CFI (cfiPicker365) NoFunction
          CFI (cfiPicker365) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiPicker365
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine114_0:
          CFI Block cfiCond366 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32
          CFI Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_279
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function bme280_compensate_temperature_double
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_280
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond367) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-4
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function bme280_compensate_temperature_double
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_281
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond368) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond368) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond368) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond368) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond368) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond368) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-4
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_277
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-4
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function bme280_read_pressure_temperature_humidity
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_278
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-4
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function bme280_compensate_temperature_int32
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_134
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-4
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function bme280_compensate_temperature_int32
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_135
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-4
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function bme280_compensate_temperature_double
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_136
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-4
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function bme280_init
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_42
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-4
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function bme280_set_oversamp_temperature
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_43
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-4
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function bme280_set_oversamp_pressure
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_44
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_SP SP+-4
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function bme280_set_oversamp_humidity
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_45
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-4
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function bme280_set_power_mode
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_46
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-4
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function bme280_set_spi3
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_47
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-4
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function bme280_set_filter
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_48
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-4
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function bme280_set_standby_durn
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_49
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-4
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_50
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+-4
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_334, ??CrossCallReturnLabel_51
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-4
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function bme280_set_spi3
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_312
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-4
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function bme280_set_filter
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_313
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-4
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function bme280_set_standby_durn
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_314
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-4
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function bme280_set_oversamp_temperature
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_307
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+-4
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function bme280_set_oversamp_pressure
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_308
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+-4
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function bme280_set_oversamp_humidity
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_309
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-4
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function bme280_set_power_mode
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_310
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+-4
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function bme280_write_register
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_311
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+-4
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function bme280_set_soft_rst
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_306
          CFI (cfiCond392) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond392) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond392) CFA_SP SP+-9
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 1)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function bme280_get_oversamp_temperature
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_327
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+-4
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function bme280_get_oversamp_pressure
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_328
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-4
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function bme280_get_power_mode
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_329
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+-4
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function bme280_init
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_315
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+-4
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function bme280_read_uncomp_temperature
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_316
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+-4
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function bme280_read_uncomp_pressure
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_317
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-4
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function bme280_read_uncomp_humidity
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_318
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-4
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_319
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond400) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond400) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond400) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-4
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function bme280_get_calib_param
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_320
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+-4
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function bme280_get_calib_param
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_321
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-4
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function bme280_get_oversamp_humidity
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_322
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-4
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function bme280_get_spi3
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_323
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+-4
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function bme280_get_filter
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_324
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+-4
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function bme280_get_standby_durn
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_325
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-4
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function bme280_read_register
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_326
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+-4
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker408 Using cfiCommon1
          CFI (cfiPicker408) NoFunction
          CFI (cfiPicker408) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiPicker408

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond409 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function bme280_set_oversamp_pressure
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-2
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function bme280_set_oversamp_humidity
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+-2
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function bme280_set_power_mode
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+-2
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function bme280_set_spi3
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function bme280_set_filter
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+-2
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function bme280_set_standby_durn
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+-2
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker416 Using cfiCommon1
          CFI (cfiPicker416) NoFunction
          CFI (cfiPicker416) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_304:
        MOV     R1,#-0xe
        RET
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiPicker416

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond417 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_299
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function bme280_set_oversamp_pressure
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_300
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+-4
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function bme280_set_oversamp_humidity
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_301
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-4
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_302
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-4
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function bme280_set_oversamp_temperature
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_8
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-4
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function bme280_set_oversamp_pressure
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_9
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+-4
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function bme280_set_oversamp_humidity
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_10
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-4
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function bme280_set_power_mode
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_11
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-4
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function bme280_set_spi3
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_12
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+-4
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function bme280_set_filter
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_13
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-4
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function bme280_set_standby_durn
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_14
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-4
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function bme280_set_oversamp_temperature
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_0
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-4
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function bme280_set_oversamp_pressure
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_1
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+-4
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function bme280_set_oversamp_humidity
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_2
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-4
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function bme280_set_power_mode
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_3
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-4
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function bme280_set_spi3
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_4
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-4
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function bme280_set_filter
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_5
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-4
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function bme280_set_standby_durn
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_6
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-4
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_7
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-4
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker436 Using cfiCommon1
          CFI (cfiPicker436) NoFunction
          CFI (cfiPicker436) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        ; Setup parameters for call to function bme280_read_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        RET
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiPicker436
// 1379 
// 1380 /*!
// 1381  * @brief Used to reset the sensor
// 1382  * The value 0xB6 is written to the 0xE0
// 1383  * register the device is reset using the
// 1384  * complete power-on-reset procedure.
// 1385  * @note Soft reset can be easily set using bme280_set_softreset().
// 1386  * @note Usage Hint : bme280_set_softreset()
// 1387  *
// 1388  *
// 1389  *	@return results of bus communication function
// 1390  *	@retval 0 -> Success
// 1391  *	@retval -1 -> Error
// 1392  *
// 1393  *
// 1394 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1395 BME280_RETURN_FUNCTION_TYPE bme280_set_soft_rst(void)
bme280_set_soft_rst:
          CFI Block cfiBlock437 Using cfiCommon0
          CFI Function bme280_set_soft_rst
        CODE
// 1396 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 1)
// 1397 	/* used to return the communication result*/
// 1398 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1399 	u8 v_data_u8 = BME280_SOFT_RESET_CODE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x4a
        LCALL   ??Subroutine121_0 & 0xFFFF
// 1400 	/* check the p_bme280 structure pointer as NULL*/
// 1401 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_360:
        JNZ     ??bme280_set_soft_rst_0
// 1402 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_set_soft_rst_1
// 1403 		} else {
// 1404 			com_rslt = p_bme280->BME280_BUS_WRITE_FUNC(
// 1405 			p_bme280->dev_addr,
// 1406 			BME280_RST_REG, &v_data_u8,
// 1407 			BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1408 		}
// 1409 	return com_rslt;
??bme280_set_soft_rst_0:
        ; Setup parameters for indirect call
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0x20
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_306:
        LCALL   ?CALL_IND
??bme280_set_soft_rst_1:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        LJMP    ?Subroutine0 & 0xFFFF
// 1410 }
          CFI EndBlock cfiBlock437
// 1411 
// 1412 /*!
// 1413  *	@brief This API used to get the sensor
// 1414  *	SPI mode(communication type) in the register 0xF5 bit 0
// 1415  *
// 1416  *
// 1417  *
// 1418  *	@param v_enable_disable_u8 : The value of SPI enable
// 1419  *	value  | Description
// 1420  * --------|--------------
// 1421  *   0     | Disable
// 1422  *   1     | Enable
// 1423  *
// 1424  *
// 1425  *
// 1426  *	@return results of bus communication function
// 1427  *	@retval 0 -> Success
// 1428  *	@retval -1 -> Error
// 1429  *
// 1430  *
// 1431 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1432 BME280_RETURN_FUNCTION_TYPE bme280_get_spi3(u8 *v_enable_disable_u8)
bme280_get_spi3:
          CFI Block cfiBlock438 Using cfiCommon0
          CFI Function bme280_get_spi3
        CODE
// 1433 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        LCALL   ?Subroutine9 & 0xFFFF
// 1434 	/* used to return the communication result*/
// 1435 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1436 	u8 v_data_u8 = BME280_INIT_VALUE;
// 1437 	/* check the p_bme280 structure pointer as NULL*/
// 1438 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_348:
        JNZ     ??bme280_get_spi3_0
// 1439 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_get_spi3_1
// 1440 		} else {
// 1441 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
// 1442 			p_bme280->dev_addr,
// 1443 			BME280_CONFIG_REG_SPI3_ENABLE__REG,
// 1444 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_get_spi3_0:
        ; Setup parameters for indirect call
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0xb
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_323:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     R1,A
// 1445 			*v_enable_disable_u8 = BME280_GET_BITSLICE(
// 1446 			v_data_u8,
// 1447 			BME280_CONFIG_REG_SPI3_ENABLE);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        CLR     A
        RLC     A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
// 1448 		}
// 1449 	return com_rslt;
??bme280_get_spi3_1:
        LJMP    ?Subroutine1 & 0xFFFF
// 1450 }
          CFI EndBlock cfiBlock438

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond439 Using cfiCommon0
          CFI Function bme280_get_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_327
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function bme280_get_oversamp_pressure
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+-2
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function bme280_get_power_mode
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker442 Using cfiCommon1
          CFI (cfiPicker442) NoFunction
          CFI (cfiPicker442) Picker
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0xc
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiPicker442
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine115_0:
          CFI Block cfiCond443 Using cfiCommon0
          CFI Function bme280_init
          CFI Conditional ??CrossCallReturnLabel_315
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function bme280_read_uncomp_temperature
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-2
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function bme280_read_uncomp_pressure
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond445) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-2
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function bme280_read_uncomp_humidity
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+-2
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-2
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function bme280_get_calib_param
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-2
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function bme280_get_calib_param
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-2
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function bme280_get_oversamp_humidity
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-2
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function bme280_get_spi3
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-2
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function bme280_get_filter
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-2
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function bme280_get_standby_durn
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-2
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function bme280_read_register
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-2
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function bme280_get_oversamp_temperature
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-2
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function bme280_get_oversamp_pressure
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-2
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function bme280_get_power_mode
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-2
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker458 Using cfiCommon1
          CFI (cfiPicker458) NoFunction
          CFI (cfiPicker458) Picker
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_331:
        ADD     A,#0x2f
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_336:
        RET
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiPicker458

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond459 Using cfiCommon0
          CFI Function bme280_set_spi3
          CFI Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_312
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function bme280_set_filter
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_313
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-4
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function bme280_set_standby_durn
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_314
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-4
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function bme280_set_oversamp_temperature
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_307
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-4
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function bme280_set_oversamp_pressure
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_308
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-4
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function bme280_set_oversamp_humidity
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_309
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-4
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function bme280_set_power_mode
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_310
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-4
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function bme280_write_register
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_311
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-4
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function bme280_set_soft_rst
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_306
          CFI (cfiCond467) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond467) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond467) CFA_SP SP+-9
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 1)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function bme280_get_oversamp_temperature
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_327
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-4
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function bme280_get_oversamp_pressure
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_328
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-4
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function bme280_get_power_mode
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_329
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+-4
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function bme280_init
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_315
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+-4
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function bme280_read_uncomp_temperature
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_316
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-4
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function bme280_read_uncomp_pressure
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_317
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-4
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function bme280_read_uncomp_humidity
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_318
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-4
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_319
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+-4
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function bme280_get_calib_param
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_320
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-4
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function bme280_get_calib_param
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_321
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-4
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function bme280_get_oversamp_humidity
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_322
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-4
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function bme280_get_spi3
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_323
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-4
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function bme280_get_filter
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_324
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-4
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function bme280_get_standby_durn
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_325
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-4
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function bme280_read_register
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_326
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-4
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker483 Using cfiCommon1
          CFI (cfiPicker483) NoFunction
          CFI (cfiPicker483) Picker
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x26
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_375:
        RET
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiPicker483

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond484 Using cfiCommon0
          CFI Function bme280_init
          CFI Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-7
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function bme280_compensate_pressure_int32
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_174
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond485) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond485) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond485) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-6
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function bme280_compensate_pressure_int32
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_175
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond486) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond486) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond486) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond486) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond486) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond486) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond486) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-6
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function bme280_compensate_pressure_int32
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_176
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-6
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function bme280_compensate_humidity_int32
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_177
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond488) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond488) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-6
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function bme280_compensate_humidity_int32
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_178
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond489) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond489) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond489) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond489) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond489) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-6
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function bme280_compensate_humidity_int32
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_179
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond490) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-6
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function bme280_get_calib_param
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_180
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-7
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function bme280_get_calib_param
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_181
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+-7
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function bme280_get_calib_param
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_182
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+-7
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function bme280_set_oversamp_temperature
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_183
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-6
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function bme280_get_oversamp_pressure
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_184
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-7
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function bme280_set_oversamp_pressure
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_185
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-6
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function bme280_compensate_pressure_double
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_186
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond497) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-6
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function bme280_compensate_pressure_double
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_187
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond498) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-6
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function bme280_compensate_pressure_double
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_188
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-6
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function bme280_compensate_humidity_double
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_189
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond500) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond500) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond500) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond500) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond500) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-10
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function bme280_compensate_humidity_double
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_190
          CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond501) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond501) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond501) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond501) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond501) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond501) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond501) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond501) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond501) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond501) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond501) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond501) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond501) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond501) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond501) CFA_SP SP+-10
          CFI (cfiCond501) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function bme280_compensate_humidity_double
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_191
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-10
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function bme280_init
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_42
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-6
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function bme280_set_oversamp_temperature
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_43
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-6
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function bme280_set_oversamp_pressure
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_44
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-6
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function bme280_set_oversamp_humidity
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_45
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+-6
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function bme280_set_power_mode
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_46
          CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond507) CFA_SP SP+-6
          CFI (cfiCond507) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function bme280_set_spi3
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_47
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-6
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function bme280_set_filter
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_48
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-6
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function bme280_set_standby_durn
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_49
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-6
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_50
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-6
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_51
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+-6
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function bme280_compensate_pressure_int32
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_170
          CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond513) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond513) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond513) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond513) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond513) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond513) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond513) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond513) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond513) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond513) CFA_SP SP+-6
          CFI (cfiCond513) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function bme280_compensate_pressure_double
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_171
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond514) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond514) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond514) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond514) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond514) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond514) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond514) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+-6
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function bme280_compensate_pressure_int64
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_172
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond515) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond515) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond515) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond515) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond515) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-6
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function bme280_compensate_pressure_int32
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_167
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond516) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond516) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond516) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond516) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond516) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond516) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond516) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond516) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond516) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+-6
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function bme280_compensate_pressure_double
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_168
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond517) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond517) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond517) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond517) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond517) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond517) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-6
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function bme280_compensate_pressure_int64
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_169
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-6
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function bme280_compensate_pressure_int32
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_164
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-6
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function bme280_compensate_pressure_double
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_165
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond520) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-6
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function bme280_compensate_pressure_int64
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_166
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-6
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function bme280_compensate_pressure_int32
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_101
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-6
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function bme280_compensate_pressure_double
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_102
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond523) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond523) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond523) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-6
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function bme280_compensate_pressure_int64
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_103
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-6
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function bme280_compensate_humidity_int32
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_143
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond525) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-6
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function bme280_compensate_humidity_double
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_144
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond526) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond526) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond526) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond526) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond526) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-14
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function bme280_compensate_humidity_int32
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_127
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond527) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond527) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond527) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond527) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond527) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-6
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function bme280_compensate_humidity_double
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_128
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond528) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond528) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond528) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond528) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond528) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond528) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond528) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond528) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond528) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-6
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function bme280_compensate_humidity_int32
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_125
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond529) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond529) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond529) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond529) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond529) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond529) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond529) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond529) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond529) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-6
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function bme280_compensate_humidity_double
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_126
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond530) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond530) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond530) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-14
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function bme280_compensate_pressure_double
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_151
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-6
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function bme280_compensate_pressure_int64
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_152
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond532) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-6
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function bme280_compensate_pressure_int32
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_99
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-6
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function bme280_compensate_pressure_int64
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_100
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-6
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function bme280_compensate_pressure_double
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_97
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond535) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond535) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond535) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond535) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond535) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond535) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-6
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function bme280_compensate_pressure_int64
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_98
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-6
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function bme280_compensate_pressure_int32
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_388
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-10
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function bme280_compensate_pressure_int64
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_389
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-10
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function bme280_get_oversamp_temperature
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_153
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-7
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function bme280_compute_wait_time
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_154
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-6
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function bme280_compute_wait_time
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_145
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-6
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function bme280_compute_wait_time
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_146
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-6
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function bme280_get_oversamp_humidity
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_372, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_155
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-7
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function bme280_set_oversamp_humidity
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_372, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_156
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-6
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function bme280_compute_wait_time
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_372, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_147
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-6
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function bme280_compute_wait_time
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_372, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_148
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-6
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function bme280_set_oversamp_temperature
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_82
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-7
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function bme280_set_oversamp_pressure
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_83
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-7
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function bme280_set_oversamp_humidity
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_84
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-7
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function bme280_set_power_mode
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_85
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-7
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function bme280_set_spi3
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_86
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-7
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function bme280_set_filter
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_87
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-7
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function bme280_set_standby_durn
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_88
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-7
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function bme280_set_oversamp_humidity
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_337
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-6
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function bme280_set_spi3
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_338
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-6
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function bme280_set_filter
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_339
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-6
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function bme280_set_standby_durn
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_340
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-6
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function bme280_set_oversamp_humidity
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_341
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-6
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function bme280_set_spi3
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_312
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-6
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function bme280_set_filter
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_313
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-6
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function bme280_set_standby_durn
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_314
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-6
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function bme280_set_oversamp_temperature
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_307
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-6
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function bme280_set_oversamp_pressure
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_308
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-6
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function bme280_set_oversamp_humidity
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_309
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-6
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function bme280_set_power_mode
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_310
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-6
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function bme280_write_register
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_311
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-6
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function bme280_set_soft_rst
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_306
          CFI (cfiCond567) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond567) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond567) CFA_SP SP+-11
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 1)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function bme280_get_oversamp_temperature
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_327
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-6
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function bme280_get_oversamp_pressure
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_328
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-6
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function bme280_get_power_mode
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_329
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-6
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function bme280_init
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_315
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-6
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function bme280_read_uncomp_temperature
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_316
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-6
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function bme280_read_uncomp_pressure
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_317
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-6
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function bme280_read_uncomp_humidity
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_318
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-6
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function bme280_read_uncomp_pressure_temperature_humidity
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_319
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-6
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function bme280_get_calib_param
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_320
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-6
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function bme280_get_calib_param
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_321
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-6
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function bme280_get_oversamp_humidity
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_322
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-6
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function bme280_get_spi3
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_323
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-6
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function bme280_get_filter
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_324
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-6
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function bme280_get_standby_durn
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_325
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-6
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function bme280_read_register
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_326
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-6
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function bme280_set_oversamp_temperature
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_59
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-7
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function bme280_set_oversamp_pressure
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_60
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-7
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function bme280_set_oversamp_humidity
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_61
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-7
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function bme280_set_power_mode
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_62
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+-7
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function bme280_set_spi3
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_63
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-7
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function bme280_set_filter
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_64
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-7
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function bme280_set_standby_durn
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_65
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-7
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_66
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-7
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function bme280_set_spi3
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_361
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-6
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function bme280_set_filter
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_362
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-6
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function bme280_set_standby_durn
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_363
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-6
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function bme280_set_oversamp_temperature
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_364
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-6
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function bme280_set_oversamp_pressure
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_365
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-6
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function bme280_set_power_mode
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_366
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-6
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_367
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-6
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_368
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-6
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function bme280_set_oversamp_temperature
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_373, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_77
          CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond599) CFA_SP SP+-6
          CFI (cfiCond599) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function bme280_set_oversamp_pressure
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_373, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_78
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-6
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function bme280_set_oversamp_humidity
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_373, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_79
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-6
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function bme280_set_power_mode
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_373, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_80
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-6
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_373, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_81
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-6
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function bme280_set_power_mode
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_373, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_157
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-7
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_373, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_158
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-7
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function bme280_compensate_temperature_int32_sixteen_bit_output
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_371, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_89
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-6
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function bme280_compensate_humidity_int32
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_371, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_90
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond607) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-6
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function bme280_compensate_temperature_double
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_371, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_91
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond608) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond608) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond608) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond608) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-6
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function bme280_compensate_humidity_double
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_371, ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_92
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond609) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond609) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond609) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond609) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond609) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond609) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond609) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-6
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function bme280_compensate_temperature_int32
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_371, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_149
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-6
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function bme280_compensate_pressure_double
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_371, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_150
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-6
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function bme280_compensate_pressure_int32
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_371, ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_15
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond612) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond612) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond612) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond612) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond612) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-6
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function bme280_compensate_pressure_int64
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_371, ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_16
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond613) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond613) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond613) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-6
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker614 Using cfiCommon1
          CFI (cfiPicker614) NoFunction
          CFI (cfiPicker614) Picker
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R0
        RET
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiPicker614
// 1451 
// 1452 /*!
// 1453  *	@brief This API used to set the sensor
// 1454  *	SPI mode(communication type) in the register 0xF5 bit 0
// 1455  *
// 1456  *
// 1457  *
// 1458  *	@param v_enable_disable_u8 : The value of SPI enable
// 1459  *	value  | Description
// 1460  * --------|--------------
// 1461  *   0     | Disable
// 1462  *   1     | Enable
// 1463  *
// 1464  *
// 1465  *
// 1466  *	@return results of bus communication function
// 1467  *	@retval 0 -> Success
// 1468  *	@retval -1 -> Error
// 1469  *
// 1470  *
// 1471 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1472 BME280_RETURN_FUNCTION_TYPE bme280_set_spi3(u8 v_enable_disable_u8)
bme280_set_spi3:
          CFI Block cfiBlock615 Using cfiCommon0
          CFI Function bme280_set_spi3
        CODE
// 1473 {
        FUNCALL bme280_set_spi3, bme280_get_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_spi3, bme280_set_soft_rst
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_spi3, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_spi3, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_spi3, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_spi3, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_spi3, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_spi3, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
// 1474 	/* used to return the communication result*/
// 1475 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1476 	u8 v_data_u8 = BME280_INIT_VALUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1477 	u8 pre_ctrl_meas_value = BME280_INIT_VALUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1478 	u8 v_prev_pow_mode_u8 = BME280_INIT_VALUE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1479 	u8 v_pre_ctrl_hum_value_u8 =  BME280_INIT_VALUE;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine120_0 & 0xFFFF
// 1480 	/* check the p_bme280 structure pointer as NULL*/
// 1481 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_354:
        JNZ     ??bme280_set_spi3_0
// 1482 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        LJMP    ??CrossCallReturnLabel_25 & 0xFFFF
// 1483 		} else {
// 1484 			v_data_u8 = p_bme280->config_reg;
// 1485 			v_data_u8 =
// 1486 			BME280_SET_BITSLICE(v_data_u8,
// 1487 			BME280_CONFIG_REG_SPI3_ENABLE, v_enable_disable_u8);
??bme280_set_spi3_0:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        CLR     A
        RLC     A
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_107:
        ANL     A,#0xfe
        LCALL   ?Subroutine74 & 0xFFFF
// 1488 			com_rslt = bme280_get_power_mode(&v_prev_pow_mode_u8);
??CrossCallReturnLabel_211:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_get_power_mode::?relay`; Banked call to: bme280_get_power_mode
        MOV     A,R1
        MOV     R7,A
// 1489 			if (v_prev_pow_mode_u8 != BME280_SLEEP_MODE) {
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JZ      ??bme280_set_spi3_1
// 1490 				com_rslt += bme280_set_soft_rst();
        ; Setup parameters for call to function bme280_set_soft_rst
        LCALL   `??bme280_set_soft_rst::?relay`; Banked call to: bme280_set_soft_rst
        MOV     A,R1
        MOV     ?V0,A
// 1491 				p_bme280->delay_msec(BME280_3MS_DELAY);
        ; Setup parameters for indirect call
        MOV     DPTR,#__Constant_3
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_47:
        LCALL   ?CALL_IND
// 1492 				/* write previous and updated value of
// 1493 				configuration register*/
// 1494 				com_rslt += bme280_write_register(
// 1495 					BME280_CONFIG_REG,
// 1496 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xb
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        LCALL   ?Subroutine25 & 0xFFFF
// 1497 				/* write previous value of
// 1498 				humidity oversampling*/
// 1499 				v_pre_ctrl_hum_value_u8 =
// 1500 				p_bme280->ctrl_hum_reg;
// 1501 				com_rslt +=  bme280_write_register(
// 1502 					BME280_CTRL_HUMIDITY_REG,
// 1503 				&v_pre_ctrl_hum_value_u8,
// 1504 				BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1505 				/* write previous value of
// 1506 				control measurement register*/
// 1507 				pre_ctrl_meas_value =
// 1508 				p_bme280->ctrl_meas_reg;
// 1509 				com_rslt += bme280_write_register(
// 1510 					BME280_CTRL_MEAS_REG,
// 1511 				&pre_ctrl_meas_value,
// 1512 				BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1513 			} else {
??CrossCallReturnLabel_361:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_32:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xe
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_338:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_21:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xc
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_221:
        SJMP    ??bme280_set_spi3_2
// 1514 				com_rslt =
// 1515 				p_bme280->BME280_BUS_WRITE_FUNC(
// 1516 				p_bme280->dev_addr,
// 1517 				BME280_CONFIG_REG_SPI3_ENABLE__REG,
// 1518 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_set_spi3_1:
        ; Setup parameters for indirect call
        LCALL   ?Subroutine22 & 0xFFFF
// 1519 			}
??CrossCallReturnLabel_312:
        LCALL   ?CALL_IND
        MOV     A,R1
??bme280_set_spi3_2:
        MOV     R7,A
// 1520 			/* read the control measurement register value*/
// 1521 			com_rslt += bme280_read_register(
// 1522 				BME280_CTRL_MEAS_REG,
// 1523 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_read_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xc
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V0,A
// 1524 			p_bme280->ctrl_meas_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_86:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine11 & 0xFFFF
// 1525 			/* read the control humidity register value*/
// 1526 			com_rslt += bme280_read_register(
// 1527 				BME280_CTRL_HUMIDITY_REG,
// 1528 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_12:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V1,A
// 1529 			p_bme280->ctrl_hum_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_63:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine10 & 0xFFFF
// 1530 			/* read the control configuration register value*/
// 1531 			com_rslt += bme280_read_register(
// 1532 				BME280_CONFIG_REG,
// 1533 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_4:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R0,A
// 1534 			p_bme280->config_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine41 & 0xFFFF
// 1535 		}
??CrossCallReturnLabel_113:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine17 & 0xFFFF
// 1536 	return com_rslt;
??CrossCallReturnLabel_25:
        LJMP    ?Subroutine6 & 0xFFFF
// 1537 }
          CFI EndBlock cfiBlock615

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond616 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function bme280_set_oversamp_pressure
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function bme280_set_oversamp_humidity
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function bme280_set_spi3
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function bme280_set_filter
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function bme280_set_standby_durn
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker622 Using cfiCommon1
          CFI (cfiPicker622) NoFunction
          CFI (cfiPicker622) Picker
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_260:
        RET
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiPicker622

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond623 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-5
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function bme280_set_oversamp_pressure
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_111
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-5
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function bme280_set_oversamp_humidity
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_112
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+-5
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function bme280_set_spi3
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_113
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-5
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function bme280_set_filter
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_114
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-5
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function bme280_set_standby_durn
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_115
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-5
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function bme280_set_spi3
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_107
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-4
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function bme280_set_filter
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_108
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-4
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function bme280_set_standby_durn
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_109
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-4
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker632 Using cfiCommon1
          CFI (cfiPicker632) NoFunction
          CFI (cfiPicker632) Picker
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R1
        ADD     A,#0x2c
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiPicker632

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond633 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_59
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function bme280_set_oversamp_pressure
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function bme280_set_oversamp_humidity
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function bme280_set_power_mode
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function bme280_set_spi3
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function bme280_set_filter
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function bme280_set_standby_durn
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker641 Using cfiCommon1
          CFI (cfiPicker641) NoFunction
          CFI (cfiPicker641) Picker
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_369:
        RET
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiPicker641

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond642 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_59
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-5
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function bme280_set_oversamp_pressure
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_60
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+-5
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function bme280_set_oversamp_humidity
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_61
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-5
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function bme280_set_power_mode
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_62
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+-5
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function bme280_set_spi3
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_63
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+-5
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function bme280_set_filter
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_64
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-5
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function bme280_set_standby_durn
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_65
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-5
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_66
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-5
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function bme280_set_spi3
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_361
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+-4
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function bme280_set_filter
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_362
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+-4
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function bme280_set_standby_durn
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_363
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-4
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function bme280_set_oversamp_temperature
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_364
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-4
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function bme280_set_oversamp_pressure
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_365
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-4
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function bme280_set_power_mode
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_366
          CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond655) CFA_SP SP+-4
          CFI (cfiCond655) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_367
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+-4
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_368
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+-4
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker658 Using cfiCommon1
          CFI (cfiPicker658) NoFunction
          CFI (cfiPicker658) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_377:
        ADD     A,#0x2a
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiPicker658

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond659 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_28
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function bme280_set_oversamp_pressure
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-2
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function bme280_set_oversamp_humidity
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-2
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function bme280_set_oversamp_humidity
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+-2
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function bme280_set_spi3
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+-2
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function bme280_set_filter
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+-2
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function bme280_set_standby_durn
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+-2
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond666) CFA_SP SP+-2
          CFI (cfiCond666) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+-2
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker668 Using cfiCommon1
          CFI (cfiPicker668) NoFunction
          CFI (cfiPicker668) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     A,R4
        RET
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiPicker668

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond669 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function bme280_set_oversamp_pressure
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+-2
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function bme280_set_oversamp_humidity
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond671) CFA_SP SP+-2
          CFI (cfiCond671) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond672 Using cfiCommon0
          CFI (cfiCond672) Function bme280_set_power_mode
          CFI (cfiCond672) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond672) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond672) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond672) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond672) CFA_SP SP+-2
          CFI (cfiCond672) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function bme280_set_spi3
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_4
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+-2
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function bme280_set_filter
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond674) CFA_SP SP+-2
          CFI (cfiCond674) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond675 Using cfiCommon0
          CFI (cfiCond675) Function bme280_set_standby_durn
          CFI (cfiCond675) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond675) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond675) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond675) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond675) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond675) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond675) CFA_SP SP+-2
          CFI (cfiCond675) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond676 Using cfiCommon0
          CFI (cfiCond676) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond676) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond676) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond676) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond676) CFA_SP SP+-2
          CFI (cfiCond676) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker677 Using cfiCommon1
          CFI (cfiPicker677) NoFunction
          CFI (cfiPicker677) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_305:
        MOV     R1,#-0xb
        RET
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiCond675
          CFI EndBlock cfiCond676
          CFI EndBlock cfiPicker677
// 1538 
// 1539 /*!
// 1540  *	@brief This API is used to reads filter setting
// 1541  *	in the register 0xF5 bit 3 and 4
// 1542  *
// 1543  *
// 1544  *
// 1545  *	@param v_value_u8 : The value of IIR filter coefficient
// 1546  *
// 1547  *	value	    |	Filter coefficient
// 1548  * -------------|-------------------------
// 1549  *	0x00        | BME280_FILTER_COEFF_OFF
// 1550  *	0x01        | BME280_FILTER_COEFF_2
// 1551  *	0x02        | BME280_FILTER_COEFF_4
// 1552  *	0x03        | BME280_FILTER_COEFF_8
// 1553  *	0x04        | BME280_FILTER_COEFF_16
// 1554  *
// 1555  *	@return results of bus communication function
// 1556  *	@retval 0 -> Success
// 1557  *	@retval -1 -> Error
// 1558  *
// 1559  *
// 1560 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1561 BME280_RETURN_FUNCTION_TYPE bme280_get_filter(u8 *v_value_u8)
bme280_get_filter:
          CFI Block cfiBlock678 Using cfiCommon0
          CFI Function bme280_get_filter
        CODE
// 1562 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        LCALL   ?Subroutine9 & 0xFFFF
// 1563 	/* used to return the communication result*/
// 1564 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1565 	u8 v_data_u8 = BME280_INIT_VALUE;
// 1566 	/* check the p_bme280 structure pointer as NULL*/
// 1567 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_349:
        JNZ     ??bme280_get_filter_0
// 1568 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_get_filter_1
// 1569 		} else {
// 1570 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
// 1571 			p_bme280->dev_addr,
// 1572 			BME280_CONFIG_REG_FILTER__REG,
// 1573 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_get_filter_0:
        ; Setup parameters for indirect call
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0xb
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_324:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     R1,A
// 1574 			*v_value_u8 = BME280_GET_BITSLICE(v_data_u8,
// 1575 			BME280_CONFIG_REG_FILTER);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        RRC     A
        RRC     A
        ANL     A,#0x3f
        ANL     A,#0x7
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
// 1576 		}
// 1577 	return com_rslt;
??bme280_get_filter_1:
          CFI EndBlock cfiBlock678
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1
// 1578 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock679 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
          CFI EndBlock cfiBlock679
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine116_0:
          CFI Block cfiBlock680 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock680
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine117_0:
          CFI Block cfiBlock681 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock681
// 1579 
// 1580 /*!
// 1581  *	@brief This API is used to write filter setting
// 1582  *	in the register 0xF5 bit 3 and 4
// 1583  *
// 1584  *
// 1585  *
// 1586  *	@param v_value_u8 : The value of IIR filter coefficient
// 1587  *
// 1588  *	value	    |	Filter coefficient
// 1589  * -------------|-------------------------
// 1590  *	0x00        | BME280_FILTER_COEFF_OFF
// 1591  *	0x01        | BME280_FILTER_COEFF_2
// 1592  *	0x02        | BME280_FILTER_COEFF_4
// 1593  *	0x03        | BME280_FILTER_COEFF_8
// 1594  *	0x04        | BME280_FILTER_COEFF_16
// 1595  *
// 1596  *	@return results of bus communication function
// 1597  *	@retval 0 -> Success
// 1598  *	@retval -1 -> Error
// 1599  *
// 1600  *
// 1601 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1602 BME280_RETURN_FUNCTION_TYPE bme280_set_filter(u8 v_value_u8)
bme280_set_filter:
          CFI Block cfiBlock682 Using cfiCommon0
          CFI Function bme280_set_filter
        CODE
// 1603 {
        FUNCALL bme280_set_filter, bme280_get_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_filter, bme280_set_soft_rst
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_filter, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_filter, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_filter, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_filter, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_filter, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_filter, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
// 1604 	/* used to return the communication result*/
// 1605 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1606 	u8 v_data_u8 = BME280_INIT_VALUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1607 	u8 pre_ctrl_meas_value = BME280_INIT_VALUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1608 	u8 v_prev_pow_mode_u8 = BME280_INIT_VALUE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1609 	u8 v_pre_ctrl_hum_value_u8 =  BME280_INIT_VALUE;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine120_0 & 0xFFFF
// 1610 	/* check the p_bme280 structure pointer as NULL*/
// 1611 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_355:
        JNZ     ??bme280_set_filter_0
// 1612 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        LJMP    ??CrossCallReturnLabel_26 & 0xFFFF
// 1613 		} else {
// 1614 			v_data_u8 = p_bme280->config_reg;
// 1615 			v_data_u8 =
// 1616 			BME280_SET_BITSLICE(v_data_u8,
// 1617 			BME280_CONFIG_REG_FILTER, v_value_u8);
??bme280_set_filter_0:
        MOV     A,R6
        RLC     A
        RLC     A
        ANL     A,#0xfc
        ANL     A,#0x1c
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_108:
        ANL     A,#0xe3
        LCALL   ?Subroutine74 & 0xFFFF
// 1618 			com_rslt = bme280_get_power_mode(&v_prev_pow_mode_u8);
??CrossCallReturnLabel_212:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_get_power_mode::?relay`; Banked call to: bme280_get_power_mode
        MOV     A,R1
        MOV     R7,A
// 1619 			if (v_prev_pow_mode_u8 != BME280_SLEEP_MODE) {
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JZ      ??bme280_set_filter_1
// 1620 				com_rslt += bme280_set_soft_rst();
        ; Setup parameters for call to function bme280_set_soft_rst
        LCALL   `??bme280_set_soft_rst::?relay`; Banked call to: bme280_set_soft_rst
        MOV     A,R1
        MOV     ?V0,A
// 1621 				p_bme280->delay_msec(BME280_3MS_DELAY);
        ; Setup parameters for indirect call
        MOV     DPTR,#__Constant_3
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_48:
        LCALL   ?CALL_IND
// 1622 				/* write previous and updated value of
// 1623 				configuration register*/
// 1624 				com_rslt += bme280_write_register(
// 1625 					BME280_CONFIG_REG,
// 1626 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xb
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        LCALL   ?Subroutine25 & 0xFFFF
// 1627 				/* write previous value of
// 1628 				humidity oversampling*/
// 1629 				v_pre_ctrl_hum_value_u8 =
// 1630 				p_bme280->ctrl_hum_reg;
// 1631 				com_rslt += bme280_write_register(
// 1632 					BME280_CTRL_HUMIDITY_REG,
// 1633 				&v_pre_ctrl_hum_value_u8,
// 1634 				BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1635 				/* write previous value of
// 1636 				control measurement register*/
// 1637 				pre_ctrl_meas_value =
// 1638 				p_bme280->ctrl_meas_reg;
// 1639 				com_rslt += bme280_write_register(
// 1640 					BME280_CTRL_MEAS_REG,
// 1641 				&pre_ctrl_meas_value,
// 1642 				BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1643 			} else {
??CrossCallReturnLabel_362:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_33:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xe
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_339:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_22:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xc
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_222:
        SJMP    ??bme280_set_filter_2
// 1644 				com_rslt =
// 1645 				p_bme280->BME280_BUS_WRITE_FUNC(
// 1646 				p_bme280->dev_addr,
// 1647 				BME280_CONFIG_REG_FILTER__REG,
// 1648 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_set_filter_1:
        ; Setup parameters for indirect call
        LCALL   ?Subroutine22 & 0xFFFF
// 1649 			}
??CrossCallReturnLabel_313:
        LCALL   ?CALL_IND
        MOV     A,R1
??bme280_set_filter_2:
        MOV     R7,A
// 1650 			/* read the control measurement register value*/
// 1651 			com_rslt += bme280_read_register(BME280_CTRL_MEAS_REG,
// 1652 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_read_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xc
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V0,A
// 1653 			p_bme280->ctrl_meas_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_87:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine11 & 0xFFFF
// 1654 			/* read the control humidity register value*/
// 1655 			com_rslt += bme280_read_register(
// 1656 			BME280_CTRL_HUMIDITY_REG,
// 1657 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_13:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V1,A
// 1658 			p_bme280->ctrl_hum_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_64:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine10 & 0xFFFF
// 1659 			/* read the configuration register value*/
// 1660 			com_rslt += bme280_read_register(BME280_CONFIG_REG,
// 1661 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_5:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R0,A
// 1662 			p_bme280->config_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine41 & 0xFFFF
// 1663 		}
??CrossCallReturnLabel_114:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine17 & 0xFFFF
// 1664 	return com_rslt;
??CrossCallReturnLabel_26:
          CFI EndBlock cfiBlock682
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 1665 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock683 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x4
          CFI EndBlock cfiBlock683
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine118_0:
          CFI Block cfiBlock684 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Valid
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock684

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond685 Using cfiCommon0
          CFI Function bme280_set_spi3
          CFI Conditional ??CrossCallReturnLabel_221
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function bme280_set_filter
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-2
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function bme280_set_standby_durn
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond687) CFA_SP SP+-2
          CFI (cfiCond687) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker688 Using cfiCommon1
          CFI (cfiPicker688) NoFunction
          CFI (cfiPicker688) Picker
        MOV     A,?V0
        ADD     A,?V1
        ADD     A,?V2
        ADD     A,R1
        ADD     A,R7
        RET
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiPicker688

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond689 Using cfiCommon0
          CFI Function bme280_set_oversamp_humidity
          CFI Conditional ??CrossCallReturnLabel_210
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function bme280_set_spi3
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-2
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond691 Using cfiCommon0
          CFI (cfiCond691) Function bme280_set_filter
          CFI (cfiCond691) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond691) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond691) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond691) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond691) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond691) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond691) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond691) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond691) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond691) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond691) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond691) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond691) CFA_SP SP+-2
          CFI (cfiCond691) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond692 Using cfiCommon0
          CFI (cfiCond692) Function bme280_set_standby_durn
          CFI (cfiCond692) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond692) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond692) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond692) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond692) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond692) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond692) CFA_SP SP+-2
          CFI (cfiCond692) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker693 Using cfiCommon1
          CFI (cfiPicker693) NoFunction
          CFI (cfiPicker693) Picker
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_271:
        ; Setup parameters for call to function bme280_get_power_mode
        ; Setup parameters for call to function bme280_get_power_mode
        ; Setup parameters for call to function bme280_get_power_mode
        ; Setup parameters for call to function bme280_get_power_mode
        MOV     A,#0x2
        RET
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiCond691
          CFI EndBlock cfiCond692
          CFI EndBlock cfiPicker693

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond694 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_217
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function bme280_set_oversamp_pressure
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_218
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+-4
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function bme280_set_oversamp_humidity
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_210
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+-4
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function bme280_set_spi3
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_211
          CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond697) CFA_SP SP+-4
          CFI (cfiCond697) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function bme280_set_filter
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_212
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+-4
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function bme280_set_standby_durn
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_213
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-4
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker700 Using cfiCommon1
          CFI (cfiPicker700) NoFunction
          CFI (cfiPicker700) Picker
        ORL     A,R0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiPicker700

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond701 Using cfiCommon0
          CFI Function bme280_set_spi3
          CFI Conditional ??CrossCallReturnLabel_107
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function bme280_set_filter
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_108
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+-2
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function bme280_set_standby_durn
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond703) CFA_SP SP+-2
          CFI (cfiCond703) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker704 Using cfiCommon1
          CFI (cfiPicker704) NoFunction
          CFI (cfiPicker704) Picker
        MOV     R0,A
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_259:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiPicker704

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond705 Using cfiCommon0
          CFI Function bme280_set_oversamp_humidity
          CFI Conditional ??CrossCallReturnLabel_337
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function bme280_set_spi3
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+-2
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function bme280_set_filter
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-2
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function bme280_set_standby_durn
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-2
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker709 Using cfiCommon1
          CFI (cfiPicker709) NoFunction
          CFI (cfiPicker709) Picker
        MOV     A,R1
        MOV     ?V2,A
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiPicker709
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine119_0:
          CFI Block cfiCond710 Using cfiCommon0
          CFI Function bme280_set_oversamp_humidity
          CFI Conditional ??CrossCallReturnLabel_341
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function bme280_set_oversamp_humidity
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-2
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function bme280_set_spi3
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-2
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function bme280_set_filter
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond713) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond713) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond713) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond713) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond713) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond713) CFA_SP SP+-2
          CFI (cfiCond713) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function bme280_set_standby_durn
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond714) CFA_SP SP+-2
          CFI (cfiCond714) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker715 Using cfiCommon1
          CFI (cfiPicker715) NoFunction
          CFI (cfiPicker715) Picker
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_343:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiPicker715

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond716 Using cfiCommon0
          CFI Function bme280_set_spi3
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond717 Using cfiCommon0
          CFI (cfiCond717) Function bme280_set_filter
          CFI (cfiCond717) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond717) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond717) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond717) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond717) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond717) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond717) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond717) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond717) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond717) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond717) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond717) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond717) CFA_SP SP+-2
          CFI (cfiCond717) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond718 Using cfiCommon0
          CFI (cfiCond718) Function bme280_set_standby_durn
          CFI (cfiCond718) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond718) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond718) CFA_SP SP+-2
          CFI (cfiCond718) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker719 Using cfiCommon1
          CFI (cfiPicker719) NoFunction
          CFI (cfiPicker719) Picker
        MOVX    @DPTR,A
        MOV     A,R7
        ADD     A,?V0
        ADD     A,?V1
        ADD     A,R0
        MOV     R1,A
        RET
          CFI EndBlock cfiCond716
          CFI EndBlock cfiCond717
          CFI EndBlock cfiCond718
          CFI EndBlock cfiPicker719

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond720 Using cfiCommon0
          CFI Function bme280_set_oversamp_humidity
          CFI Conditional ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function bme280_set_power_mode
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond721) CFA_SP SP+-2
          CFI (cfiCond721) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function bme280_set_spi3
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond722) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond722) CFA_SP SP+-2
          CFI (cfiCond722) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function bme280_set_filter
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond723) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond723) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond723) CFA_SP SP+-2
          CFI (cfiCond723) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function bme280_set_standby_durn
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond724) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond724) CFA_SP SP+-2
          CFI (cfiCond724) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+-2
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker726 Using cfiCommon1
          CFI (cfiPicker726) NoFunction
          CFI (cfiPicker726) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     A,#0x3
        RET
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiPicker726
// 1666 
// 1667 /*!
// 1668  *	@brief This API used to Read the
// 1669  *	standby duration time from the sensor in the register 0xF5 bit 5 to 7
// 1670  *
// 1671  *	@param v_standby_durn_u8 : The value of standby duration time value.
// 1672  *  value       | standby duration
// 1673  * -------------|-----------------------
// 1674  *    0x00      | BME280_STANDBY_TIME_1_MS
// 1675  *    0x01      | BME280_STANDBY_TIME_63_MS
// 1676  *    0x02      | BME280_STANDBY_TIME_125_MS
// 1677  *    0x03      | BME280_STANDBY_TIME_250_MS
// 1678  *    0x04      | BME280_STANDBY_TIME_500_MS
// 1679  *    0x05      | BME280_STANDBY_TIME_1000_MS
// 1680  *    0x06      | BME280_STANDBY_TIME_2000_MS
// 1681  *    0x07      | BME280_STANDBY_TIME_4000_MS
// 1682  *
// 1683  *
// 1684  *	@return results of bus communication function
// 1685  *	@retval 0 -> Success
// 1686  *	@retval -1 -> Error
// 1687  *
// 1688  *
// 1689 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1690 BME280_RETURN_FUNCTION_TYPE bme280_get_standby_durn(u8 *v_standby_durn_u8)
bme280_get_standby_durn:
          CFI Block cfiBlock727 Using cfiCommon0
          CFI Function bme280_get_standby_durn
        CODE
// 1691 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        LCALL   ?Subroutine9 & 0xFFFF
// 1692 	/* used to return the communication result*/
// 1693 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1694 	u8 v_data_u8 = BME280_INIT_VALUE;
// 1695 	/* check the p_bme280 structure pointer as NULL*/
// 1696 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_350:
        JNZ     ??bme280_get_standby_durn_0
// 1697 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_get_standby_durn_1
// 1698 		} else {
// 1699 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
// 1700 			p_bme280->dev_addr,
// 1701 			BME280_CONFIG_REG_TSB__REG,
// 1702 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_get_standby_durn_0:
        ; Setup parameters for indirect call
        MOV     R3,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#-0xb
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_325:
        LCALL   ?CALL_IND
        MOV     A,R1
        MOV     R1,A
// 1703 			*v_standby_durn_u8 = BME280_GET_BITSLICE(
// 1704 			v_data_u8, BME280_CONFIG_REG_TSB);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        SWAP    A
        RRC     A
        ANL     A,#0x7
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
// 1705 		}
// 1706 	return com_rslt;
??bme280_get_standby_durn_1:
        LJMP    ?Subroutine1 & 0xFFFF
// 1707 }
          CFI EndBlock cfiBlock727
// 1708 
// 1709 /*!
// 1710  *	@brief This API used to write the
// 1711  *	standby duration time from the sensor in the register 0xF5 bit 5 to 7
// 1712  *
// 1713  *	@param v_standby_durn_u8 : The value of standby duration time value.
// 1714  *  value       | standby duration
// 1715  * -------------|-----------------------
// 1716  *    0x00      | BME280_STANDBY_TIME_1_MS
// 1717  *    0x01      | BME280_STANDBY_TIME_63_MS
// 1718  *    0x02      | BME280_STANDBY_TIME_125_MS
// 1719  *    0x03      | BME280_STANDBY_TIME_250_MS
// 1720  *    0x04      | BME280_STANDBY_TIME_500_MS
// 1721  *    0x05      | BME280_STANDBY_TIME_1000_MS
// 1722  *    0x06      | BME280_STANDBY_TIME_2000_MS
// 1723  *    0x07      | BME280_STANDBY_TIME_4000_MS
// 1724  *
// 1725  *	@note Normal mode comprises an automated perpetual
// 1726  *	cycling between an (active)
// 1727  *	Measurement period and an (inactive) standby period.
// 1728  *	@note The standby time is determined by
// 1729  *	the contents of the register t_sb.
// 1730  *	Standby time can be set using BME280_STANDBY_TIME_125_MS.
// 1731  *
// 1732  *	@note Usage Hint : bme280_set_standby_durn(BME280_STANDBY_TIME_125_MS)
// 1733  *
// 1734  *
// 1735  *
// 1736  *	@return results of bus communication function
// 1737  *	@retval 0 -> Success
// 1738  *	@retval -1 -> Error
// 1739  *
// 1740  *
// 1741 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1742 BME280_RETURN_FUNCTION_TYPE bme280_set_standby_durn(u8 v_standby_durn_u8)
bme280_set_standby_durn:
          CFI Block cfiBlock728 Using cfiCommon0
          CFI Function bme280_set_standby_durn
        CODE
// 1743 {
        FUNCALL bme280_set_standby_durn, bme280_get_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_standby_durn, bme280_set_soft_rst
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_standby_durn, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_standby_durn, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_standby_durn, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_standby_durn, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_standby_durn, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set_standby_durn, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
// 1744 	/* used to return the communication result*/
// 1745 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1746 	u8 v_data_u8 = BME280_INIT_VALUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1747 	u8 pre_ctrl_meas_value = BME280_INIT_VALUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1748 	u8 v_prev_pow_mode_u8 = BME280_INIT_VALUE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1749 	u8 v_pre_ctrl_hum_value_u8 = BME280_INIT_VALUE;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine120_0 & 0xFFFF
// 1750 	/* check the p_bme280 structure pointer as NULL*/
// 1751 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_356:
        JNZ     ??bme280_set_standby_durn_0
// 1752 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        LJMP    ??CrossCallReturnLabel_27 & 0xFFFF
// 1753 		} else {
// 1754 			v_data_u8 = p_bme280->config_reg;
// 1755 			v_data_u8 =
// 1756 			BME280_SET_BITSLICE(v_data_u8,
// 1757 			BME280_CONFIG_REG_TSB, v_standby_durn_u8);
??bme280_set_standby_durn_0:
        MOV     A,R6
        SWAP    A
        RLC     A
        ANL     A,#0xe0
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_109:
        ANL     A,#0x1f
        LCALL   ?Subroutine74 & 0xFFFF
// 1758 			com_rslt = bme280_get_power_mode(&v_prev_pow_mode_u8);
??CrossCallReturnLabel_213:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_get_power_mode::?relay`; Banked call to: bme280_get_power_mode
        MOV     A,R1
        MOV     R7,A
// 1759 			if (v_prev_pow_mode_u8 != BME280_SLEEP_MODE) {
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JZ      ??bme280_set_standby_durn_1
// 1760 				com_rslt += bme280_set_soft_rst();
        ; Setup parameters for call to function bme280_set_soft_rst
        LCALL   `??bme280_set_soft_rst::?relay`; Banked call to: bme280_set_soft_rst
        MOV     A,R1
        MOV     ?V0,A
// 1761 				p_bme280->delay_msec(BME280_3MS_DELAY);
        ; Setup parameters for indirect call
        MOV     DPTR,#__Constant_3
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_49:
        LCALL   ?CALL_IND
// 1762 				/* write previous and updated value of
// 1763 				configuration register*/
// 1764 				com_rslt += bme280_write_register(
// 1765 					BME280_CONFIG_REG,
// 1766 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xb
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        LCALL   ?Subroutine25 & 0xFFFF
// 1767 				/* write previous value of
// 1768 				humidity oversampling*/
// 1769 				v_pre_ctrl_hum_value_u8 =
// 1770 				p_bme280->ctrl_hum_reg;
// 1771 				com_rslt += bme280_write_register(
// 1772 					BME280_CTRL_HUMIDITY_REG,
// 1773 				&v_pre_ctrl_hum_value_u8,
// 1774 				BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1775 				/* write previous value of control
// 1776 				measurement register*/
// 1777 				pre_ctrl_meas_value =
// 1778 				p_bme280->ctrl_meas_reg;
// 1779 				com_rslt += bme280_write_register(
// 1780 					BME280_CTRL_MEAS_REG,
// 1781 				&pre_ctrl_meas_value,
// 1782 				BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1783 			} else {
??CrossCallReturnLabel_363:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_34:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xe
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_340:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_23:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xc
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_223:
        SJMP    ??bme280_set_standby_durn_2
// 1784 				com_rslt =
// 1785 				p_bme280->BME280_BUS_WRITE_FUNC(
// 1786 				p_bme280->dev_addr,
// 1787 				BME280_CONFIG_REG_TSB__REG,
// 1788 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??bme280_set_standby_durn_1:
        ; Setup parameters for indirect call
        LCALL   ?Subroutine22 & 0xFFFF
// 1789 			}
??CrossCallReturnLabel_314:
        LCALL   ?CALL_IND
        MOV     A,R1
??bme280_set_standby_durn_2:
        MOV     R7,A
// 1790 			/* read the control measurement register value*/
// 1791 			com_rslt += bme280_read_register(BME280_CTRL_MEAS_REG,
// 1792 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_read_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xc
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V0,A
// 1793 			p_bme280->ctrl_meas_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_88:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine11 & 0xFFFF
// 1794 			/* read the control humidity register value*/
// 1795 			com_rslt += bme280_read_register(
// 1796 			BME280_CTRL_HUMIDITY_REG,
// 1797 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_14:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V1,A
// 1798 			p_bme280->ctrl_hum_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_65:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine10 & 0xFFFF
// 1799 			/* read the configuration register value*/
// 1800 			com_rslt += bme280_read_register(BME280_CONFIG_REG,
// 1801 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_6:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R0,A
// 1802 			p_bme280->config_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine41 & 0xFFFF
// 1803 		}
??CrossCallReturnLabel_115:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine17 & 0xFFFF
// 1804 	return com_rslt;
??CrossCallReturnLabel_27:
        LJMP    ?Subroutine6 & 0xFFFF
// 1805 }
          CFI EndBlock cfiBlock728

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond729 Using cfiCommon0
          CFI Function bme280_get_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_344
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function bme280_get_oversamp_pressure
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond730) CFA_SP SP+-2
          CFI (cfiCond730) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function bme280_get_oversamp_humidity
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_SP SP+-2
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function bme280_get_power_mode
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond732) CFA_SP SP+-2
          CFI (cfiCond732) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function bme280_get_spi3
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+-2
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function bme280_get_filter
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_SP SP+-2
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function bme280_get_standby_durn
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_SP SP+-2
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker736 Using cfiCommon1
          CFI (cfiPicker736) NoFunction
          CFI (cfiPicker736) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiPicker736
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine120_0:
          CFI Block cfiCond737 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_351
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function bme280_set_oversamp_pressure
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+-2
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function bme280_set_oversamp_humidity
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-2
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function bme280_set_spi3
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+-2
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function bme280_set_filter
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+-2
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function bme280_set_standby_durn
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+-2
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-2
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function bme280_get_oversamp_temperature
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+-2
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function bme280_get_oversamp_pressure
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-2
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function bme280_get_oversamp_humidity
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-2
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function bme280_get_power_mode
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+-2
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function bme280_get_spi3
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-2
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function bme280_get_filter
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-2
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function bme280_get_standby_durn
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+-2
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker751 Using cfiCommon1
          CFI (cfiPicker751) NoFunction
          CFI (cfiPicker751) Picker
        CLR     A
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiPicker751
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine121_0:
          CFI Block cfiCond752 Using cfiCommon0
          CFI Function bme280_read_pressure_temperature_humidity
          CFI Conditional ??CrossCallReturnLabel_358
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function bme280_set_power_mode
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_SP SP+-2
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function bme280_set_soft_rst
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond754) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond754) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond754) CFA_SP SP+-7
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 1)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function bme280_set_oversamp_temperature
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+-2
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function bme280_set_oversamp_pressure
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-2
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function bme280_set_oversamp_humidity
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+-2
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond758 Using cfiCommon0
          CFI (cfiCond758) Function bme280_set_spi3
          CFI (cfiCond758) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond758) CFA_SP SP+-2
          CFI (cfiCond758) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function bme280_set_filter
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+-2
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function bme280_set_standby_durn
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-2
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+-2
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function bme280_get_oversamp_temperature
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-2
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function bme280_get_oversamp_pressure
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-2
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function bme280_get_oversamp_humidity
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+-2
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function bme280_get_power_mode
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+-2
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function bme280_get_spi3
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-2
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function bme280_get_filter
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+-2
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function bme280_get_standby_durn
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-2
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker769 Using cfiCommon1
          CFI (cfiPicker769) NoFunction
          CFI (cfiPicker769) Picker
        MOVX    @DPTR,A
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        RET
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiPicker769
// 1806 
// 1807 /*
// 1808  * @brief Writes the working mode to the sensor
// 1809  *
// 1810  *
// 1811  *
// 1812  *
// 1813  *  @param v_work_mode_u8 : Mode to be set
// 1814  *  value    | Working mode
// 1815  * ----------|--------------------
// 1816  *   0       | BME280_ULTRALOWPOWER_MODE
// 1817  *   1       | BME280_LOWPOWER_MODE
// 1818  *   2       | BME280_STANDARDRESOLUTION_MODE
// 1819  *   3       | BME280_HIGHRESOLUTION_MODE
// 1820  *   4       | BME280_ULTRAHIGHRESOLUTION_MODE
// 1821  *
// 1822  *	@return results of bus communication function
// 1823  *	@retval 0 -> Success
// 1824  *	@retval -1 -> Error
// 1825  *
// 1826  *
// 1827 */
// 1828 /*BME280_RETURN_FUNCTION_TYPE bme280_set_work_mode(u8 v_work_mode_u8)
// 1829 {
// 1830 BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1831 u8 v_data_u8 = BME280_INIT_VALUE;
// 1832 if (p_bme280 == BME280_NULL) {
// 1833 	return E_BME280_NULL_PTR;
// 1834 } else {
// 1835 	if (v_work_mode_u8 <= BME280_ULTRAHIGHRESOLUTION_MODE) {
// 1836 		com_rslt = p_bme280->BME280_BUS_READ_FUNC(
// 1837 			p_bme280->dev_addr,	BME280_CTRL_MEAS_REG,
// 1838 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1839 		if (com_rslt == SUCCESS) {
// 1840 			switch (v_work_mode_u8) {
// 1841 			case BME280_ULTRALOWPOWER_MODE:
// 1842 				p_bme280->oversamp_temperature =
// 1843 				BME280_ULTRALOWPOWER_OSRS_T;
// 1844 				p_bme280->osrs_p =
// 1845 				BME280_ULTRALOWPOWER_OSRS_P;
// 1846 				break;
// 1847 			case BME280_LOWPOWER_MODE:
// 1848 				p_bme280->oversamp_temperature =
// 1849 				BME280_LOWPOWER_OSRS_T;
// 1850 				p_bme280->osrs_p = BME280_LOWPOWER_OSRS_P;
// 1851 				break;
// 1852 			case BME280_STANDARDRESOLUTION_MODE:
// 1853 				p_bme280->oversamp_temperature =
// 1854 				BME280_STANDARDRESOLUTION_OSRS_T;
// 1855 				p_bme280->osrs_p =
// 1856 				BME280_STANDARDRESOLUTION_OSRS_P;
// 1857 				break;
// 1858 			case BME280_HIGHRESOLUTION_MODE:
// 1859 				p_bme280->oversamp_temperature =
// 1860 				BME280_HIGHRESOLUTION_OSRS_T;
// 1861 				p_bme280->osrs_p = BME280_HIGHRESOLUTION_OSRS_P;
// 1862 				break;
// 1863 			case BME280_ULTRAHIGHRESOLUTION_MODE:
// 1864 				p_bme280->oversamp_temperature =
// 1865 				BME280_ULTRAHIGHRESOLUTION_OSRS_T;
// 1866 				p_bme280->osrs_p =
// 1867 				BME280_ULTRAHIGHRESOLUTION_OSRS_P;
// 1868 				break;
// 1869 			}
// 1870 			v_data_u8 = BME280_SET_BITSLICE(v_data_u8,
// 1871 				BME280_CTRL_MEAS_REG_OVERSAMP_TEMPERATURE,
// 1872 				p_bme280->oversamp_temperature);
// 1873 			v_data_u8 = BME280_SET_BITSLICE(v_data_u8,
// 1874 				BME280_CTRL_MEAS_REG_OVERSAMP_PRESSURE,
// 1875 				p_bme280->osrs_p);
// 1876 			com_rslt += p_bme280->BME280_BUS_WRITE_FUNC(
// 1877 				p_bme280->dev_addr,	BME280_CTRL_MEAS_REG,
// 1878 				&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
// 1879 		}
// 1880 	} else {
// 1881 		com_rslt = E_BME280_OUT_OF_RANGE;
// 1882 	}
// 1883 }
// 1884 return com_rslt;
// 1885 }*/
// 1886 
// 1887 /*!
// 1888  * @brief This API used to read uncompensated
// 1889  * temperature,pressure and humidity in forced mode
// 1890  *
// 1891  *
// 1892  *	@param v_uncom_pressure_s32: The value of uncompensated pressure
// 1893  *	@param v_uncom_temperature_s32: The value of uncompensated temperature
// 1894  *	@param v_uncom_humidity_s32: The value of uncompensated humidity
// 1895  *
// 1896  *
// 1897  *	@return results of bus communication function
// 1898  *	@retval 0 -> Success
// 1899  *	@retval -1 -> Error
// 1900  *
// 1901  *
// 1902 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1903 BME280_RETURN_FUNCTION_TYPE
// 1904 bme280_get_forced_uncomp_pressure_temperature_humidity(
bme280_get_forced_uncomp_pressure_temperature_humidity:
          CFI Block cfiBlock770 Using cfiCommon0
          CFI Function bme280_get_forced_uncomp_pressure_temperature_humidity
        CODE
// 1905 s32 *v_uncom_pressure_s32,
// 1906 s32 *v_uncom_temperature_s32, s32 *v_uncom_humidity_s32)
// 1907 {
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_get_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_set_soft_rst
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_write_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_compute_wait_time
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_read_uncomp_pressure_temperature_humidity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_get_forced_uncomp_pressure_temperature_humidity, bme280_read_register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V0,R4
        MOV     ?V1,R5
// 1908 	/* used to return the communication result*/
// 1909 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 1910 	u8 v_data_u8 = BME280_INIT_VALUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1911 	u8 v_waittime_u8 = BME280_INIT_VALUE;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1912 	u8 v_prev_pow_mode_u8 = BME280_INIT_VALUE;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1913 	u8 v_mode_u8r = BME280_INIT_VALUE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1914 	u8 pre_ctrl_config_value = BME280_INIT_VALUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1915 	u8 v_pre_ctrl_hum_value_u8 = BME280_INIT_VALUE;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine120_0 & 0xFFFF
// 1916 	/* check the p_bme280 structure pointer as NULL*/
// 1917 	if (p_bme280 == BME280_NULL) {
??CrossCallReturnLabel_357:
        JNZ     ??bme280_get_forced_uncomp_pressure_temperature_1
// 1918 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        LJMP    ??bme280_get_forced_uncomp_pressure_temperature_2 & 0xFFFF
// 1919 		} else {
// 1920 			v_mode_u8r = p_bme280->ctrl_meas_reg;
// 1921 			v_mode_u8r =
// 1922 			BME280_SET_BITSLICE(v_mode_u8r,
// 1923 			BME280_CTRL_MEAS_REG_POWER_MODE, BME280_FORCED_MODE);
??bme280_get_forced_uncomp_pressure_temperature_1:
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x2b
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_265:
        ANL     A,#0xfc
        ORL     A,#0x1
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1924 			com_rslt = bme280_get_power_mode(&v_prev_pow_mode_u8);
        ; Setup parameters for call to function bme280_get_power_mode
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_get_power_mode::?relay`; Banked call to: bme280_get_power_mode
        MOV     A,R1
        MOV     R6,A
// 1925 			if (v_prev_pow_mode_u8 != BME280_SLEEP_MODE) {
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JZ      ??bme280_get_forced_uncomp_pressure_temperature_3
// 1926 				com_rslt += bme280_set_soft_rst();
        ; Setup parameters for call to function bme280_set_soft_rst
        LCALL   `??bme280_set_soft_rst::?relay`; Banked call to: bme280_set_soft_rst
        MOV     A,R1
        MOV     R7,A
// 1927 				p_bme280->delay_msec(BME280_3MS_DELAY);
        ; Setup parameters for indirect call
        MOV     DPTR,#__Constant_3
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_50:
        LCALL   ?CALL_IND
// 1928 				/* write previous and updated value of
// 1929 				configuration register*/
// 1930 				pre_ctrl_config_value = p_bme280->config_reg;
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_81:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine16 & 0xFFFF
// 1931 				com_rslt += bme280_write_register(
// 1932 					BME280_CONFIG_REG,
// 1933 				&pre_ctrl_config_value,
// 1934 				BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_24:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xb
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        MOV     A,R1
        MOV     ?V2,A
// 1935 				/* write previous value of
// 1936 				humidity oversampling*/
// 1937 				v_pre_ctrl_hum_value_u8 =
// 1938 				p_bme280->ctrl_hum_reg;
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_367:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
// 1939 				com_rslt += bme280_write_register(
// 1940 					BME280_CTRL_HUMIDITY_REG,
// 1941 				&v_pre_ctrl_hum_value_u8,
// 1942 				BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_35:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xe
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        MOV     A,R1
        MOV     ?V3,A
// 1943 				/* write the force mode  */
// 1944 				com_rslt += bme280_write_register(
// 1945 					BME280_CTRL_MEAS_REG,
// 1946 				&v_mode_u8r, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xc
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        MOV     A,R7
        ADD     A,?V2
        ADD     A,?V3
        ADD     A,R1
        SJMP    ??bme280_get_forced_uncomp_pressure_temperature_4
// 1947 			} else {
// 1948 				/* write previous value of
// 1949 				humidity oversampling*/
// 1950 				v_pre_ctrl_hum_value_u8 =
// 1951 				p_bme280->ctrl_hum_reg;
??bme280_get_forced_uncomp_pressure_temperature_3:
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_368:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
// 1952 				com_rslt += bme280_write_register(
// 1953 					BME280_CTRL_HUMIDITY_REG,
// 1954 				&v_pre_ctrl_hum_value_u8,
// 1955 				BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_36:
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xe
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        MOV     A,R1
        MOV     R7,A
// 1956 				/* write the force mode  */
// 1957 				com_rslt += bme280_write_register(
// 1958 					BME280_CTRL_MEAS_REG,
// 1959 				&v_mode_u8r, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_write_register
        MOV     R4,#0x1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        MOV     R1,#-0xc
        LCALL   `??bme280_write_register::?relay`; Banked call to: bme280_write_register
        MOV     A,R1
        ADD     A,R7
??bme280_get_forced_uncomp_pressure_temperature_4:
        ADD     A,R6
        MOV     R6,A
// 1960 			}
// 1961 			bme280_compute_wait_time(&v_waittime_u8);
        ; Setup parameters for call to function bme280_compute_wait_time
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_compute_wait_time::?relay`; Banked call to: bme280_compute_wait_time
// 1962 			p_bme280->delay_msec(v_waittime_u8);
        ; Setup parameters for indirect call
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        CLR     A
        MOV     R3,A
        MOV     R4,A
        MOV     R5,A
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_51:
        LCALL   ?CALL_IND
// 1963 			/* read the force-mode value of pressure
// 1964 			temperature and humidity*/
// 1965 			com_rslt +=
// 1966 			bme280_read_uncomp_pressure_temperature_humidity(
// 1967 			v_uncom_pressure_s32, v_uncom_temperature_s32,
// 1968 			v_uncom_humidity_s32);
        ; Setup parameters for call to function bme280_read_uncomp_pressure_temperature_humidity
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     R2,?V4
        MOV     R3,?V5
        LCALL   ??bme280_read_uncomp_pressure_temperature_humid; Banked call to: bme280_read_uncomp_pressure_temperature_humidity
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0,A
// 1969 
// 1970 			/* read the control humidity register value*/
// 1971 			com_rslt += bme280_read_register(
// 1972 			BME280_CTRL_HUMIDITY_REG,
// 1973 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
        ; Setup parameters for call to function bme280_read_register
        MOV     R4,#0x1
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     R1,#-0xe
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R7,A
// 1974 			p_bme280->ctrl_hum_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_66:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine10 & 0xFFFF
// 1975 			/* read the configuration register value*/
// 1976 			com_rslt += bme280_read_register(BME280_CONFIG_REG,
// 1977 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_7:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     ?V1,A
// 1978 			p_bme280->config_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_158:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ??Subroutine111_0 & 0xFFFF
// 1979 
// 1980 			/* read the control measurement register value*/
// 1981 			com_rslt += bme280_read_register(BME280_CTRL_MEAS_REG,
// 1982 			&v_data_u8, BME280_GEN_READ_WRITE_DATA_LENGTH);
??CrossCallReturnLabel_302:
        LCALL   `??bme280_read_register::?relay`; Banked call to: bme280_read_register
        MOV     A,R1
        MOV     R0,A
// 1983 			p_bme280->ctrl_meas_reg = v_data_u8;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine95 & 0xFFFF
// 1984 		}
??CrossCallReturnLabel_257:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1985 	return com_rslt;
        MOV     A,R6
        ADD     A,?V0
        ADD     A,R7
        ADD     A,?V1
        ADD     A,R0
        MOV     R1,A
??bme280_get_forced_uncomp_pressure_temperature_2:
        MOV     A,#0x6
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock770
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 1986 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock771 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock771

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond772 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function bme280_set_oversamp_pressure
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_105
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-4
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function bme280_set_power_mode
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_106
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+-4
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker776 Using cfiCommon1
          CFI (cfiPicker776) NoFunction
          CFI (cfiPicker776) Picker
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R1
        ADD     A,#0x2b
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiPicker776

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond777 Using cfiCommon0
          CFI Function bme280_set_power_mode
          CFI Conditional ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker779 Using cfiCommon1
          CFI (cfiPicker779) NoFunction
          CFI (cfiPicker779) Picker
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_239:
        RET
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiPicker779

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond780 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function bme280_set_oversamp_pressure
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_78
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-4
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function bme280_set_oversamp_humidity
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_79
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-4
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function bme280_set_power_mode
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_80
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-4
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_81
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-4
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function bme280_set_power_mode
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_157
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+-5
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_158
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+-5
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker787 Using cfiCommon1
          CFI (cfiPicker787) NoFunction
          CFI (cfiPicker787) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_373:
        ADD     A,#0x2c
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiPicker787

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond788 Using cfiCommon0
          CFI Function bme280_set_spi3
          CFI Conditional ??CrossCallReturnLabel_361
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function bme280_set_filter
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+-2
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function bme280_set_standby_durn
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+-2
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker791 Using cfiCommon1
          CFI (cfiPicker791) NoFunction
          CFI (cfiPicker791) Picker
        MOV     A,R1
        MOV     ?V1,A
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiPicker791
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine122_0:
          CFI Block cfiCond792 Using cfiCommon0
          CFI Function bme280_set_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_364
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function bme280_set_oversamp_pressure
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+-2
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function bme280_set_power_mode
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+-2
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond795) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond795) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond795) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond795) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond795) CFA_SP SP+-2
          CFI (cfiCond795) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+-2
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function bme280_set_spi3
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+-2
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function bme280_set_filter
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-2
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function bme280_set_standby_durn
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond799) CFA_SP SP+-2
          CFI (cfiCond799) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker800 Using cfiCommon1
          CFI (cfiPicker800) NoFunction
          CFI (cfiPicker800) Picker
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_370:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiPicker800
// 1987 
// 1988 /*!
// 1989  * @brief
// 1990  *	This API write the data to
// 1991  *	the given register
// 1992  *
// 1993  *
// 1994  *	@param v_addr_u8 -> Address of the register
// 1995  *	@param v_data_u8 -> The data from the register
// 1996  *	@param v_len_u8 -> no of bytes to read
// 1997  *
// 1998  *
// 1999  *	@return results of bus communication function
// 2000  *	@retval 0 -> Success
// 2001  *	@retval -1 -> Error
// 2002  *
// 2003  *
// 2004  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2005 BME280_RETURN_FUNCTION_TYPE bme280_write_register(u8 v_addr_u8,
bme280_write_register:
          CFI Block cfiBlock801 Using cfiCommon0
          CFI Function bme280_write_register
        CODE
// 2006 u8 *v_data_u8, u8 v_len_u8)
// 2007 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R6,A
// 2008 	/* used to return the communication result*/
// 2009 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 2010 	/* check the p_bme280 structure pointer as NULL*/
// 2011 	
// 2012 	if (p_bme280 == BME280_NULL) {
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R2
        ORL     A,R3
        JNZ     ??bme280_write_register_0
// 2013 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_write_register_1
// 2014 		} else {
// 2015 			
// 2016 			com_rslt = p_bme280->BME280_BUS_WRITE_FUNC(
// 2017 			p_bme280->dev_addr,
// 2018 			v_addr_u8, v_data_u8, v_len_u8);
// 2019 		}
// 2020 	return com_rslt;
??bme280_write_register_0:
        ; Setup parameters for indirect call
        MOV     A,R6
        MOV     R3,A
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,R7
        MOV     R2,A
        LCALL   ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_311:
        LCALL   ?CALL_IND
??bme280_write_register_1:
        LJMP    ??Subroutine117_0 & 0xFFFF
// 2021 }
          CFI EndBlock cfiBlock801
// 2022 
// 2023 /*!
// 2024  * @brief
// 2025  *	This API reads the data from
// 2026  *	the given register
// 2027  *
// 2028  *
// 2029  *	@param v_addr_u8 -> Address of the register
// 2030  *	@param v_data_u8 -> The data from the register
// 2031  *	@param v_len_u8 -> no of bytes to read
// 2032  *
// 2033  *
// 2034  *	@return results of bus communication function
// 2035  *	@retval 0 -> Success
// 2036  *	@retval -1 -> Error
// 2037  *
// 2038  *
// 2039  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2040 BME280_RETURN_FUNCTION_TYPE bme280_read_register(u8 v_addr_u8,
bme280_read_register:
          CFI Block cfiBlock802 Using cfiCommon0
          CFI Function bme280_read_register
        CODE
// 2041 u8 *v_data_u8, u8 v_len_u8)
// 2042 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R6,A
// 2043 	/* used to return the communication result*/
// 2044 	BME280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
// 2045 	/* check the p_bme280 structure pointer as NULL*/
// 2046 	if (p_bme280 == BME280_NULL) {
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R2
        ORL     A,R3
        JNZ     ??bme280_read_register_0
// 2047 		return E_BME280_NULL_PTR;
        MOV     R1,#-0x7f
        SJMP    ??bme280_read_register_1
// 2048 		} else {
// 2049 			com_rslt = p_bme280->BME280_BUS_READ_FUNC(
// 2050 			p_bme280->dev_addr,
// 2051 			v_addr_u8, v_data_u8, v_len_u8);
// 2052 		}
// 2053 	return com_rslt;
??bme280_read_register_0:
        ; Setup parameters for indirect call
        MOV     A,R6
        MOV     R3,A
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,R7
        MOV     R2,A
        MOV     DPTR,#p_bme280
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_326:
        LCALL   ?CALL_IND
??bme280_read_register_1:
        LJMP    ??Subroutine117_0 & 0xFFFF
// 2054 }
          CFI EndBlock cfiBlock802
// 2055 
// 2056 #ifdef BME280_ENABLE_FLOAT
// 2057 
// 2058 /*!
// 2059  * @brief Reads actual temperature from uncompensated temperature
// 2060  * @note returns the value in Degree centigrade
// 2061  * @note Output value of "51.23" equals 51.23 DegC.
// 2062  *
// 2063  *
// 2064  *
// 2065  *  @param v_uncom_temperature_s32 : value of uncompensated temperature
// 2066  *
// 2067  *
// 2068  *
// 2069  *  @return  Return the actual temperature in floating point
// 2070  *
// 2071 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2072 double bme280_compensate_temperature_double(s32 v_uncom_temperature_s32)
bme280_compensate_temperature_double:
          CFI Block cfiBlock803 Using cfiCommon0
          CFI Function bme280_compensate_temperature_double
        CODE
// 2073 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     ?V10,R4
        MOV     ?V11,R5
// 2074 	double v_x1_u32 = BME280_INIT_VALUE;
// 2075 	double v_x2_u32 = BME280_INIT_VALUE;
// 2076 	double temperature = BME280_INIT_VALUE;
// 2077 
// 2078 	v_x1_u32  = (((double)v_uncom_temperature_s32) / 16384.0 -
// 2079 	((double)p_bme280->cal_param.dig_T1) / 1024.0) *
// 2080 	((double)p_bme280->cal_param.dig_T2);
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_280:
        MOVX    A,@DPTR
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_195:
        MOV     R0,#?V4
        LCALL   ?UL_TO_FLT
        MOV     R0,#?V8
        LCALL   ?L_TO_FLT
        MOV     ?V0,?V8
        MOV     ?V1,?V9
        MOV     ?V2,?V10
        MOV     ?V3,?V11
        MOV     DPTR,#__Constant_38800000
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V12
        LCALL   ?FLT_MUL
        PUSH    ?V0
          CFI CFA_SP SP+-1
        PUSH    ?V1
          CFI CFA_SP SP+-2
        PUSH    ?V2
          CFI CFA_SP SP+-3
        PUSH    ?V3
          CFI CFA_SP SP+-4
        MOV     ?V0,?V4
        MOV     ?V1,?V5
        MOV     ?V2,?V6
        MOV     ?V3,?V7
        MOV     DPTR,#__Constant_3a800000
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V12
        LCALL   ?FLT_MUL
        POP     ?V15
          CFI CFA_SP SP+-3
        POP     ?V14
          CFI CFA_SP SP+-2
        POP     ?V13
          CFI CFA_SP SP+-1
        POP     ?V12
          CFI CFA_SP SP+0
        MOV     R0,#?V12
        MOV     R1,#?V0
        LCALL   ?FLT_SUB
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_281:
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_379:
        LCALL   ?L_TO_FLT
        MOV     R0,#?V12
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
// 2081 	v_x2_u32  = ((((double)v_uncom_temperature_s32) / 131072.0 -
// 2082 	((double)p_bme280->cal_param.dig_T1) / 8192.0) *
// 2083 	(((double)v_uncom_temperature_s32) / 131072.0 -
// 2084 	((double)p_bme280->cal_param.dig_T1) / 8192.0)) *
// 2085 	((double)p_bme280->cal_param.dig_T3);
        MOV     DPTR,#__Constant_37000000
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        MOV     R0,#?V8
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_39000000
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?FLT_SUB
        MOV     ?V4,?V8
        MOV     ?V5,?V9
        MOV     ?V6,?V10
        MOV     ?V7,?V11
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_136:
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_380:
        LCALL   ?L_TO_FLT
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
// 2086 	p_bme280->cal_param.t_fine = (s32)(v_x1_u32 + v_x2_u32);
        MOV     R0,#?V12
        MOV     R1,#?V4
        LCALL   ?FLT_ADD
        MOV     ?V0,?V12
        MOV     ?V1,?V13
        MOV     ?V2,?V14
        MOV     ?V3,?V15
        MOV     R0,#?V0
        LCALL   ?FLT_TO_L
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_91:
        LCALL   ?L_MOV_TO_X
// 2087 	temperature  = (v_x1_u32 + v_x2_u32) / 5120.0;
// 2088 
// 2089 
// 2090 	return temperature;
        MOV     DPTR,#__Constant_45a00000
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        MOV     R0,#?V12
        MOV     R1,#?V0
        LCALL   ?FLT_DIV
        MOV     R2,?V12
        MOV     R3,?V13
        MOV     R4,?V14
        MOV     R5,?V15
        SJMP    ??Subroutine124_0
// 2091 }
          CFI EndBlock cfiBlock803

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond804 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_194
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function bme280_compensate_temperature_double
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_195
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond805) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond805) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond805) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond805) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond805) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond805) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond805) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond805) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond805) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_SP SP+-2
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker806 Using cfiCommon1
          CFI (cfiPicker806) NoFunction
          CFI (cfiPicker806) Picker
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        CLR     A
        MOV     ?V6,A
        MOV     ?V7,A
        RET
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiPicker806

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond807 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32
          CFI Conditional ??CrossCallReturnLabel_134
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function bme280_compensate_temperature_int32
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond808) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond808) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond808) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond808) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond808) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond808) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond808) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond808) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond808) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond808) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond808) CFA_SP SP+-2
          CFI (cfiCond808) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function bme280_compensate_temperature_double
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_136
          CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond809) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond809) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond809) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond809) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond809) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond809) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond809) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond809) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond809) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond809) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond809) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond809) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond809) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond809) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond809) CFA_SP SP+-2
          CFI (cfiCond809) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker810 Using cfiCommon1
          CFI (cfiPicker810) NoFunction
          CFI (cfiPicker810) Picker
        MOV     DPTR,#p_bme280
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_332:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiPicker810

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond811 Using cfiCommon0
          CFI Function bme280_compensate_temperature_double
          CFI Conditional ??CrossCallReturnLabel_379
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond812 Using cfiCommon0
          CFI (cfiCond812) Function bme280_compensate_temperature_double
          CFI (cfiCond812) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond812) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond812) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond812) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond812) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond812) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond812) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond812) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond812) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond812) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond812) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond812) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond812) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond812) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond812) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond812) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond812) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond812) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond812) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond812) CFA_SP SP+-2
          CFI (cfiCond812) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker813 Using cfiCommon1
          CFI (cfiPicker813) NoFunction
          CFI (cfiPicker813) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond811
          CFI EndBlock cfiCond812
          CFI EndBlock cfiPicker813
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine123_0:
          CFI Block cfiCond814 Using cfiCommon0
          CFI Function bme280_compensate_pressure_double
          CFI Conditional ??CrossCallReturnLabel_378
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function bme280_compensate_temperature_double
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond815) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond815) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond815) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond815) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond815) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond815) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond815) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond815) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond815) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond815) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond815) CFA_SP SP+-2
          CFI (cfiCond815) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function bme280_compensate_temperature_double
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond816) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond816) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond816) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond816) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond816) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-2
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker817 Using cfiCommon1
          CFI (cfiPicker817) NoFunction
          CFI (cfiPicker817) Picker
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_384:
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiPicker817

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond818 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32_sixteen_bit_output
          CFI Conditional ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond819 Using cfiCommon0
          CFI (cfiCond819) Function bme280_compensate_humidity_int32
          CFI (cfiCond819) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond819) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond819) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond819) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond819) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond819) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond819) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond819) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond819) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond819) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond819) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond819) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond819) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond819) CFA_SP SP+-2
          CFI (cfiCond819) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond820 Using cfiCommon0
          CFI (cfiCond820) Function bme280_compensate_temperature_double
          CFI (cfiCond820) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond820) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond820) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond820) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond820) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond820) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond820) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond820) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond820) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond820) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond820) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond820) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond820) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond820) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond820) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond820) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond820) CFA_SP SP+-2
          CFI (cfiCond820) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function bme280_compensate_humidity_double
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond821) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond821) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond821) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond821) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond821) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond821) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond821) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond821) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond821) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond821) CFA_SP SP+-2
          CFI (cfiCond821) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker822 Using cfiCommon1
          CFI (cfiPicker822) NoFunction
          CFI (cfiPicker822) Picker
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_230:
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond818
          CFI EndBlock cfiCond819
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiPicker822

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock823 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 28)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock823
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine124_0:
          CFI Block cfiBlock824 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock824
// 2092 
// 2093 /*!
// 2094  * @brief Reads actual pressure from uncompensated pressure
// 2095  * @note Returns pressure in Pa as double.
// 2096  * @note Output value of "96386.2"
// 2097  * equals 96386.2 Pa = 963.862 hPa.
// 2098  *
// 2099  *
// 2100  *  @param v_uncom_pressure_s32 : value of uncompensated pressure
// 2101  *
// 2102  *
// 2103  *  @return  Return the actual pressure in floating point
// 2104  *
// 2105 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2106 double bme280_compensate_pressure_double(s32 v_uncom_pressure_s32)
bme280_compensate_pressure_double:
          CFI Block cfiBlock825 Using cfiCommon0
          CFI Function bme280_compensate_pressure_double
        CODE
// 2107 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine81 & 0xFFFF
// 2108 	double v_x1_u32 = BME280_INIT_VALUE;
// 2109 	double v_x2_u32 = BME280_INIT_VALUE;
// 2110 	double pressure = BME280_INIT_VALUE;
// 2111 
// 2112 	v_x1_u32 = ((double)p_bme280->cal_param.t_fine /
// 2113 	2.0) - 64000.0;
??CrossCallReturnLabel_227:
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_150:
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V8
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_3f000000
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        MOV     R0,#?V8
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_c77a0000
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        MOV     R0,#?V8
        MOV     R1,#?V0
        LCALL   ?FLT_ADD
// 2114 	v_x2_u32 = v_x1_u32 * v_x1_u32 *
// 2115 	((double)p_bme280->cal_param.dig_P6) / 32768.0;
// 2116 	v_x2_u32 = v_x2_u32 + v_x1_u32 *
// 2117 	((double)p_bme280->cal_param.dig_P5) * 2.0;
// 2118 	v_x2_u32 = (v_x2_u32 / 4.0) +
// 2119 	(((double)p_bme280->cal_param.dig_P4) * 65536.0);
        MOV     ?V0,?V8
        MOV     ?V1,?V9
        MOV     ?V2,?V10
        MOV     ?V3,?V11
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_165:
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_53:
        LCALL   ?L_TO_FLT
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_38000000
        MOV     R0,#?V4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?FLT_MUL
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_186:
        ADD     A,#0xe
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_54:
        LCALL   ?L_TO_FLT
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_40000000
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V12
        LCALL   ?FLT_MUL
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?FLT_ADD
        MOV     DPTR,#__Constant_3e800000
        MOV     R0,#?V4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?FLT_MUL
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_187:
        ADD     A,#0xc
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_55:
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_47800000
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V12
        LCALL   ?FLT_MUL
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?FLT_ADD
// 2120 	v_x1_u32 = (((double)p_bme280->cal_param.dig_P3) *
// 2121 	v_x1_u32 * v_x1_u32 / 524288.0 +
// 2122 	((double)p_bme280->cal_param.dig_P2) * v_x1_u32) / 524288.0;
// 2123 	v_x1_u32 = (1.0 + v_x1_u32 / 32768.0) *
// 2124 	((double)p_bme280->cal_param.dig_P1);
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_188:
        ADD     A,#0xa
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_56:
        LCALL   ?L_TO_FLT
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_36000000
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V12
        LCALL   ?FLT_MUL
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_168:
        LCALL   ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_139:
        LCALL   ?L_TO_FLT
        MOV     R0,#?V12
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        MOV     R0,#?V4
        MOV     R1,#?V12
        LCALL   ?FLT_ADD
        MOV     DPTR,#__Constant_2e800000
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_3f800000
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_ADD
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_102:
        MOV     ?V8,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V9,A
        CLR     A
        MOV     ?V10,A
        MOV     ?V11,A
        MOV     R0,#?V8
        LCALL   ?UL_TO_FLT
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        MOV     ?V8,?V4
        MOV     ?V9,?V5
        MOV     ?V10,?V6
        MOV     ?V11,?V7
// 2125 	pressure = 1048576.0 - (double)v_uncom_pressure_s32;
        MOV     ?V4,#0x0
        MOV     ?V5,#0x0
        MOV     ?V6,#-0x80
        MOV     ?V7,#0x49
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V12
        LCALL   ?L_TO_FLT
        MOV     R0,#?V4
        MOV     R1,#?V12
        LCALL   ?FLT_SUB
// 2126 	/* Avoid exception caused by division by zero */
// 2127 	if ((v_x1_u32 > 0) || (v_x1_u32 < 0))
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V8
        MOV     R1,#?V12
        LCALL   ?FLT_GE
        JC      ??bme280_compensate_pressure_double_0
        MOV     DPTR,#__Constant_0
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V8
        MOV     R1,#?V12
        LCALL   ?FLT_LT
        JC      $+5
        LJMP    ??bme280_compensate_pressure_double_1 & 0xFFFF
// 2128 		pressure = (pressure - (v_x2_u32 / 4096.0)) * 6250.0 / v_x1_u32;
??bme280_compensate_pressure_double_0:
        MOV     DPTR,#__Constant_39800000
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V12
        LCALL   ?FLT_MUL
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?FLT_SUB
        MOV     DPTR,#__Constant_45c35000
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_DIV
// 2129 	else
// 2130 		return BME280_INVALID_DATA;
// 2131 	v_x1_u32 = ((double)p_bme280->cal_param.dig_P9) *
// 2132 	pressure * pressure / 2147483648.0;
// 2133 	v_x2_u32 = pressure * ((double)p_bme280->cal_param.dig_P8) / 32768.0;
// 2134 	pressure = pressure + (v_x1_u32 + v_x2_u32 +
// 2135 	((double)p_bme280->cal_param.dig_P7)) / 16.0;
// 2136 
// 2137 	return pressure;
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_378:
        LCALL   ?L_TO_FLT
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_30000000
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_97:
        LCALL   ?L_TO_FLT
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_38000000
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V8
        MOV     R1,#?V12
        LCALL   ?FLT_MUL
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?FLT_ADD
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_171:
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_138:
        LCALL   ?L_TO_FLT
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?FLT_ADD
        MOV     DPTR,#__Constant_3d800000
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?FLT_ADD
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     R4,?V2
        MOV     R5,?V3
        SJMP    ??bme280_compensate_pressure_double_2
??bme280_compensate_pressure_double_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R4,#0x0
        MOV     R5,#0x0
??bme280_compensate_pressure_double_2:
        LJMP    ?Subroutine4 & 0xFFFF
// 2138 }
          CFI EndBlock cfiBlock825

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond826 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_170
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond827 Using cfiCommon0
          CFI (cfiCond827) Function bme280_compensate_pressure_double
          CFI (cfiCond827) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond827) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond827) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond827) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond827) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond827) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond827) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond827) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond827) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond827) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond827) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond827) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond827) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond827) CFA_SP SP+-2
          CFI (cfiCond827) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function bme280_compensate_pressure_int64
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond828) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond828) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond828) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond828) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond828) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond828) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond828) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond828) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond828) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond828) CFA_SP SP+-2
          CFI (cfiCond828) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker829 Using cfiCommon1
          CFI (cfiPicker829) NoFunction
          CFI (cfiPicker829) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_253:
        ADD     A,#0x12
        RET
          CFI EndBlock cfiCond826
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiPicker829

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond830 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond831 Using cfiCommon0
          CFI (cfiCond831) Function bme280_compensate_pressure_double
          CFI (cfiCond831) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond831) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond831) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond831) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond831) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond831) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond831) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond831) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond831) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond831) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond831) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond831) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond831) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond831) CFA_SP SP+-2
          CFI (cfiCond831) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond832 Using cfiCommon0
          CFI (cfiCond832) Function bme280_compensate_pressure_int64
          CFI (cfiCond832) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond832) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond832) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond832) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond832) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond832) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond832) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond832) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond832) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond832) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond832) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond832) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond832) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond832) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond832) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond832) CFA_SP SP+-2
          CFI (cfiCond832) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker833 Using cfiCommon1
          CFI (cfiPicker833) NoFunction
          CFI (cfiPicker833) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_252:
        ADD     A,#0x8
        RET
          CFI EndBlock cfiCond830
          CFI EndBlock cfiCond831
          CFI EndBlock cfiCond832
          CFI EndBlock cfiPicker833

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond834 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function bme280_compensate_pressure_double
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond835) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond835) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond835) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond835) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond835) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond835) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond835) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond835) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+-2
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond836 Using cfiCommon0
          CFI (cfiCond836) Function bme280_compensate_pressure_int64
          CFI (cfiCond836) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond836) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond836) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond836) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond836) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond836) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond836) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond836) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond836) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond836) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond836) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond836) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond836) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond836) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond836) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond836) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond836) CFA_SP SP+-2
          CFI (cfiCond836) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker837 Using cfiCommon1
          CFI (cfiPicker837) NoFunction
          CFI (cfiPicker837) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_251:
        ADD     A,#0x10
        RET
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiCond836
          CFI EndBlock cfiPicker837

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond838 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32
          CFI Conditional ??CrossCallReturnLabel_149
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond839 Using cfiCommon0
          CFI (cfiCond839) Function bme280_compensate_pressure_double
          CFI (cfiCond839) Conditional ??CrossCallReturnLabel_150
          CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond839) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond839) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond839) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond839) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond839) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond839) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond839) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond839) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond839) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond839) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond839) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond839) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond839) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond839) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond839) CFA_SP SP+-2
          CFI (cfiCond839) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker840 Using cfiCommon1
          CFI (cfiPicker840) NoFunction
          CFI (cfiPicker840) Picker
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_231:
        RET
          CFI EndBlock cfiCond838
          CFI EndBlock cfiCond839
          CFI EndBlock cfiPicker840

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond841 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32_sixteen_bit_output
          CFI Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function bme280_compensate_humidity_int32
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_90
          CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond842) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond842) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond842) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond842) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond842) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond842) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond842) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond842) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond842) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond842) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond842) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond842) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond842) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond842) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond842) CFA_SP SP+-4
          CFI (cfiCond842) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond843 Using cfiCommon0
          CFI (cfiCond843) Function bme280_compensate_temperature_double
          CFI (cfiCond843) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_91
          CFI (cfiCond843) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond843) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond843) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond843) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond843) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond843) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond843) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond843) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond843) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond843) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond843) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond843) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond843) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond843) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond843) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond843) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond843) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond843) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond843) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond843) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond843) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond843) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond843) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond843) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond843) CFA_SP SP+-4
          CFI (cfiCond843) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function bme280_compensate_humidity_double
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_92
          CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond844) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond844) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond844) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond844) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond844) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond844) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond844) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond844) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond844) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond844) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond844) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond844) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond844) CFA_SP SP+-4
          CFI (cfiCond844) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function bme280_compensate_temperature_int32
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_149
          CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond845) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond845) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond845) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond845) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond845) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond845) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond845) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond845) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond845) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond845) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond845) CFA_SP SP+-4
          CFI (cfiCond845) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond846 Using cfiCommon0
          CFI (cfiCond846) Function bme280_compensate_pressure_double
          CFI (cfiCond846) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_150
          CFI (cfiCond846) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond846) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond846) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond846) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond846) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond846) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond846) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond846) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond846) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond846) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond846) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond846) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond846) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond846) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond846) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond846) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond846) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond846) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond846) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond846) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond846) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond846) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond846) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond846) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond846) CFA_SP SP+-4
          CFI (cfiCond846) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond847 Using cfiCommon0
          CFI (cfiCond847) Function bme280_compensate_pressure_int32
          CFI (cfiCond847) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_15
          CFI (cfiCond847) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond847) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond847) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond847) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond847) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond847) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond847) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond847) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond847) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond847) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond847) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond847) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond847) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond847) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond847) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond847) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond847) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond847) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond847) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond847) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond847) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond847) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond847) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond847) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond847) CFA_SP SP+-4
          CFI (cfiCond847) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function bme280_compensate_pressure_int64
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_16
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-4
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker849 Using cfiCommon1
          CFI (cfiPicker849) NoFunction
          CFI (cfiPicker849) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_371:
        ADD     A,#0x21
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiCond846
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiPicker849

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond850 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_137
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond851 Using cfiCommon0
          CFI (cfiCond851) Function bme280_compensate_pressure_double
          CFI (cfiCond851) Conditional ??CrossCallReturnLabel_138
          CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond851) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond851) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond851) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond851) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond851) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond851) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond851) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond851) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond851) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond851) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond851) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond851) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond851) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond851) CFA_SP SP+-2
          CFI (cfiCond851) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker852 Using cfiCommon1
          CFI (cfiPicker852) NoFunction
          CFI (cfiPicker852) Picker
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_233:
        RET
          CFI EndBlock cfiCond850
          CFI EndBlock cfiCond851
          CFI EndBlock cfiPicker852

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond853 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function bme280_compensate_pressure_double
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_102
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond854) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond854) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond854) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond854) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond854) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond854) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond854) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond854) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+-2
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function bme280_compensate_pressure_int64
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond855) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond855) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond855) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond855) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond855) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond855) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond855) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond855) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond855) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond855) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond855) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond855) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond855) CFA_SP SP+-2
          CFI (cfiCond855) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker856 Using cfiCommon1
          CFI (cfiPicker856) NoFunction
          CFI (cfiPicker856) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_244:
        ADD     A,#0x6
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_266:
        RET
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiPicker856

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond857 Using cfiCommon0
          CFI Function bme280_compensate_humidity_int32
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond858 Using cfiCommon0
          CFI (cfiCond858) Function bme280_compensate_pressure_double
          CFI (cfiCond858) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond858) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond858) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond858) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond858) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond858) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond858) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond858) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond858) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond858) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond858) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond858) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond858) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond858) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond858) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond858) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond858) CFA_SP SP+-2
          CFI (cfiCond858) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function bme280_compensate_pressure_double
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond859) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond859) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond859) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond859) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond859) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond859) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond859) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond859) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond859) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond859) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond859) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond859) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond859) CFA_SP SP+-2
          CFI (cfiCond859) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function bme280_compensate_pressure_double
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond860) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond860) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond860) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond860) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond860) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond860) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond860) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond860) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond860) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond860) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond860) CFA_SP SP+-2
          CFI (cfiCond860) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond861 Using cfiCommon0
          CFI (cfiCond861) Function bme280_compensate_pressure_double
          CFI (cfiCond861) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond861) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond861) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond861) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond861) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond861) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond861) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond861) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond861) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond861) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond861) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond861) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond861) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond861) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond861) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond861) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond861) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond861) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond861) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond861) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond861) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond861) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond861) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond861) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond861) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond861) CFA_SP SP+-2
          CFI (cfiCond861) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function bme280_compensate_humidity_double
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond862) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond862) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond862) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond862) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond862) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond862) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond862) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond862) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond862) CFA_SP SP+-6
          CFI (cfiCond862) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function bme280_compensate_humidity_double
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond863) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond863) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond863) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond863) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond863) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond863) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond863) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond863) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond863) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond863) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond863) CFA_SP SP+-6
          CFI (cfiCond863) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker864 Using cfiCommon1
          CFI (cfiPicker864) NoFunction
          CFI (cfiPicker864) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_234:
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond857
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiPicker864
// 2139 
// 2140 /*!
// 2141  * @brief Reads actual humidity from uncompensated humidity
// 2142  * @note returns the value in relative humidity (%rH)
// 2143  * @note Output value of "42.12" equals 42.12 %rH
// 2144  *
// 2145  *  @param v_uncom_humidity_s32 : value of uncompensated humidity
// 2146  *
// 2147  *
// 2148  *
// 2149  *  @return Return the actual humidity in floating point
// 2150  *
// 2151 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2152 double bme280_compensate_humidity_double(s32 v_uncom_humidity_s32)
bme280_compensate_humidity_double:
          CFI Block cfiBlock865 Using cfiCommon0
          CFI Function bme280_compensate_humidity_double
        CODE
// 2153 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V6,R4
        MOV     ?V7,R5
// 2154 	double var_h = BME280_INIT_VALUE;
// 2155 
// 2156 	var_h = (((double)p_bme280->cal_param.t_fine) - 76800.0);
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_92:
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_c7960000
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?FLT_ADD
// 2157 	if ((var_h > 0) || (var_h < 0))
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?FLT_GE
        JC      ??bme280_compensate_humidity_double_0
        MOV     DPTR,#__Constant_0
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?FLT_LT
        JC      $+5
        LJMP    ??bme280_compensate_humidity_double_1 & 0xFFFF
// 2158 		var_h = (v_uncom_humidity_s32 -
// 2159 		(((double)p_bme280->cal_param.dig_H4) * 64.0 +
// 2160 		((double)p_bme280->cal_param.dig_H5) / 16384.0 * var_h))*
// 2161 		(((double)p_bme280->cal_param.dig_H2) / 65536.0 *
// 2162 		(1.0 + ((double) p_bme280->cal_param.dig_H6)
// 2163 		/ 67108864.0 * var_h * (1.0 + ((double)
// 2164 		p_bme280->cal_param.dig_H3) / 67108864.0 * var_h)));
??bme280_compensate_humidity_double_0:
        MOV     R0,#?V4
        LCALL   ?L_TO_FLT
        PUSH    ?V4
          CFI CFA_SP SP+-1
        PUSH    ?V5
          CFI CFA_SP SP+-2
        PUSH    ?V6
          CFI CFA_SP SP+-3
        PUSH    ?V7
          CFI CFA_SP SP+-4
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_189:
        ADD     A,#0x1c
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_57:
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_42800000
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_190:
        ADD     A,#0x1e
        LCALL   ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_140:
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_38800000
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V12
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        MOV     R0,#?V12
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
        MOV     R0,#?V4
        MOV     R1,#?V12
        LCALL   ?FLT_ADD
        POP     ?V11
          CFI CFA_SP SP+-3
        POP     ?V10
          CFI CFA_SP SP+-2
        POP     ?V9
          CFI CFA_SP SP+-1
        POP     ?V8
          CFI CFA_SP SP+0
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?FLT_SUB
        PUSH    ?V8
          CFI CFA_SP SP+-1
        PUSH    ?V9
          CFI CFA_SP SP+-2
        PUSH    ?V10
          CFI CFA_SP SP+-3
        PUSH    ?V11
          CFI CFA_SP SP+-4
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_191:
        ADD     A,#0x19
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_58:
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_37800000
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        PUSH    ?V4
          CFI CFA_SP SP+-5
        PUSH    ?V5
          CFI CFA_SP SP+-6
        PUSH    ?V6
          CFI CFA_SP SP+-7
        PUSH    ?V7
          CFI CFA_SP SP+-8
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_144:
        MOV     ?V4,A
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_400:
        MOV     R0,#?V4
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_32800000
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_126:
        MOV     R0,#?V12
        LCALL   ?UL_TO_FLT
        MOV     DPTR,#__Constant_32800000
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V12
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
        MOV     R0,#?V12
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_3f800000
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        MOV     R0,#?V12
        MOV     R1,#?V0
        LCALL   ?FLT_ADD
        MOV     R0,#?V4
        MOV     R1,#?V12
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_3f800000
        MOV     R0,#?V0
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?FLT_ADD
        POP     ?V11
          CFI CFA_SP SP+-7
        POP     ?V10
          CFI CFA_SP SP+-6
        POP     ?V9
          CFI CFA_SP SP+-5
        POP     ?V8
          CFI CFA_SP SP+-4
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?FLT_MUL
        POP     ?V3
          CFI CFA_SP SP+-3
        POP     ?V2
          CFI CFA_SP SP+-2
        POP     ?V1
          CFI CFA_SP SP+-1
        POP     ?V0
          CFI CFA_SP SP+0
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?FLT_MUL
// 2165 	else
// 2166 		return BME280_INVALID_DATA;
// 2167 	var_h = var_h * (1.0 - ((double)
// 2168 	p_bme280->cal_param.dig_H1)*var_h / 524288.0);
        MOV     ?V4,#0x0
        MOV     ?V5,#0x0
        MOV     ?V6,#-0x80
        MOV     ?V7,#0x3f
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_128:
        MOV     R0,#?V8
        LCALL   ?UL_TO_FLT
        MOV     R0,#?V8
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_36000000
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V8
        MOV     R1,#?V12
        LCALL   ?FLT_MUL
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?FLT_SUB
        MOV     R0,#?V4
        MOV     R1,#?V0
        LCALL   ?FLT_MUL
        MOV     ?V0,?V4
        MOV     ?V1,?V5
        MOV     ?V2,?V6
        MOV     ?V3,?V7
// 2169 	if (var_h > 100.0)
        MOV     DPTR,#__Constant_42c80001
        MOV     R0,#?V4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?FLT_GE
        JNC     ??bme280_compensate_humidity_double_2
// 2170 		var_h = 100.0;
        MOV     ?V0,#0x0
        MOV     ?V1,#0x0
        MOV     ?V2,#-0x38
        MOV     ?V3,#0x42
        SJMP    ??bme280_compensate_humidity_double_3
??bme280_compensate_humidity_double_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R4,#0x0
        MOV     R5,#0x0
        SJMP    ??bme280_compensate_humidity_double_4
// 2171 	else if (var_h < 0.0)
??bme280_compensate_humidity_double_2:
        MOV     DPTR,#__Constant_0
        MOV     R0,#?V4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?FLT_LT
        JNC     ??bme280_compensate_humidity_double_3
// 2172 		var_h = 0.0;
        MOV     ?V0,#0x0
        MOV     ?V1,#0x0
        MOV     ?V2,#0x0
        MOV     ?V3,#0x0
// 2173 	return var_h;
??bme280_compensate_humidity_double_3:
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     R4,?V2
        MOV     R5,?V3
??bme280_compensate_humidity_double_4:
        LJMP    ??Subroutine124_0 & 0xFFFF
// 2174 
// 2175 }
          CFI EndBlock cfiBlock865

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond866 Using cfiCommon0
          CFI Function bme280_compensate_humidity_int32
          CFI Conditional ??CrossCallReturnLabel_143
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond867 Using cfiCommon0
          CFI (cfiCond867) Function bme280_compensate_humidity_double
          CFI (cfiCond867) Conditional ??CrossCallReturnLabel_144
          CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond867) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond867) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond867) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond867) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond867) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond867) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond867) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond867) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond867) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond867) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond867) CFA_SP SP+-10
          CFI (cfiCond867) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker868 Using cfiCommon1
          CFI (cfiPicker868) NoFunction
          CFI (cfiPicker868) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_247:
        ADD     A,#0x20
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_269:
        RET
          CFI EndBlock cfiCond866
          CFI EndBlock cfiCond867
          CFI EndBlock cfiPicker868

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond869 Using cfiCommon0
          CFI Function bme280_get_forced_uncomp_pressure_temperature_humidity
          CFI Conditional ??CrossCallReturnLabel_265
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond870 Using cfiCommon0
          CFI (cfiCond870) Function bme280_compensate_pressure_int32
          CFI (cfiCond870) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_101
          CFI (cfiCond870) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond870) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond870) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond870) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond870) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond870) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond870) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond870) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond870) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond870) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond870) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond870) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond870) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond870) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond870) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond870) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond870) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond870) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond870) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond870) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond870) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond870) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond870) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond870) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond870) CFA_SP SP+-4
          CFI (cfiCond870) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond871 Using cfiCommon0
          CFI (cfiCond871) Function bme280_compensate_pressure_double
          CFI (cfiCond871) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_102
          CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond871) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond871) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond871) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond871) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond871) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond871) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond871) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond871) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond871) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond871) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond871) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond871) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond871) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond871) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond871) CFA_SP SP+-4
          CFI (cfiCond871) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond872 Using cfiCommon0
          CFI (cfiCond872) Function bme280_compensate_pressure_int64
          CFI (cfiCond872) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_103
          CFI (cfiCond872) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond872) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond872) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond872) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond872) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond872) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond872) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond872) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond872) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond872) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond872) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond872) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond872) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond872) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond872) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond872) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond872) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond872) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond872) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond872) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond872) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond872) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond872) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond872) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond872) CFA_SP SP+-4
          CFI (cfiCond872) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond873 Using cfiCommon0
          CFI (cfiCond873) Function bme280_compensate_humidity_int32
          CFI (cfiCond873) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_143
          CFI (cfiCond873) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond873) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond873) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond873) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond873) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond873) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond873) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond873) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond873) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond873) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond873) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond873) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond873) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond873) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond873) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond873) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond873) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond873) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond873) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond873) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond873) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond873) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond873) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond873) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond873) CFA_SP SP+-4
          CFI (cfiCond873) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond874 Using cfiCommon0
          CFI (cfiCond874) Function bme280_compensate_humidity_double
          CFI (cfiCond874) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_144
          CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond874) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond874) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond874) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond874) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond874) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond874) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond874) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond874) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond874) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond874) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond874) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond874) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond874) CFA_SP SP+-12
          CFI (cfiCond874) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function bme280_compensate_humidity_int32
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_127
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond875) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond875) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond875) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+-4
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function bme280_compensate_humidity_double
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_128
          CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond876) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond876) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond876) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond876) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond876) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond876) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond876) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond876) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond876) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond876) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond876) CFA_SP SP+-4
          CFI (cfiCond876) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond877 Using cfiCommon0
          CFI (cfiCond877) Function bme280_compensate_humidity_int32
          CFI (cfiCond877) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_125
          CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond877) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond877) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond877) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond877) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond877) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond877) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond877) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond877) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond877) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond877) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond877) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond877) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond877) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond877) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond877) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond877) CFA_SP SP+-4
          CFI (cfiCond877) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function bme280_compensate_humidity_double
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_126
          CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond878) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond878) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond878) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond878) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond878) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond878) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond878) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond878) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond878) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond878) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond878) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond878) CFA_SP SP+-12
          CFI (cfiCond878) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond879 Using cfiCommon0
          CFI (cfiCond879) Function bme280_compute_wait_time
          CFI (cfiCond879) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_145
          CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond879) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond879) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond879) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond879) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond879) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond879) CFA_SP SP+-4
          CFI (cfiCond879) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond880 Using cfiCommon0
          CFI (cfiCond880) Function bme280_compute_wait_time
          CFI (cfiCond880) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_146
          CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond880) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond880) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond880) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond880) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond880) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond880) CFA_SP SP+-4
          CFI (cfiCond880) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker881 Using cfiCommon1
          CFI (cfiPicker881) NoFunction
          CFI (cfiPicker881) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond869
          CFI EndBlock cfiCond870
          CFI EndBlock cfiCond871
          CFI EndBlock cfiCond872
          CFI EndBlock cfiCond873
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiCond879
          CFI EndBlock cfiCond880
          CFI EndBlock cfiPicker881

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond882 Using cfiCommon0
          CFI Function bme280_compensate_pressure_double
          CFI Conditional ??CrossCallReturnLabel_139
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond883 Using cfiCommon0
          CFI (cfiCond883) Function bme280_compensate_humidity_double
          CFI (cfiCond883) Conditional ??CrossCallReturnLabel_140
          CFI (cfiCond883) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond883) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond883) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond883) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond883) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond883) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond883) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond883) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond883) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond883) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond883) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond883) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond883) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond883) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond883) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond883) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond883) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond883) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond883) CFA_SP SP+-6
          CFI (cfiCond883) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker884 Using cfiCommon1
          CFI (cfiPicker884) NoFunction
          CFI (cfiPicker884) Picker
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_390:
        MOV     R0,#?V12
        RET
          CFI EndBlock cfiCond882
          CFI EndBlock cfiCond883
          CFI EndBlock cfiPicker884

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond885 Using cfiCommon0
          CFI Function bme280_compensate_humidity_int32
          CFI Conditional ??CrossCallReturnLabel_127
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond886 Using cfiCommon0
          CFI (cfiCond886) Function bme280_compensate_humidity_double
          CFI (cfiCond886) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond886) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond886) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond886) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond886) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond886) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond886) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond886) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond886) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond886) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond886) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond886) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond886) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond886) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond886) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond886) CFA_SP SP+-2
          CFI (cfiCond886) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker887 Using cfiCommon1
          CFI (cfiPicker887) NoFunction
          CFI (cfiPicker887) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_246:
        ADD     A,#0x18
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_268:
        MOV     ?V8,A
        CLR     A
        MOV     ?V9,A
        MOV     ?V10,A
        MOV     ?V11,A
        RET
          CFI EndBlock cfiCond885
          CFI EndBlock cfiCond886
          CFI EndBlock cfiPicker887

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond888 Using cfiCommon0
          CFI Function bme280_compensate_humidity_int32
          CFI Conditional ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond889 Using cfiCommon0
          CFI (cfiCond889) Function bme280_compensate_humidity_double
          CFI (cfiCond889) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond889) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond889) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond889) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond889) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond889) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond889) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond889) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond889) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond889) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond889) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond889) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond889) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond889) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond889) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond889) CFA_SP SP+-10
          CFI (cfiCond889) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker890 Using cfiCommon1
          CFI (cfiPicker890) NoFunction
          CFI (cfiPicker890) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_245:
        ADD     A,#0x1b
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_267:
        MOV     ?V12,A
        CLR     A
        MOV     ?V13,A
        MOV     ?V14,A
        MOV     ?V15,A
        RET
          CFI EndBlock cfiCond888
          CFI EndBlock cfiCond889
          CFI EndBlock cfiPicker890
// 2176 #endif
// 2177 
// 2178 #if defined(BME280_ENABLE_INT64) && defined(BME280_64BITSUPPORT_PRESENT)
// 2179 /*!
// 2180  * @brief Reads actual pressure from uncompensated pressure
// 2181  * @note Returns the value in Pa as unsigned 32 bit
// 2182  * integer in Q24.8 format (24 integer bits and
// 2183  * 8 fractional bits).
// 2184  * @note Output value of "24674867"
// 2185  * represents 24674867 / 256 = 96386.2 Pa = 963.862 hPa
// 2186  *
// 2187  *
// 2188  *
// 2189  *  @param  v_uncom_pressure_s32 : value of uncompensated temperature
// 2190  *
// 2191  *
// 2192  *  @return Return the actual pressure in u32
// 2193  *
// 2194 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2195 u32 bme280_compensate_pressure_int64(s32 v_uncom_pressure_s32)
bme280_compensate_pressure_int64:
          CFI Block cfiBlock891 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int64
        CODE
// 2196 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine12 & 0xFFFF
// 2197 	s64 v_x1_s64r = BME280_INIT_VALUE;
// 2198 	s64 v_x2_s64r = BME280_INIT_VALUE;
// 2199 	s64 pressure = BME280_INIT_VALUE;
// 2200 
// 2201 	v_x1_s64r = ((s64)p_bme280->cal_param.t_fine)
// 2202 	- 128000;
??CrossCallReturnLabel_16:
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_fffe0c00
        MOV     R0,#?V4
        LCALL   ?L_ADD_X
// 2203 	v_x2_s64r = v_x1_s64r * v_x1_s64r *
// 2204 	(s64)p_bme280->cal_param.dig_P6;
// 2205 	v_x2_s64r = v_x2_s64r + ((v_x1_s64r *
// 2206 	(s64)p_bme280->cal_param.dig_P5)
// 2207 	<< BME280_SHIFT_BIT_POSITION_BY_17_BITS);
// 2208 	v_x2_s64r = v_x2_s64r +
// 2209 	(((s64)p_bme280->cal_param.dig_P4)
// 2210 	<< BME280_SHIFT_BIT_POSITION_BY_35_BITS);
        MOV     ?V8,?V4
        MOV     ?V9,?V5
        MOV     ?V10,?V6
        MOV     ?V11,?V7
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?L_MUL
        MOV     ?V0,?V8
        MOV     ?V1,?V9
        MOV     ?V2,?V10
        MOV     ?V3,?V11
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_166:
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_387:
        LCALL   ?L_MUL
        PUSH    ?V0
          CFI CFA_SP SP+-1
        PUSH    ?V1
          CFI CFA_SP SP+-2
        PUSH    ?V2
          CFI CFA_SP SP+-3
        PUSH    ?V3
          CFI CFA_SP SP+-4
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_389:
        LCALL   ?L_MUL
        MOV     A,#0x11
        MOV     R0,#?V0
        LCALL   ?L_SHL
        POP     ?V15
          CFI CFA_SP SP+-3
        POP     ?V14
          CFI CFA_SP SP+-2
        POP     ?V13
          CFI CFA_SP SP+-1
        POP     ?V12
          CFI CFA_SP SP+0
        MOV     R0,#?V12
        MOV     R1,#?V0
        LCALL   ?L_ADD
// 2211 	v_x1_s64r = ((v_x1_s64r * v_x1_s64r *
// 2212 	(s64)p_bme280->cal_param.dig_P3)
// 2213 	>> BME280_SHIFT_BIT_POSITION_BY_08_BITS) +
// 2214 	((v_x1_s64r * (s64)p_bme280->cal_param.dig_P2)
// 2215 	<< BME280_SHIFT_BIT_POSITION_BY_12_BITS);
// 2216 	v_x1_s64r = (((((s64)1)
// 2217 	<< BME280_SHIFT_BIT_POSITION_BY_47_BITS) + v_x1_s64r)) *
// 2218 	((s64)p_bme280->cal_param.dig_P1)
// 2219 	>> BME280_SHIFT_BIT_POSITION_BY_33_BITS;
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_100:
        MOV     R0,#?V8
        MOV     R1,#?V0
        LCALL   ?L_MUL
        MOV     A,#0x8
        MOV     R0,#?V8
        LCALL   ?SL_SHR
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_169:
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_285:
        LCALL   ?L_MUL
        MOV     A,#0xc
        MOV     R0,#?V4
        LCALL   ?L_SHL
        MOV     R0,#?V8
        MOV     R1,#?V4
        LCALL   ?L_ADD
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_103:
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_193:
        MOV     R0,#?V8
        MOV     R1,#?V0
        LCALL   ?L_MUL
        MOV     A,#0x1f
        MOV     R0,#?V8
        LCALL   ?SL_SHR
        MOV     ?V4,?V8
        MOV     ?V5,?V9
        MOV     ?V6,?V10
        MOV     ?V7,?V11
// 2220 	pressure = 1048576 - v_uncom_pressure_s32;
// 2221 	/* Avoid exception caused by division by zero */
// 2222 	if (v_x1_s64r != BME280_INIT_VALUE)
        MOV     A,?V4
        ORL     A,?V5
        ORL     A,?V6
        ORL     A,?V7
        JNZ     $+5
        LJMP    ??bme280_compensate_pressure_int64_0 & 0xFFFF
// 2223 		#if defined __KERNEL__
// 2224 			pressure = div64_s64((((pressure
// 2225 			<< BME280_SHIFT_BIT_POSITION_BY_31_BITS) - v_x2_s64r)
// 2226 			* 3125), v_x1_s64r);
// 2227 		#else
// 2228 			pressure = (((pressure
// 2229 			<< BME280_SHIFT_BIT_POSITION_BY_31_BITS) - v_x2_s64r)
// 2230 			* 3125) / v_x1_s64r;
        MOV     ?V0,#0x0
        MOV     ?V1,#0x0
        MOV     ?V2,#0x10
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,#?V0
        LCALL   ?L_SUB_X
        MOV     A,#0x1f
        MOV     R0,#?V0
        LCALL   ?L_SHL
        MOV     R0,#?V0
        MOV     R1,#?V12
        LCALL   ?L_SUB
        MOV     DPTR,#__Constant_c35
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?L_MUL
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_DIV_MOD
        MOV     ?V4,?V0
        MOV     ?V5,?V1
        MOV     ?V6,?V2
        MOV     ?V7,?V3
// 2231 		#endif
// 2232 	else
// 2233 		return BME280_INVALID_DATA;
// 2234 	v_x1_s64r = (((s64)p_bme280->cal_param.dig_P9) *
// 2235 	(pressure >> BME280_SHIFT_BIT_POSITION_BY_13_BITS) *
// 2236 	(pressure >> BME280_SHIFT_BIT_POSITION_BY_13_BITS))
// 2237 	>> BME280_SHIFT_BIT_POSITION_BY_25_BITS;
// 2238 	v_x2_s64r = (((s64)p_bme280->cal_param.dig_P8) *
// 2239 	pressure) >> BME280_SHIFT_BIT_POSITION_BY_19_BITS;
// 2240 	pressure = (((pressure + v_x1_s64r +
// 2241 	v_x2_s64r) >> BME280_SHIFT_BIT_POSITION_BY_08_BITS) +
// 2242 	(((s64)p_bme280->cal_param.dig_P7)
// 2243 	<< BME280_SHIFT_BIT_POSITION_BY_04_BITS));
// 2244 
// 2245 	return (u32)pressure;
        MOV     ?V12,?V4
        MOV     ?V13,?V5
        MOV     ?V14,?V6
        MOV     ?V15,?V7
        MOV     A,#0xd
        MOV     R0,#?V12
        LCALL   ?SL_SHR
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_152:
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V8,?V0
        MOV     ?V9,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V10,A
        MOV     ?V11,A
        MOV     R0,#?V8
        MOV     R1,#?V12
        LCALL   ?L_MUL
        MOV     R0,#?V8
        MOV     R1,#?V12
        LCALL   ?L_MUL
        MOV     A,#0x19
        MOV     R0,#?V8
        LCALL   ?SL_SHR
        MOV     ?V0,?V4
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?L_ADD
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_98:
        MOV     R1,#?V4
        LCALL   ?L_MUL
        MOV     A,#0x13
        MOV     R0,#?V8
        LCALL   ?SL_SHR
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?L_ADD
        MOV     A,#0x8
        MOV     R0,#?V0
        LCALL   ?SL_SHR
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_172:
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_124:
        MOV     A,#0x4
        MOV     R0,#?V4
        LCALL   ?L_SHL
        MOV     R0,#?V0
        MOV     R1,#?V4
        LCALL   ?L_ADD
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     R4,?V2
        MOV     R5,?V3
        SJMP    ??bme280_compensate_pressure_int64_1
??bme280_compensate_pressure_int64_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R4,#0x0
        MOV     R5,#0x0
??bme280_compensate_pressure_int64_1:
        LJMP    ?Subroutine4 & 0xFFFF
// 2246 }
          CFI EndBlock cfiBlock891

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond892 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32
          CFI Conditional ??CrossCallReturnLabel_192
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function bme280_compensate_pressure_int64
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond893) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond893) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond893) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond893) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond893) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond893) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond893) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond893) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond893) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond893) CFA_SP SP+-2
          CFI (cfiCond893) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker894 Using cfiCommon1
          CFI (cfiPicker894) NoFunction
          CFI (cfiPicker894) Picker
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        CLR     A
        MOV     ?V2,A
        MOV     ?V3,A
        RET
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiPicker894

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond895 Using cfiCommon0
          CFI Function bme280_compensate_pressure_double
          CFI Conditional ??CrossCallReturnLabel_151
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function bme280_compensate_pressure_int64
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond896) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond896) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond896) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond896) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond896) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond896) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond896) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond896) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond896) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond896) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond896) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond896) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond896) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond896) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond896) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond896) CFA_SP SP+-2
          CFI (cfiCond896) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker897 Using cfiCommon1
          CFI (cfiPicker897) NoFunction
          CFI (cfiPicker897) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_249:
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiPicker897

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond898 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond899 Using cfiCommon0
          CFI (cfiCond899) Function bme280_compensate_pressure_int64
          CFI (cfiCond899) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond899) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond899) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond899) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond899) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond899) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond899) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond899) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond899) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond899) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond899) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond899) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond899) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond899) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond899) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond899) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond899) CFA_SP SP+-2
          CFI (cfiCond899) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker900 Using cfiCommon1
          CFI (cfiPicker900) NoFunction
          CFI (cfiPicker900) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_243:
        ADD     A,#0xa
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_382:
        RET
          CFI EndBlock cfiCond898
          CFI EndBlock cfiCond899
          CFI EndBlock cfiPicker900

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond901 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_381
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function bme280_compensate_pressure_int32
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_99
          CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond902) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond902) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond902) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond902) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond902) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond902) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond902) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond902) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond902) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond902) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond902) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond902) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond902) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond902) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond902) CFA_SP SP+-4
          CFI (cfiCond902) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function bme280_compensate_pressure_int64
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_100
          CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond903) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond903) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond903) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond903) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond903) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond903) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond903) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond903) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond903) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond903) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond903) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond903) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond903) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond903) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond903) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond903) CFA_SP SP+-4
          CFI (cfiCond903) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker904 Using cfiCommon1
          CFI (cfiPicker904) NoFunction
          CFI (cfiPicker904) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiPicker904
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine125_0:
          CFI Block cfiCond905 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_283
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond906 Using cfiCommon0
          CFI (cfiCond906) Function bme280_compensate_humidity_int32
          CFI (cfiCond906) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_284
          CFI (cfiCond906) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond906) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond906) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond906) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond906) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond906) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond906) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond906) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond906) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond906) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond906) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond906) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond906) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond906) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond906) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond906) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond906) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond906) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond906) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond906) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond906) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond906) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond906) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond906) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond906) CFA_SP SP+-4
          CFI (cfiCond906) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function bme280_compensate_pressure_int64
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_285
          CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond907) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond907) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond907) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond907) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond907) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond907) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond907) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond907) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond907) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond907) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond907) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond907) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond907) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond907) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond907) CFA_SP SP+-4
          CFI (cfiCond907) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond908 Using cfiCommon0
          CFI (cfiCond908) Function bme280_compensate_temperature_int32
          CFI (cfiCond908) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_282
          CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond908) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond908) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond908) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond908) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond908) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond908) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond908) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond908) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond908) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond908) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond908) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond908) CFA_SP SP+-4
          CFI (cfiCond908) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond909 Using cfiCommon0
          CFI (cfiCond909) Function bme280_compensate_temperature_double
          CFI (cfiCond909) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_379
          CFI (cfiCond909) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond909) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond909) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond909) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond909) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond909) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond909) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond909) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond909) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond909) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond909) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond909) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond909) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond909) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond909) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond909) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond909) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond909) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond909) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond909) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond909) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond909) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond909) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond909) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond909) CFA_SP SP+-4
          CFI (cfiCond909) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond910 Using cfiCommon0
          CFI (cfiCond910) Function bme280_compensate_temperature_double
          CFI (cfiCond910) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_380
          CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond910) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond910) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond910) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond910) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond910) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond910) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond910) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond910) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond910) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond910) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond910) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond910) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond910) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond910) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond910) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond910) CFA_SP SP+-4
          CFI (cfiCond910) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond911 Using cfiCommon0
          CFI (cfiCond911) Function bme280_compensate_pressure_double
          CFI (cfiCond911) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_378
          CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond911) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond911) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond911) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond911) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond911) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond911) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond911) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond911) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond911) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond911) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond911) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond911) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond911) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond911) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond911) CFA_SP SP+-4
          CFI (cfiCond911) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond912 Using cfiCommon0
          CFI (cfiCond912) Function bme280_compensate_pressure_int32
          CFI (cfiCond912) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond912) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond912) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond912) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond912) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond912) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond912) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond912) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond912) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond912) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond912) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond912) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond912) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond912) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond912) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond912) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond912) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond912) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond912) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond912) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond912) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond912) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond912) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond912) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond912) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond912) CFA_SP SP+-2
          CFI (cfiCond912) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond913 Using cfiCommon0
          CFI (cfiCond913) Function bme280_compensate_pressure_int32
          CFI (cfiCond913) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_99
          CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond913) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond913) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond913) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond913) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond913) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond913) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond913) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond913) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond913) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond913) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond913) CFA_SP SP+-4
          CFI (cfiCond913) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function bme280_compensate_pressure_int64
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_100
          CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond914) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond914) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond914) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond914) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond914) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond914) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond914) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond914) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond914) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond914) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond914) CFA_SP SP+-4
          CFI (cfiCond914) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker915 Using cfiCommon1
          CFI (cfiPicker915) NoFunction
          CFI (cfiPicker915) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V2,A
        MOV     ?V3,A
        RET
          CFI EndBlock cfiCond905
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiCond908
          CFI EndBlock cfiCond909
          CFI EndBlock cfiCond910
          CFI EndBlock cfiCond911
          CFI EndBlock cfiCond912
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiPicker915

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond916 Using cfiCommon0
          CFI Function bme280_compensate_pressure_double
          CFI Conditional ??CrossCallReturnLabel_97
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function bme280_compensate_pressure_int64
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond917) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond917) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond917) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond917) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond917) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond917) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond917) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond917) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond917) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond917) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond917) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond917) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond917) CFA_SP SP+-2
          CFI (cfiCond917) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker918 Using cfiCommon1
          CFI (cfiPicker918) NoFunction
          CFI (cfiPicker918) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_242:
        ADD     A,#0x14
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_232:
        RET
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiPicker918

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond919 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_137
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function bme280_compensate_pressure_double
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_138
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond920) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond920) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond920) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond920) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond920) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond920) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond920) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond920) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond920) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond920) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond920) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+-4
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond921 Using cfiCommon0
          CFI (cfiCond921) Function bme280_compensate_pressure_double
          CFI (cfiCond921) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_97
          CFI (cfiCond921) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond921) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond921) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond921) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond921) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond921) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond921) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond921) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond921) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond921) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond921) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond921) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond921) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond921) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond921) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond921) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond921) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond921) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond921) CFA_SP SP+-4
          CFI (cfiCond921) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond922 Using cfiCommon0
          CFI (cfiCond922) Function bme280_compensate_pressure_int64
          CFI (cfiCond922) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_98
          CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond922) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond922) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond922) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond922) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond922) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond922) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond922) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond922) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond922) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond922) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond922) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond922) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond922) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond922) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond922) CFA_SP SP+-4
          CFI (cfiCond922) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker923 Using cfiCommon1
          CFI (cfiPicker923) NoFunction
          CFI (cfiPicker923) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_274:
        MOV     R0,#?V8
        RET
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiCond921
          CFI EndBlock cfiCond922
          CFI EndBlock cfiPicker923

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond924 Using cfiCommon0
          CFI Function bme280_compensate_temperature_int32
          CFI Conditional ??CrossCallReturnLabel_273
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function bme280_compensate_pressure_int32
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_137
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond925) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond925) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond925) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+-6
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function bme280_compensate_pressure_double
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_138
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond926) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond926) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond926) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond926) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond926) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond926) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond926) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond926) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond926) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond926) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+-6
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond927 Using cfiCommon0
          CFI (cfiCond927) Function bme280_compensate_pressure_double
          CFI (cfiCond927) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_97
          CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond927) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond927) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond927) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond927) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond927) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond927) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond927) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond927) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond927) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond927) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond927) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond927) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond927) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond927) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond927) CFA_SP SP+-6
          CFI (cfiCond927) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond928 Using cfiCommon0
          CFI (cfiCond928) Function bme280_compensate_pressure_int64
          CFI (cfiCond928) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_98
          CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond928) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond928) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond928) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond928) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond928) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond928) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond928) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond928) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond928) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond928) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond928) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond928) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond928) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond928) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond928) CFA_SP SP+-6
          CFI (cfiCond928) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker929 Using cfiCommon1
          CFI (cfiPicker929) NoFunction
          CFI (cfiPicker929) Picker
        MOVX    A,@DPTR
        MOV     ?V8,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V9,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V10,A
        MOV     ?V11,A
        RET
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiCond927
          CFI EndBlock cfiCond928
          CFI EndBlock cfiPicker929

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond930 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_388
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond931 Using cfiCommon0
          CFI (cfiCond931) Function bme280_compensate_pressure_int64
          CFI (cfiCond931) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond931) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond931) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond931) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond931) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond931) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond931) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond931) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond931) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond931) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond931) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond931) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond931) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond931) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond931) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond931) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond931) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond931) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond931) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond931) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond931) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond931) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond931) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond931) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond931) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond931) CFA_SP SP+-6
          CFI (cfiCond931) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker932 Using cfiCommon1
          CFI (cfiPicker932) NoFunction
          CFI (cfiPicker932) Picker
        MOV     ?V0,?V4
        MOV     ?V1,?V5
        MOV     ?V2,?V6
        MOV     ?V3,?V7
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_241:
        ADD     A,#0xe
          CFI EndBlock cfiCond930
          CFI EndBlock cfiCond931
          CFI EndBlock cfiPicker932
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine126_0:
          CFI Block cfiCond933 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_385
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function bme280_compensate_pressure_int32
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond934) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond934) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond934) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond934) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond934) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond934) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond934) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond934) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond934) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond934) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond934) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond934) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond934) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond934) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond934) CFA_SP SP+-2
          CFI (cfiCond934) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function bme280_compensate_pressure_int64
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond935) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond935) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond935) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond935) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond935) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond935) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond935) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond935) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond935) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond935) CFA_SP SP+-2
          CFI (cfiCond935) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond936 Using cfiCommon0
          CFI (cfiCond936) Function bme280_compensate_pressure_int32
          CFI (cfiCond936) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond936) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond936) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond936) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond936) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond936) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond936) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond936) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond936) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond936) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond936) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond936) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond936) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond936) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond936) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond936) CFA_SP SP+-6
          CFI (cfiCond936) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function bme280_compensate_pressure_int64
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond937) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond937) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond937) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond937) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond937) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+-6
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker938 Using cfiCommon1
          CFI (cfiPicker938) NoFunction
          CFI (cfiPicker938) Picker
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_391:
        MOV     R0,#?V0
        MOV     R1,#?V12
        RET
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiPicker938

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond939 Using cfiCommon0
          CFI Function bme280_compensate_pressure_double
          CFI Conditional ??CrossCallReturnLabel_390, ??CrossCallReturnLabel_139
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function bme280_compensate_humidity_double
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_390, ??CrossCallReturnLabel_140
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond940) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond940) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond940) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond940) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond940) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond940) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond940) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond940) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond940) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond940) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond940) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+-8
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function bme280_compensate_pressure_int32
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_391, ??CrossCallReturnLabel_388
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond941) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond941) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond941) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond941) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond941) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond941) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond941) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond941) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond941) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond941) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond941) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+-8
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function bme280_compensate_pressure_int64
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_391, ??CrossCallReturnLabel_389
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond942) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond942) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond942) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond942) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond942) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond942) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond942) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+-8
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function bme280_compensate_pressure_int32
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_391, ??CrossCallReturnLabel_385
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond943) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond943) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond943) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond943) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond943) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond943) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond943) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond943) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond943) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond943) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond943) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+-4
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function bme280_compensate_pressure_int32
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_391, ??CrossCallReturnLabel_386
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond944) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond944) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond944) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond944) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond944) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond944) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond944) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond944) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond944) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond944) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+-4
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function bme280_compensate_pressure_int64
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_391, ??CrossCallReturnLabel_387
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond945) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond945) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond945) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond945) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond945) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+-4
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker946 Using cfiCommon1
          CFI (cfiPicker946) NoFunction
          CFI (cfiPicker946) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V12,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V13,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V14,A
        MOV     ?V15,A
        RET
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiPicker946

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond947 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int32
          CFI Conditional ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function bme280_compensate_pressure_int64
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_16
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond948) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond948) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond948) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond948) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond948) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond948) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond948) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond948) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond948) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond948) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+-2
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker949 Using cfiCommon1
          CFI (cfiPicker949) NoFunction
          CFI (cfiPicker949) Picker
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_228:
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_229:
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiPicker949

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond950 Using cfiCommon0
          CFI Function bme280_compensate_pressure_double
          CFI Conditional ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function bme280_compensate_pressure_int32
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_15
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond951) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond951) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond951) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond951) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond951) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond951) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond951) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond951) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond951) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+-4
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function bme280_compensate_pressure_int64
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_16
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond952) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond952) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond952) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond952) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond952) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond952) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond952) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond952) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond952) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond952) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond952) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+-4
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker953 Using cfiCommon1
          CFI (cfiPicker953) NoFunction
          CFI (cfiPicker953) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiPicker953
// 2247 
// 2248 /*!
// 2249  * @brief Reads actual pressure from uncompensated pressure
// 2250  * @note Returns the value in Pa.
// 2251  * @note Output value of "12337434"
// 2252  * @note represents 12337434 / 128 = 96386.2 Pa = 963.862 hPa
// 2253  *
// 2254  *
// 2255  *
// 2256  *  @param v_uncom_pressure_s32 : value of uncompensated pressure
// 2257  *
// 2258  *
// 2259  *  @return the actual pressure in u32
// 2260  *
// 2261 */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2262 u32 bme280_compensate_pressure_int64_twentyfour_bit_output(
bme280_compensate_pressure_int64_twentyfour_bit_output:
          CFI Block cfiBlock954 Using cfiCommon0
          CFI Function bme280_compensate_pressure_int64_twentyfour_bit_output
        CODE
// 2263 s32 v_uncom_pressure_s32)
// 2264 {
        FUNCALL bme280_compensate_pressure_int64_twentyfour_bit_output, bme280_compensate_pressure_int64
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 2265 	u32 pressure = BME280_INIT_VALUE;
// 2266 
// 2267 	pressure = bme280_compensate_pressure_int64(
// 2268 	v_uncom_pressure_s32);
// 2269 	pressure = (u32)(pressure >> BME280_SHIFT_BIT_POSITION_BY_01_BIT);
// 2270 	return pressure;
        ; Setup parameters for call to function bme280_compensate_pressure_int64
        LCALL   `??bme280_compensate_pressure_int64::?relay`; Banked call to: bme280_compensate_pressure_int64
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V2,R4
        MOV     ?V3,R5
        MOV     A,#0x1
        MOV     R0,#?V0
        LCALL   ?UL_SHR
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     R4,?V2
        MOV     R5,?V3
        LJMP    ??Subroutine109_0 & 0xFFFF
// 2271 }
          CFI EndBlock cfiBlock954
// 2272 #endif
// 2273 
// 2274 /*!
// 2275  * @brief Computing waiting time for sensor data read
// 2276  *
// 2277  *
// 2278  *
// 2279  *
// 2280  *  @param v_delaytime_u8 : The value of delay time for force mode
// 2281  *
// 2282  *
// 2283  *	@retval 0 -> Success
// 2284  *
// 2285  *
// 2286  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2287 BME280_RETURN_FUNCTION_TYPE bme280_compute_wait_time(u8
bme280_compute_wait_time:
          CFI Block cfiBlock955 Using cfiCommon0
          CFI Function bme280_compute_wait_time
        CODE
// 2288 *v_delaytime_u8)
// 2289 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
// 2290 	/* used to return the communication result*/
// 2291 	BME280_RETURN_FUNCTION_TYPE com_rslt = SUCCESS;
// 2292 
// 2293 	*v_delaytime_u8 = (T_INIT_MAX +
// 2294 	T_MEASURE_PER_OSRS_MAX *
// 2295 	(((1 <<
// 2296 	p_bme280->oversamp_temperature)
// 2297 	>> BME280_SHIFT_BIT_POSITION_BY_01_BIT)
// 2298 	+ ((1 << p_bme280->oversamp_pressure)
// 2299 	>> BME280_SHIFT_BIT_POSITION_BY_01_BIT) +
// 2300 	((1 << p_bme280->oversamp_humidity)
// 2301 	>> BME280_SHIFT_BIT_POSITION_BY_01_BIT))
// 2302 	+ ((p_bme280->oversamp_pressure > 0) ?
// 2303 	T_SETUP_PRESSURE_MAX : 0) +
// 2304 	((p_bme280->oversamp_humidity > 0) ?
// 2305 	T_SETUP_HUMIDITY_MAX : 0) + 15) / 16;
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_145:
        JZ      ??bme280_compute_wait_time_0
        MOV     ?V0,#0xa
        SJMP    ??bme280_compute_wait_time_1
??bme280_compute_wait_time_0:
        MOV     ?V0,#0x0
??bme280_compute_wait_time_1:
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_147:
        JZ      ??bme280_compute_wait_time_2
        MOV     R6,#0xa
        SJMP    ??bme280_compute_wait_time_3
??bme280_compute_wait_time_2:
        MOV     R6,#0x0
??bme280_compute_wait_time_3:
        MOV     ?V2,#0x1
        MOV     ?V3,#0x0
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_154:
        MOVX    A,@DPTR
        MOV     R0,#?V2
        LCALL   ?S_SHL
        INC     A
        MOV     R0,#?V2
        LCALL   ?SS_SHR
        MOV     ?V4,#0x1
        MOV     ?V5,A
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_146:
        MOV     R0,#?V4
        LCALL   ?S_SHL
        INC     A
        MOV     R0,#?V4
        LCALL   ?SS_SHR
        MOV     A,?V2
        ADD     A,?V4
        MOV     R2,A
        MOV     A,?V3
        ADDC    A,?V5
        MOV     R3,A
        MOV     ?V2,#0x1
        MOV     ?V3,#0x0
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_148:
        MOV     R0,#?V2
        LCALL   ?S_SHL
        INC     A
        MOV     R0,#?V2
        LCALL   ?SS_SHR
        MOV     A,R2
        ADD     A,?V2
        MOV     R0,A
        MOV     A,R3
        ADDC    A,?V3
        MOV     R1,A
        MOV     A,R0
        MOV     B,#0x25
        MUL     AB
        MOV     R0,A
        MOV     R2,B
        MOV     B,#0x25
        MOV     A,R1
        MUL     AB
        ADD     A,R2
        MOV     R1,A
        MOV     A,R0
        ADD     A,?V0
        MOV     R0,A
        CLR     A
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,R6
        MOV     R0,A
        CLR     A
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0x23
        MOV     R0,A
        JNC     ??bme280_compute_wait_time_4
        INC     R1
??bme280_compute_wait_time_4:
        MOV     R2,#0x10
        MOV     R3,#0x0
        LCALL   ?S_DIV_MOD
        MOV     A,R0
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    @DPTR,A
// 2306 	return com_rslt;
        MOV     R1,#0x0
        LJMP    ?Subroutine7 & 0xFFFF
// 2307 }
          CFI EndBlock cfiBlock955

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond956 Using cfiCommon0
          CFI Function bme280_get_oversamp_temperature
          CFI Conditional ??CrossCallReturnLabel_153
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond957 Using cfiCommon0
          CFI (cfiCond957) Function bme280_compute_wait_time
          CFI (cfiCond957) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond957) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond957) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond957) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond957) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond957) CFA_SP SP+-2
          CFI (cfiCond957) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker958 Using cfiCommon1
          CFI (cfiPicker958) NoFunction
          CFI (cfiPicker958) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_250:
        ADD     A,#0x27
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond956
          CFI EndBlock cfiCond957
          CFI EndBlock cfiPicker958

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond959 Using cfiCommon0
          CFI Function bme280_compute_wait_time
          CFI Conditional ??CrossCallReturnLabel_147
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond960 Using cfiCommon0
          CFI (cfiCond960) Function bme280_compute_wait_time
          CFI (cfiCond960) Conditional ??CrossCallReturnLabel_148
          CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond960) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond960) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond960) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond960) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond960) CFA_SP SP+-2
          CFI (cfiCond960) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker961 Using cfiCommon1
          CFI (cfiPicker961) NoFunction
          CFI (cfiPicker961) Picker
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_236:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond959
          CFI EndBlock cfiCond960
          CFI EndBlock cfiPicker961

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond962 Using cfiCommon0
          CFI Function bme280_compute_wait_time
          CFI Conditional ??CrossCallReturnLabel_145
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond963 Using cfiCommon0
          CFI (cfiCond963) Function bme280_compute_wait_time
          CFI (cfiCond963) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond963) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond963) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond963) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond963) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond963) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond963) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond963) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond963) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond963) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond963) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond963) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond963) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond963) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond963) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond963) CFA_SP SP+-2
          CFI (cfiCond963) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker964 Using cfiCommon1
          CFI (cfiPicker964) NoFunction
          CFI (cfiPicker964) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_248:
        ADD     A,#0x28
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_270:
        RET
          CFI EndBlock cfiCond962
          CFI EndBlock cfiCond963
          CFI EndBlock cfiPicker964
// 2308 
// 2309 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2310 s16 bme280_data_readout_template(struct bme280_t *bme280, struct value *val)
bme280_data_readout_template:
          CFI Block cfiBlock965 Using cfiCommon0
          CFI Function bme280_data_readout_template
        CODE
// 2311 {
        FUNCALL bme280_data_readout_template, SPI_routine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_set_oversamp_humidity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_set_oversamp_pressure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_set_oversamp_temperature
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_set_standby_durn
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_get_standby_durn
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_set_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, BME280_delay_msek
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_read_uncomp_temperature
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_read_uncomp_pressure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_read_uncomp_humidity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_compensate_temperature_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_compensate_pressure_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout_template, bme280_compensate_humidity_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 21
        MOV     A,#-0x15
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 43)
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 2312 	/* The variable used to assign the standby time*/
// 2313 	u8 v_stand_by_time_u8 = BME280_INIT_VALUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 2314 	/* The variable used to read uncompensated temperature*/
// 2315 	s32 v_data_uncomp_temp_s32 = BME280_INIT_VALUE;
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
// 2316 	/* The variable used to read uncompensated pressure*/
// 2317 	s32 v_data_uncomp_pres_s32 = BME280_INIT_VALUE;
??CrossCallReturnLabel_39:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
// 2318 	/* The variable used to read uncompensated pressure*/
// 2319 	s32 v_data_uncomp_hum_s32 = BME280_INIT_VALUE;
??CrossCallReturnLabel_40:
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
// 2320 	/* The variable used to read compensated temperature*/
// 2321 	s32 v_comp_temp_s32[2] = {BME280_INIT_VALUE, BME280_INIT_VALUE};
// 2322 	/* The variable used to read compensated pressure*/
// 2323 	u32 v_comp_press_u32[2] = {BME280_INIT_VALUE, BME280_INIT_VALUE};
// 2324 	/* The variable used to read compensated humidity*/
// 2325 	u32 v_comp_humidity_u32[2] = {BME280_INIT_VALUE, BME280_INIT_VALUE};
// 2326 
// 2327 	/* result of communication results*/
// 2328 	s32 com_rslt = ERROR;
// 2329 
// 2330 	SPI_routine(bme280);
??CrossCallReturnLabel_41:
        ; Setup parameters for call to function SPI_routine
        LCALL   `??SPI_routine::?relay`; Banked call to: SPI_routine
// 2331 
// 2332 	com_rslt = bme280_init(bme280);
        ; Setup parameters for call to function bme280_init
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   `??bme280_init::?relay`; Banked call to: bme280_init
        MOV     A,R1
        MOV     ?V13,A
// 2333 	
// 2334 	/*	For reading the pressure, humidity and temperature data it is required to
// 2335 	 *	set the OSS setting of humidity, pressure and temperature
// 2336 	 * The "BME280_CTRLHUM_REG_OSRSH" register sets the humidity
// 2337 	 * data acquisition options of the device.
// 2338 	 * changes to this registers only become effective after a write operation to
// 2339 	 * "BME280_CTRLMEAS_REG" register.
// 2340 	 * In the code automated reading and writing of "BME280_CTRLHUM_REG_OSRSH"
// 2341 	 * register first set the "BME280_CTRLHUM_REG_OSRSH" and then read and write
// 2342 	 * the "BME280_CTRLMEAS_REG" register in the function*/
// 2343 	com_rslt += bme280_set_oversamp_humidity(BME280_OVERSAMP_1X);
        ; Setup parameters for call to function bme280_set_oversamp_humidity
        MOV     R1,#0x1
        LCALL   `??bme280_set_oversamp_humidity::?relay`; Banked call to: bme280_set_oversamp_humidity
        MOV     A,R1
        MOV     ?V12,A
// 2344 
// 2345 	/* set the pressure oversampling*/
// 2346 	com_rslt += bme280_set_oversamp_pressure(BME280_OVERSAMP_2X);
        ; Setup parameters for call to function bme280_set_oversamp_pressure
        MOV     R1,#0x2
        LCALL   `??bme280_set_oversamp_pressure::?relay`; Banked call to: bme280_set_oversamp_pressure
        MOV     A,R1
        MOV     ?V11,A
// 2347 
// 2348 	/* set the temperature oversampling*/
// 2349 	com_rslt += bme280_set_oversamp_temperature(BME280_OVERSAMP_4X);
        ; Setup parameters for call to function bme280_set_oversamp_temperature
        MOV     R1,#0x3
        LCALL   `??bme280_set_oversamp_temperature::?relay`; Banked call to: bme280_set_oversamp_temperature
        MOV     A,R1
        MOV     ?V10,A
// 2350 
// 2351 
// 2352 	/* This API used to Write the standby time of the sensor input
// 2353 	 *	value have to be given
// 2354 	 *	Normal mode comprises an automated perpetual cycling between an (active)
// 2355 	 *	Measurement period and an (inactive) standby period.
// 2356 	 *	The standby time is determined by the contents of the register t_sb.
// 2357 	 *	Standby time can be set using BME280_STANDBYTIME_125_MS.
// 2358 	 *	Usage Hint : bme280_set_standbydur(BME280_STANDBYTIME_125_MS)*/
// 2359   com_rslt += bme280_set_standby_durn(BME280_STANDBY_TIME_125_MS);
        ; Setup parameters for call to function bme280_set_standby_durn
        MOV     R1,#0x2
        LCALL   `??bme280_set_standby_durn::?relay`; Banked call to: bme280_set_standby_durn
        MOV     A,R1
        MOV     ?V9,A
// 2360 	
// 2361 	/* This API used to read back the written value of standby time*/
// 2362 	com_rslt += bme280_get_standby_durn(&v_stand_by_time_u8);
        ; Setup parameters for call to function bme280_get_standby_durn
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??bme280_get_standby_durn::?relay`; Banked call to: bme280_get_standby_durn
        MOV     A,R1
        MOV     ?V8,A
// 2363 		
// 2364 	/* Set the power mode as NORMAL*/
// 2365 	com_rslt += bme280_set_power_mode(BME280_NORMAL_MODE);
        ; Setup parameters for call to function bme280_set_power_mode
        MOV     R1,#0x3
        LCALL   `??bme280_set_power_mode::?relay`; Banked call to: bme280_set_power_mode
        MOV     A,R1
        MOV     ?V3,A
// 2366 	
// 2367 	//
// 2368 	// Delay 126 [ms]
// 2369 	//
// 2370 	BME280_delay_msek(126);
        ; Setup parameters for call to function BME280_delay_msek
        MOV     DPTR,#__Constant_7e
        LCALL   ?XLOAD_R2345
        LCALL   `??BME280_delay_msek::?relay`; Banked call to: BME280_delay_msek
// 2371 
// 2372 /*------------------------------------------------------------------*
// 2373 ************ START READ UNCOMPENSATED PRESSURE, TEMPERATURE
// 2374 AND HUMIDITY DATA ********
// 2375 *---------------------------------------------------------------------*/
// 2376 	/* API is used to read the uncompensated temperature*/
// 2377 	com_rslt += bme280_read_uncomp_temperature(&v_data_uncomp_temp_s32);
        ; Setup parameters for call to function bme280_read_uncomp_temperature
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_read_uncomp_temperature::?relay`; Banked call to: bme280_read_uncomp_temperature
        MOV     A,R1
        MOV     ?V2,A
// 2378 
// 2379 	/* API is used to read the uncompensated pressure*/
// 2380 	com_rslt += bme280_read_uncomp_pressure(&v_data_uncomp_pres_s32);
        ; Setup parameters for call to function bme280_read_uncomp_pressure
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_read_uncomp_pressure::?relay`; Banked call to: bme280_read_uncomp_pressure
        MOV     A,R1
        MOV     ?V1,A
// 2381 
// 2382 	/* API is used to read the uncompensated humidity*/
// 2383 	com_rslt += bme280_read_uncomp_humidity(&v_data_uncomp_hum_s32);
        ; Setup parameters for call to function bme280_read_uncomp_humidity
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_read_uncomp_humidity::?relay`; Banked call to: bme280_read_uncomp_humidity
        MOV     A,R1
        MOV     ?V0,A
// 2384 
// 2385 //	com_rslt += bme280_read_uncomp_pressure_temperature_humidity(
// 2386 //	&v_data_uncomp_temp_s32, &v_data_uncomp_pres_s32, &v_data_uncomp_hum_s32);
// 2387   /*--------------------------------------------------------------------*
// 2388 ************ END READ UNCOMPENSATED PRESSURE AND TEMPERATURE********
// 2389 *-------------------------------------------------------------------------*/
// 2390 
// 2391 /*------------------------------------------------------------------*
// 2392 ************ START READ COMPENSATED PRESSURE, TEMPERATURE
// 2393 AND HUMIDITY DATA ********
// 2394 *---------------------------------------------------------------------*/
// 2395 	/* API is used to compute the compensated temperature*/
// 2396 	v_comp_temp_s32[0] = bme280_compensate_temperature_int32(
// 2397 			v_data_uncomp_temp_s32);
        ; Setup parameters for call to function bme280_compensate_temperature_int32
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R2345
        LCALL   `??bme280_compensate_temperature_int32::?relay`; Banked call to: bme280_compensate_temperature_int32
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XSTORE_R0123
// 2398 
// 2399 	/* API is used to compute the compensated pressure*/
// 2400 	v_comp_press_u32[0] = bme280_compensate_pressure_int32(
// 2401 			v_data_uncomp_pres_s32);
        ; Setup parameters for call to function bme280_compensate_pressure_int32
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R2345
        LCALL   `??bme280_compensate_pressure_int32::?relay`; Banked call to: bme280_compensate_pressure_int32
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XSTORE_R2345
// 2402 
// 2403 	/* API is used to compute the compensated humidity*/
// 2404 	v_comp_humidity_u32[0] = bme280_compensate_humidity_int32(
// 2405 			v_data_uncomp_hum_s32);
        ; Setup parameters for call to function bme280_compensate_humidity_int32
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R2345
        LCALL   `??bme280_compensate_humidity_int32::?relay`; Banked call to: bme280_compensate_humidity_int32
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V6,R4
        MOV     ?V7,R5
// 2406 
// 2407 //		/* API is used to read the compensated temperature, humidity and pressure*/
// 2408 //	com_rslt += bme280_read_pressure_temperature_humidity(
// 2409 //	&v_comp_press_u32[1], &v_comp_temp_s32[1],  &v_comp_humidity_u32[1]);
// 2410 /*--------------------------------------------------------------------*
// 2411 ************ END READ COMPENSATED PRESSURE, TEMPERATURE AND HUMIDITY ********
// 2412 *-------------------------------------------------------------------------*/
// 2413 		val->temp = v_comp_temp_s32[0];
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R0123
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?XSTORE_R0123
// 2414 		val->press = v_comp_press_u32[0];
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R0123
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?XSTORE_R0123
// 2415 		val->humid = v_comp_humidity_u32[0];
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V4
        LCALL   ?L_MOV_TO_X
// 2416 		
// 2417 //		Value.temp = v_comp_temp_s32[1];
// 2418 //		Value.press = v_comp_press_u32[1];
// 2419 //		Value.humid = v_comp_humidity_u32[1];
// 2420 /*-----------------------------------------------------------------------*
// 2421 ************************* START DE-INITIALIZATION ***********************
// 2422 *-------------------------------------------------------------------------*/
// 2423 	/*	For de-initialization it is required to set the mode of
// 2424 	 *	the sensor as "SLEEP"
// 2425 	 *	the device reaches the lowest power consumption only
// 2426 	 *	In SLEEP mode no measurements are performed
// 2427 	 *	All registers are accessible
// 2428 	 *	by using the below API able to set the power mode as SLEEP*/
// 2429 	 /* Set the power mode as SLEEP*/
// 2430 //	com_rslt += bme280_set_power_mode(BME280_SLEEP_MODE);
// 2431 /*---------------------------------------------------------------------*
// 2432 ************************* END DE-INITIALIZATION **********************
// 2433 *---------------------------------------------------------------------*/
// 2434 
// 2435 	return com_rslt;
        MOV     A,?V13
        MOV     R0,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     R1,A
        MOV     A,?V12
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_200:
        MOV     A,?V11
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_201:
        MOV     A,?V10
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_202:
        MOV     A,?V9
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_203:
        MOV     A,?V8
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_204:
        MOV     A,?V3
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_205:
        MOV     A,?V2
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_206:
        MOV     A,?V1
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_207:
        MOV     A,?V0
        MOV     R2,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     R3,A
        MOV     A,R0
        ADD     A,R2
        MOV     R2,A
        MOV     A,R1
        ADDC    A,R3
        MOV     R3,A
        MOV     A,#0x15
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
// 2436 }
          CFI EndBlock cfiBlock965

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond966 Using cfiCommon0
          CFI Function bme280_data_readout_template
          CFI Conditional ??CrossCallReturnLabel_200
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond967 Using cfiCommon0
          CFI (cfiCond967) Function bme280_data_readout_template
          CFI (cfiCond967) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond967) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond967) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond967) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond967) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond967) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond967) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond967) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond967) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond967) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond967) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond967) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond967) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond967) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond967) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond967) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond967) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond967) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond967) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond967) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond967) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond967) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond967) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond967) CFA_SP SP+-2
          CFI (cfiCond967) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond968 Using cfiCommon0
          CFI (cfiCond968) Function bme280_data_readout_template
          CFI (cfiCond968) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond968) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond968) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond968) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond968) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond968) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond968) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond968) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond968) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond968) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond968) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond968) CFA_SP SP+-2
          CFI (cfiCond968) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond969 Using cfiCommon0
          CFI (cfiCond969) Function bme280_data_readout_template
          CFI (cfiCond969) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond969) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond969) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond969) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond969) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond969) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond969) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond969) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond969) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond969) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond969) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond969) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond969) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond969) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond969) CFA_SP SP+-2
          CFI (cfiCond969) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond970 Using cfiCommon0
          CFI (cfiCond970) Function bme280_data_readout_template
          CFI (cfiCond970) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond970) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond970) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond970) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond970) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond970) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond970) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond970) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond970) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond970) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond970) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond970) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond970) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond970) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond970) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond970) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond970) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond970) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond970) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond970) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond970) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond970) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond970) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond970) CFA_SP SP+-2
          CFI (cfiCond970) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond971 Using cfiCommon0
          CFI (cfiCond971) Function bme280_data_readout_template
          CFI (cfiCond971) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond971) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond971) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond971) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond971) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond971) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond971) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond971) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond971) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond971) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond971) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond971) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond971) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond971) CFA_SP SP+-2
          CFI (cfiCond971) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond972 Using cfiCommon0
          CFI (cfiCond972) Function bme280_data_readout_template
          CFI (cfiCond972) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond972) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond972) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond972) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond972) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond972) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond972) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond972) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond972) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond972) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond972) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond972) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond972) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond972) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond972) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond972) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond972) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond972) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond972) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond972) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond972) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond972) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond972) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond972) CFA_SP SP+-2
          CFI (cfiCond972) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond973 Using cfiCommon0
          CFI (cfiCond973) Function bme280_data_readout_template
          CFI (cfiCond973) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond973) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond973) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond973) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond973) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond973) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond973) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond973) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond973) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond973) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond973) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond973) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond973) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond973) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond973) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond973) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond973) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond973) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond973) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond973) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond973) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond973) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond973) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond973) CFA_SP SP+-2
          CFI (cfiCond973) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiPicker974 Using cfiCommon1
          CFI (cfiPicker974) NoFunction
          CFI (cfiPicker974) Picker
        MOV     R2,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     R3,A
        MOV     A,R0
        ADD     A,R2
        MOV     R0,A
        MOV     A,R1
        ADDC    A,R3
        MOV     R1,A
        RET
          CFI EndBlock cfiCond966
          CFI EndBlock cfiCond967
          CFI EndBlock cfiCond968
          CFI EndBlock cfiCond969
          CFI EndBlock cfiCond970
          CFI EndBlock cfiCond971
          CFI EndBlock cfiCond972
          CFI EndBlock cfiCond973
          CFI EndBlock cfiPicker974

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond975 Using cfiCommon0
          CFI Function bme280_data_readout_template
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond976 Using cfiCommon0
          CFI (cfiCond976) Function bme280_data_readout_template
          CFI (cfiCond976) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond976) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond976) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond976) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond976) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond976) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond976) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond976) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond976) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond976) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond976) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond976) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond976) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond976) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond976) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond976) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond976) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond976) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond976) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond976) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond976) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond976) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond976) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond976) CFA_SP SP+-2
          CFI (cfiCond976) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond977 Using cfiCommon0
          CFI (cfiCond977) Function bme280_data_readout_template
          CFI (cfiCond977) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond977) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond977) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond977) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond977) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond977) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond977) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond977) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond977) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond977) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond977) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond977) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond977) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond977) CFA_SP SP+-2
          CFI (cfiCond977) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiPicker978 Using cfiCommon1
          CFI (cfiPicker978) NoFunction
          CFI (cfiPicker978) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_226:
        RET
          CFI EndBlock cfiCond975
          CFI EndBlock cfiCond976
          CFI EndBlock cfiCond977
          CFI EndBlock cfiPicker978

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond979 Using cfiCommon0
          CFI Function bme280_data_readout_template
          CFI Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond980 Using cfiCommon0
          CFI (cfiCond980) Function bme280_data_readout_template
          CFI (cfiCond980) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_40
          CFI (cfiCond980) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond980) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond980) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond980) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond980) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond980) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond980) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond980) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond980) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond980) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond980) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond980) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond980) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond980) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond980) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond980) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond980) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond980) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond980) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond980) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond980) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond980) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond980) CFA_SP SP+-4
          CFI (cfiCond980) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond981 Using cfiCommon0
          CFI (cfiCond981) Function bme280_data_readout_template
          CFI (cfiCond981) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_41
          CFI (cfiCond981) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond981) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond981) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond981) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond981) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond981) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond981) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond981) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond981) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond981) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond981) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond981) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond981) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond981) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond981) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond981) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond981) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond981) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond981) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond981) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond981) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond981) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond981) CFA_SP SP+-4
          CFI (cfiCond981) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiCond982 Using cfiCommon0
          CFI (cfiCond982) Function bme280_read_pressure_temperature_humidity
          CFI (cfiCond982) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_37
          CFI (cfiCond982) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond982) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond982) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond982) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond982) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond982) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond982) CFA_SP SP+-4
          CFI (cfiCond982) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond983 Using cfiCommon0
          CFI (cfiCond983) Function bme280_data_readout
          CFI (cfiCond983) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_38
          CFI (cfiCond983) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond983) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond983) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond983) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond983) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond983) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond983) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond983) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond983) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond983) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond983) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond983) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond983) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond983) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond983) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond983) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond983) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond983) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond983) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond983) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond983) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond983) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond983) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond983) CFA_SP SP+-4
          CFI (cfiCond983) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond984 Using cfiCommon0
          CFI (cfiCond984) Function bme280_read_pressure_temperature_humidity
          CFI (cfiCond984) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_17
          CFI (cfiCond984) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond984) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond984) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond984) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond984) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond984) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond984) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond984) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond984) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond984) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond984) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond984) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond984) CFA_SP SP+-4
          CFI (cfiCond984) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond985 Using cfiCommon0
          CFI (cfiCond985) Function bme280_data_readout
          CFI (cfiCond985) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_18
          CFI (cfiCond985) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond985) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond985) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond985) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond985) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond985) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond985) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond985) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond985) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond985) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond985) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond985) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond985) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond985) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond985) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond985) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond985) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond985) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond985) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond985) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond985) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond985) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond985) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond985) CFA_SP SP+-4
          CFI (cfiCond985) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker986 Using cfiCommon1
          CFI (cfiPicker986) NoFunction
          CFI (cfiPicker986) Picker
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond979
          CFI EndBlock cfiCond980
          CFI EndBlock cfiCond981
          CFI EndBlock cfiCond982
          CFI EndBlock cfiCond983
          CFI EndBlock cfiCond984
          CFI EndBlock cfiCond985
          CFI EndBlock cfiPicker986
// 2437 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2438 s8 SPI_routine(struct bme280_t *bme280) 
SPI_routine:
          CFI Block cfiBlock987 Using cfiCommon0
          CFI Function SPI_routine
        CODE
// 2439 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2440 /*--------------------------------------------------------------------------*
// 2441  *  By using bme280 the following structure parameter can be accessed
// 2442  *	Bus write function pointer: BME280_WR_FUNC_PTR
// 2443  *	Bus read function pointer: BME280_RD_FUNC_PTR
// 2444  *	Delay function pointer: delay_msec
// 2445  *--------------------------------------------------------------------------*/
// 2446 	bme280->bus_write = BME280_SPI_bus_write;
        MOV     A,R2
        ADD     A,#0x2d
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOV     A,#`??BME280_SPI_bus_write::?relay` & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(`??BME280_SPI_bus_write::?relay` >> 8) & 0xff
        MOVX    @DPTR,A
// 2447 	bme280->bus_read = BME280_SPI_bus_read;
        MOV     A,R2
        ADD     A,#0x2f
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOV     A,#`??BME280_SPI_bus_read::?relay` & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(`??BME280_SPI_bus_read::?relay` >> 8) & 0xff
        MOVX    @DPTR,A
// 2448 	bme280->delay_msec = BME280_delay_msek;
        MOV     A,R2
        ADD     A,#0x31
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOV     A,#`??BME280_delay_msek::?relay` & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(`??BME280_delay_msek::?relay` >> 8) & 0xff
        MOVX    @DPTR,A
// 2449 
// 2450 	return BME280_INIT_VALUE;
        MOV     R1,#0x0
          CFI EndBlock cfiBlock987
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0
// 2451 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock988 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock988
// 2452 
// 2453 /*	\Brief: The function is used as SPI bus read
// 2454  *	\Return : Status of the SPI read
// 2455  *	\param dev_addr : The device address of the sensor
// 2456  *	\param reg_addr : Address of the first register, will data is going to be read
// 2457  *	\param reg_data : This data read from the sensor, which is hold in an array
// 2458  *	\param cnt : The no of byte of data to be read */
// 2459 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2460 s8 BME280_SPI_bus_read(u8 dev_addr, u8 reg_addr, u8 *reg_data, u8 cnt)
BME280_SPI_bus_read:
          CFI Block cfiBlock989 Using cfiCommon0
          CFI Function BME280_SPI_bus_read
        CODE
// 2461 {
        FUNCALL BME280_SPI_bus_read, BME280_delay_msek
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL BME280_SPI_bus_read, SPIDataPut
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL BME280_SPI_bus_read, SPIDataGet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL BME280_SPI_bus_read, SPIDataPut
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL BME280_SPI_bus_read, SPIDataGet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL BME280_SPI_bus_read, BME280_delay_msek
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 26
        MOV     A,#-0x1a
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     ?V1,R2
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     ?V2,R3
// 2462 	s32 iError = BME280_INIT_VALUE;
// 2463 	
// 2464         
// 2465         int init = 0;
// 2466 	unsigned long ulTmp;
// 2467 	unsigned char array [SPI_BUFFER_LEN] = {0};
        MOV     DPTR,#`?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0_1`
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     A,#0x1a
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 2468 	unsigned char stringpos; 
// 2469 	
// 2470 	//cleanFIFO();
// 2471 	
// 2472 	array[init] = reg_addr | SPI_READ;
        MOV     A,#-0x80
        ORL     A,?V1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 2473 	
// 2474 	/*
// 2475 	 * CS = '0'
// 2476 	 */
// 2477 	P1_3 = 0;  
        CLR     0x90.3
// 2478         BME280_delay_msek(100);
        ; Setup parameters for call to function BME280_delay_msek
        MOV     DPTR,#__Constant_64
        LCALL   ?XLOAD_R2345
        LCALL   `??BME280_delay_msek::?relay`; Banked call to: BME280_delay_msek
// 2479 	
// 2480         SPIDataPut( array[init]);
        ; Setup parameters for call to function SPIDataPut
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??SPIDataPut::?relay`; Banked call to: SPIDataPut
// 2481 	//while((U1CSR & 0x01) == 0x01)
// 2482         //{
// 2483         //}
// 2484 	ulTmp = SPIDataGet();
        ; Setup parameters for call to function SPIDataGet
        LCALL   `??SPIDataGet::?relay`; Banked call to: SPIDataGet
// 2485 	
// 2486 	for (stringpos = init; stringpos < cnt; stringpos++) 
        MOV     ?V0,#0x0
        SJMP    ??BME280_SPI_bus_read_0
// 2487 	{
// 2488 		SPIDataPut(0xAA);
??BME280_SPI_bus_read_1:
        ; Setup parameters for call to function SPIDataPut
        MOV     R1,#-0x56
        LCALL   `??SPIDataPut::?relay`; Banked call to: SPIDataPut
// 2489 		//while((U1CSR & 0x01) == 0x01)
// 2490                 //{
// 2491                 //}
// 2492 		
// 2493 		ulTmp = SPIDataGet();
// 2494 		array[stringpos + BME280_DATA_INDEX] = ulTmp & 0xff;
        ; Setup parameters for call to function SPIDataGet
        LCALL   `??SPIDataGet::?relay`; Banked call to: SPIDataGet
        MOV     A,R1
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_219:
        MOV     A,R1
        MOVX    @DPTR,A
// 2495 		*(reg_data + stringpos) = array[stringpos+BME280_DATA_INDEX];
        MOV     A,R6
        ADD     A,R0
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R1
        MOVX    @DPTR,A
// 2496         }
        INC     ?V0
??BME280_SPI_bus_read_0:
        MOV     A,?V0
        CLR     C
        SUBB    A,?V2
        JC      ??BME280_SPI_bus_read_1
// 2497 	
// 2498 	/*
// 2499 	 * CS = '1'
// 2500 	 */
// 2501         
// 2502         
// 2503         
// 2504         BME280_delay_msek(100);
        ; Setup parameters for call to function BME280_delay_msek
        MOV     DPTR,#__Constant_64
        LCALL   ?XLOAD_R2345
        LCALL   `??BME280_delay_msek::?relay`; Banked call to: BME280_delay_msek
// 2505 	P1_3 = 1;
        SETB    0x90.3
// 2506 	
// 2507         
// 2508         
// 2509 	//bme280ReadSPI(reg_addr, reg_data, cnt);
// 2510 
// 2511 
// 2512 	return (s8)iError;
        MOV     R1,#0x0
        MOV     A,#0x1a
        LJMP    ??Subroutine118_0 & 0xFFFF
          CFI EndBlock cfiBlock989
        REQUIRE _A_P1
// 2513 }
// 2514 
// 2515 /*	\Brief: The function is used as SPI bus write
// 2516  *	\Return : Status of the SPI write
// 2517  *	\param dev_addr : The device address of the sensor
// 2518  *	\param reg_addr : Address of the first register, will data is going to be written
// 2519  *	\param reg_data : It is a value hold in the array,
// 2520  *		will be used for write the value into the register
// 2521  *	\param cnt : The no of byte of data to be write
// 2522  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2523 s8 BME280_SPI_bus_write(u8 dev_addr, u8 reg_addr, u8 *reg_data, u8 cnt)
BME280_SPI_bus_write:
          CFI Block cfiBlock990 Using cfiCommon0
          CFI Function BME280_SPI_bus_write
        CODE
// 2524 {
        FUNCALL BME280_SPI_bus_write, BME280_delay_msek
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL BME280_SPI_bus_write, SPIDataPut
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL BME280_SPI_bus_write, SPIDataPut
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL BME280_SPI_bus_write, BME280_delay_msek
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 8
        MOV     A,#-0x8
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V1,R2
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     ?V2,R3
// 2525 	s32 iError = BME280_INIT_VALUE;
// 2526         
// 2527         unsigned char init = 0;
// 2528 	unsigned char array[SPI_BUFFER_LEN_WRITE * BME280_ADDRESS_INDEX];
// 2529 	unsigned char	stringpos = 0;
        MOV     ?V3,#0x0
// 2530 	unsigned char index = 0;
// 2531 	
// 2532 	/*
// 2533 	 * CS = '0'
// 2534 	 */
// 2535 	P1_3 = 0;
        CLR     0x90.3
// 2536 	BME280_delay_msek(100);
        ; Setup parameters for call to function BME280_delay_msek
        MOV     DPTR,#__Constant_64
        LCALL   ?XLOAD_R2345
        LCALL   `??BME280_delay_msek::?relay`; Banked call to: BME280_delay_msek
// 2537         
// 2538 	for (stringpos = init; stringpos < cnt; stringpos++) 
        SJMP    ??BME280_SPI_bus_write_0
// 2539 	{
// 2540 		/* the operation of (reg_addr++)&0x7F done as per the
// 2541 		SPI communication protocol specified in the data sheet
// 2542 		*/
// 2543 		index = stringpos * BME280_ADDRESS_INDEX;
??BME280_SPI_bus_write_1:
        MOV     A,?V3
        CLR     C
        RLC     A
        MOV     ?V0,A
// 2544 		array[index] = (reg_addr) & SPI_WRITE;
        MOV     A,#0x7f
        ANL     A,?V1
        MOV     R1,A
        MOV     R2,?V0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,R2
        MOV     DPL,A
        CLR     A
        ADDC    A,DPH
        MOV     DPH,A
        MOV     A,R1
        MOVX    @DPTR,A
        ; Setup parameters for call to function SPIDataPut
// 2545 		SPIDataPut( array[index]);
        LCALL   `??SPIDataPut::?relay`; Banked call to: SPIDataPut
// 2546 		
// 2547                 
// 2548                 //while((U1CSR & 0x01) == 0x01)
// 2549                 //{
// 2550                 //}
// 2551 		
// 2552                 array[index + BME280_DATA_INDEX] = *(reg_data + stringpos);
        MOV     R0,?V3
        MOV     A,R6
        ADD     A,R0
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_220:
        MOV     A,R2
        MOVX    @DPTR,A
// 2553 		SPIDataPut( array[index + BME280_DATA_INDEX]);
        ; Setup parameters for call to function SPIDataPut
        MOV     R1,A
        LCALL   `??SPIDataPut::?relay`; Banked call to: SPIDataPut
// 2554 		//while((U1CSR & 0x01) == 0x01)
// 2555                 //{
// 2556                 //}
// 2557 	}
        INC     ?V3
??BME280_SPI_bus_write_0:
        MOV     A,?V3
        CLR     C
        SUBB    A,?V2
        JC      ??BME280_SPI_bus_write_1
// 2558 	
// 2559 	/*
// 2560 	 * CS = '1'
// 2561 	 */
// 2562         
// 2563         BME280_delay_msek(100);
        ; Setup parameters for call to function BME280_delay_msek
        MOV     DPTR,#__Constant_64
        LCALL   ?XLOAD_R2345
        LCALL   `??BME280_delay_msek::?relay`; Banked call to: BME280_delay_msek
// 2564 	P1_3 = 1;
        SETB    0x90.3
// 2565 	
// 2566 	//bme280SendSPI(reg_addr, reg_data, cnt);
// 2567 	
// 2568        
// 2569         
// 2570 	return (s8)iError;
        MOV     R1,#0x0
        MOV     A,#0x8
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock990
        REQUIRE _A_P1
// 2571 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond991 Using cfiCommon0
          CFI Function BME280_SPI_bus_read
          CFI Conditional ??CrossCallReturnLabel_219
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond992 Using cfiCommon0
          CFI (cfiCond992) Function BME280_SPI_bus_write
          CFI (cfiCond992) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond992) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond992) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond992) CFA_SP SP+-2
          CFI (cfiCond992) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker993 Using cfiCommon1
          CFI (cfiPicker993) NoFunction
          CFI (cfiPicker993) Picker
        MOV     R2,A
        MOV     R0,?V0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,R0
        MOV     DPL,A
        CLR     A
        ADDC    A,DPH
        MOV     DPH,A
        INC     DPTR
        RET
          CFI EndBlock cfiCond991
          CFI EndBlock cfiCond992
          CFI EndBlock cfiPicker993
// 2572 
// 2573 /*	Brief : The delay routine
// 2574  *	\param : delay in ms
// 2575  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2576 void BME280_delay_msek(u32 msek)
BME280_delay_msek:
          CFI Block cfiBlock994 Using cfiCommon0
          CFI Function BME280_delay_msek
        CODE
// 2577 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
// 2578       unsigned long i;
// 2579       for(i=0;i<msek*50;i++)
        MOV     ?V8,#0x0
        MOV     ?V9,#0x0
        MOV     ?V10,#0x0
        MOV     ?V11,#0x0
        SJMP    ??BME280_delay_msek_0
// 2580       {
// 2581         asm("NOP");
??BME280_delay_msek_1:
        NOP
// 2582       }
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V8
        LCALL   ?L_ADD_X
??BME280_delay_msek_0:
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V2,R4
        MOV     ?V3,R5
        MOV     DPTR,#__Constant_32
        MOV     R0,#?V12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0
        MOV     R1,#?V12
        LCALL   ?L_MUL
        MOV     R0,#?V0
        MOV     R1,#?V8
        LCALL   ?UL_GT
        JC      ??BME280_delay_msek_1
// 2583 	//SysCtlDelay(msek * 16000 / 3);
// 2584 }
        LJMP    ??Subroutine124_0 & 0xFFFF
          CFI EndBlock cfiBlock994
// 2585 
// 2586 //*****************************************************************************
// 2587 //
// 2588 //! Read and compensate temperature, pressure and humidity and saving those 
// 2589 //! values in struct value
// 2590 //
// 2591 //*****************************************************************************

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2592 s32 bme280_data_readout(struct bme280_t *bme280, struct value *val)
bme280_data_readout:
          CFI Block cfiBlock995 Using cfiCommon0
          CFI Function bme280_data_readout
        CODE
// 2593 {	
        FUNCALL bme280_data_readout, bme280_read_uncomp_temperature
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout, bme280_read_uncomp_pressure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout, bme280_read_uncomp_humidity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout, bme280_compensate_temperature_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout, bme280_compensate_pressure_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_data_readout, bme280_compensate_humidity_int32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        MOV     A,#-0x17
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
        ; Saved register size: 23
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 2594         char buff[20];
// 2595   
// 2596 	/* The variable used to read uncompensated temperature*/
// 2597 	s32 v_data_uncomp_temp_s32 = BME280_INIT_VALUE;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine19 & 0xFFFF
// 2598 	
// 2599 	/* The variable used to read uncompensated pressure*/
// 2600 	s32 v_data_uncomp_pres_s32 = BME280_INIT_VALUE;
??CrossCallReturnLabel_38:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine14 & 0xFFFF
// 2601 	
// 2602 	/* The variable used to read uncompensated pressure*/
// 2603 	s32 v_data_uncomp_hum_s32 = BME280_INIT_VALUE;
??CrossCallReturnLabel_18:
        MOVX    @DPTR,A
// 2604 	
// 2605 	/* The variable used to read compensated temperature*/
// 2606 	s32 v_comp_temp_s32 = BME280_INIT_VALUE;
// 2607 	
// 2608 	/* The variable used to read compensated pressure*/
// 2609 	u32 v_comp_press_u32 = BME280_INIT_VALUE;
// 2610 	
// 2611 	/* The variable used to read compensated humidity*/
// 2612 	u32 v_comp_humidity_u32 = BME280_INIT_VALUE;
// 2613 	
// 2614 	/* result of communication results*/
// 2615 	s32 com_rslt = ERROR;
// 2616 	
// 2617 /*------------------------------------------------------------------*
// 2618 ************ START READ UNCOMPENSATED PRESSURE, TEMPERATURE
// 2619 AND HUMIDITY DATA ********
// 2620 *---------------------------------------------------------------------*/
// 2621 	/* API is used to read the uncompensated temperature*/
// 2622 	com_rslt += bme280_read_uncomp_temperature(&v_data_uncomp_temp_s32);
        ; Setup parameters for call to function bme280_read_uncomp_temperature
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_read_uncomp_temperature::?relay`; Banked call to: bme280_read_uncomp_temperature
        MOV     A,R1
        MOV     ?V14,A
// 2623 
// 2624 	/* API is used to read the uncompensated pressure*/
// 2625 	com_rslt += bme280_read_uncomp_pressure(&v_data_uncomp_pres_s32);
        ; Setup parameters for call to function bme280_read_uncomp_pressure
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??bme280_read_uncomp_pressure::?relay`; Banked call to: bme280_read_uncomp_pressure
        MOV     A,R1
        MOV     ?V13,A
// 2626 
// 2627 	/* API is used to read the uncompensated humidity*/
// 2628 	com_rslt += bme280_read_uncomp_humidity(&v_data_uncomp_hum_s32);
        ; Setup parameters for call to function bme280_read_uncomp_humidity
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??bme280_read_uncomp_humidity::?relay`; Banked call to: bme280_read_uncomp_humidity
        MOV     A,R1
        MOV     ?V12,A
// 2629         
// 2630 /*------------------------------------------------------------------*
// 2631 ************ START READ COMPENSATED PRESSURE, TEMPERATURE
// 2632 AND HUMIDITY DATA ********
// 2633 *---------------------------------------------------------------------*/
// 2634 	/* API is used to compute the compensated temperature*/
// 2635 	v_comp_temp_s32 = bme280_compensate_temperature_int32(
// 2636 			v_data_uncomp_temp_s32);
        ; Setup parameters for call to function bme280_compensate_temperature_int32
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R2345
        LCALL   `??bme280_compensate_temperature_int32::?relay`; Banked call to: bme280_compensate_temperature_int32
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V6,R4
        MOV     ?V7,R5
// 2637 
// 2638 	/* API is used to compute the compensated pressure*/
// 2639 	v_comp_press_u32 = bme280_compensate_pressure_int32(
// 2640 			v_data_uncomp_pres_s32);
        ; Setup parameters for call to function bme280_compensate_pressure_int32
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R2345
        LCALL   `??bme280_compensate_pressure_int32::?relay`; Banked call to: bme280_compensate_pressure_int32
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V2,R4
        MOV     ?V3,R5
// 2641 
// 2642 	/* API is used to compute the compensated humidity*/
// 2643 	v_comp_humidity_u32 = bme280_compensate_humidity_int32(
// 2644 			v_data_uncomp_hum_s32);
        ; Setup parameters for call to function bme280_compensate_humidity_int32
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?XLOAD_R2345
        LCALL   `??bme280_compensate_humidity_int32::?relay`; Banked call to: bme280_compensate_humidity_int32
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     ?V10,R4
        MOV     ?V11,R5
// 2645 	
// 2646    /*        sprintf(buff,"%d",v_comp_humidity_u32/1024);
// 2647 	HalLcdWriteString("",0);
// 2648         HalLcdWriteString("U readout:",0);
// 2649         HalLcdWriteString(buff,0);
// 2650      */   
// 2651 /*--------------------------------------------------------------------*
// 2652 ************ END READ COMPENSATED PRESSURE, TEMPERATURE AND HUMIDITY ********
// 2653 *-------------------------------------------------------------------------*/
// 2654 	val->temp = v_comp_temp_s32;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V4
        LCALL   ?L_MOV_TO_X
// 2655 	val->press = v_comp_press_u32;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V0
        LCALL   ?L_MOV_TO_X
// 2656 	val->humid = v_comp_humidity_u32;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V8
        LCALL   ?L_MOV_TO_X
// 2657 	  
// 2658 	return com_rslt;
        MOV     A,?V14
        MOV     ?V0,A
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_208:
        MOV     A,?V13
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_393:
        LCALL   ?L_ADD
        MOV     A,?V12
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_394:
        LCALL   ?L_ADD
        MOV     DPTR,#__Constant_ffffffff
        MOV     R0,#?V0
        LCALL   ?L_ADD_X
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     A,#0xc
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R7,#0xf
        LJMP    ?BANKED_LEAVE_XDATA
// 2659 	
// 2660 }// end s32 bme280_data_readout(struct bme280_t *bme280, struct value *val);
          CFI EndBlock cfiBlock995

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond996 Using cfiCommon0
          CFI Function bme280_data_readout
          CFI Conditional ??CrossCallReturnLabel_393
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond997 Using cfiCommon0
          CFI (cfiCond997) Function bme280_data_readout
          CFI (cfiCond997) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond997) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond997) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond997) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond997) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond997) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond997) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond997) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond997) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond997) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond997) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond997) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond997) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond997) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond997) CFA_SP SP+-2
          CFI (cfiCond997) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond998 Using cfiCommon0
          CFI (cfiCond998) Function bme280_set
          CFI (cfiCond998) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond998) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond998) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond998) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond998) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond998) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond998) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond998) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond998) CFA_SP SP+-2
          CFI (cfiCond998) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond999 Using cfiCommon0
          CFI (cfiCond999) Function bme280_set
          CFI (cfiCond999) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond999) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond999) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond999) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond999) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond999) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond999) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond999) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond999) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond999) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond999) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond999) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond999) CFA_SP SP+-2
          CFI (cfiCond999) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1000 Using cfiCommon0
          CFI (cfiCond1000) Function bme280_set
          CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1000) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1000) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1000) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1000) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1000) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1000) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1000) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1000) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1000) CFA_SP SP+-2
          CFI (cfiCond1000) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1001 Using cfiCommon0
          CFI (cfiCond1001) Function bme280_set
          CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1001) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1001) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1001) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1001) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1001) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1001) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1001) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1001) CFA_SP SP+-2
          CFI (cfiCond1001) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1002 Using cfiCommon0
          CFI (cfiCond1002) Function bme280_set
          CFI (cfiCond1002) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond1002) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1002) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1002) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1002) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1002) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1002) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1002) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1002) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1002) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1002) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1002) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1002) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1002) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1002) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1002) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1002) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1002) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1002) CFA_SP SP+-2
          CFI (cfiCond1002) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker1003 Using cfiCommon1
          CFI (cfiPicker1003) NoFunction
          CFI (cfiPicker1003) Picker
        MOV     ?V4,A
          CFI EndBlock cfiCond996
          CFI EndBlock cfiCond997
          CFI EndBlock cfiCond998
          CFI EndBlock cfiCond999
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiCond1001
          CFI EndBlock cfiCond1002
          CFI EndBlock cfiPicker1003
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine127_0:
          CFI Block cfiCond1004 Using cfiCommon0
          CFI Function bme280_set
          CFI Conditional ??CrossCallReturnLabel_392
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1005 Using cfiCommon0
          CFI (cfiCond1005) Function bme280_data_readout
          CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1005) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1005) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1005) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1005) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1005) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1005) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1005) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1005) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1005) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1005) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1005) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1005) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1005) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1005) CFA_SP SP+-2
          CFI (cfiCond1005) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function bme280_data_readout
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1006) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1006) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1006) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1006) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1006) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1006) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1006) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1006) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1006) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1006) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1006) CFA_SP SP+-2
          CFI (cfiCond1006) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1007 Using cfiCommon0
          CFI (cfiCond1007) Function bme280_set
          CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1007) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1007) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1007) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1007) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1007) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1007) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1007) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1007) CFA_SP SP+-2
          CFI (cfiCond1007) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1008 Using cfiCommon0
          CFI (cfiCond1008) Function bme280_set
          CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1008) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1008) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1008) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1008) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1008) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1008) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1008) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1008) CFA_SP SP+-2
          CFI (cfiCond1008) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1009 Using cfiCommon0
          CFI (cfiCond1009) Function bme280_set
          CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1009) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1009) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1009) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1009) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1009) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1009) CFA_SP SP+-2
          CFI (cfiCond1009) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1010 Using cfiCommon0
          CFI (cfiCond1010) Function bme280_set
          CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1010) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1010) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1010) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1010) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1010) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1010) CFA_SP SP+-2
          CFI (cfiCond1010) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function bme280_set
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1011) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1011) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1011) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1011) CFA_SP SP+-2
          CFI (cfiCond1011) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker1012 Using cfiCommon1
          CFI (cfiPicker1012) NoFunction
          CFI (cfiPicker1012) Picker
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_401:
        MOV     R0,#?V0
        MOV     R1,#?V4
        RET
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiCond1007
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiPicker1012

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond1013 Using cfiCommon0
          CFI Function bme280_compensate_humidity_double
          CFI Conditional ??CrossCallReturnLabel_400
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-10
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1014 Using cfiCommon0
          CFI (cfiCond1014) Function bme280_data_readout
          CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_393
          CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1014) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1014) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1014) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1014) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1014) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1014) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1014) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1014) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1014) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1014) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1014) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1014) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1014) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1014) CFA_SP SP+-4
          CFI (cfiCond1014) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1015 Using cfiCommon0
          CFI (cfiCond1015) Function bme280_data_readout
          CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_394
          CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1015) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1015) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1015) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1015) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1015) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1015) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1015) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1015) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1015) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1015) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1015) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1015) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1015) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1015) CFA_SP SP+-4
          CFI (cfiCond1015) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1016 Using cfiCommon0
          CFI (cfiCond1016) Function bme280_set
          CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_395
          CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1016) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1016) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1016) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1016) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1016) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1016) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1016) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1016) CFA_SP SP+-4
          CFI (cfiCond1016) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1017 Using cfiCommon0
          CFI (cfiCond1017) Function bme280_set
          CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_396
          CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1017) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1017) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1017) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1017) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1017) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1017) CFA_SP SP+-4
          CFI (cfiCond1017) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1018 Using cfiCommon0
          CFI (cfiCond1018) Function bme280_set
          CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_397
          CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1018) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1018) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1018) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1018) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1018) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1018) CFA_SP SP+-4
          CFI (cfiCond1018) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1019 Using cfiCommon0
          CFI (cfiCond1019) Function bme280_set
          CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_398
          CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1019) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1019) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1019) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1019) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1019) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1019) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1019) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1019) CFA_SP SP+-4
          CFI (cfiCond1019) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1020 Using cfiCommon0
          CFI (cfiCond1020) Function bme280_set
          CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_399
          CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1020) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1020) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1020) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1020) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1020) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1020) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1020) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1020) CFA_SP SP+-4
          CFI (cfiCond1020) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function bme280_set
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_401, ??CrossCallReturnLabel_392
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1021) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1021) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1021) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1021) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_SP SP+-4
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker1022 Using cfiCommon1
          CFI (cfiPicker1022) NoFunction
          CFI (cfiPicker1022) Picker
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V5,A
        MOV     ?V6,A
        MOV     ?V7,A
        RET
          CFI EndBlock cfiCond1013
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiCond1015
          CFI EndBlock cfiCond1016
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiCond1018
          CFI EndBlock cfiCond1019
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiPicker1022

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond1023 Using cfiCommon0
          CFI Function bme280_read_pressure_temperature_humidity
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1024 Using cfiCommon0
          CFI (cfiCond1024) Function bme280_data_readout
          CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1024) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1024) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1024) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1024) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1024) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1024) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1024) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1024) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1024) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1024) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1024) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1024) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1024) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1024) CFA_SP SP+-2
          CFI (cfiCond1024) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker1025 Using cfiCommon1
          CFI (cfiPicker1025) NoFunction
          CFI (cfiPicker1025) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_225:
        MOV     A,#0x4
        RET
          CFI EndBlock cfiCond1023
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiPicker1025

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond1026 Using cfiCommon0
          CFI Function bme280_read_pressure_temperature_humidity
          CFI Conditional ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1027 Using cfiCommon0
          CFI (cfiCond1027) Function bme280_data_readout
          CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1027) V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1027) V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1027) V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1027) V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1027) V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1027) V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1027) V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1027) V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1027) V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1027) V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1027) V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1027) V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1027) V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1027) CFA_SP SP+-2
          CFI (cfiCond1027) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker1028 Using cfiCommon1
          CFI (cfiPicker1028) NoFunction
          CFI (cfiPicker1028) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_224:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        RET
          CFI EndBlock cfiCond1026
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiPicker1028
// 2661 
// 2662 //*****************************************************************************
// 2663 //
// 2664 //! Sensor initialization... setting mode of the sensor as "NORMAL",
// 2665 //! setting oversampling  for temp - x4, for press - x2 
// 2666 //! and for humidity -x1, and setting a standby time - 125[ms]
// 2667 //
// 2668 //*****************************************************************************

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2669 s32 bme280_set(struct bme280_t *bme280, struct value *val)
bme280_set:
          CFI Block cfiBlock1029 Using cfiCommon0
          CFI Function bme280_set
        CODE
// 2670 {
        FUNCALL bme280_set, SPI_routine
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set, bme280_init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set, bme280_set_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set, bme280_set_oversamp_humidity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set, bme280_set_oversamp_pressure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set, bme280_set_oversamp_temperature
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set, bme280_set_standby_durn
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_set, bme280_set_power_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        MOV     A,#-0x11
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
        ; Saved register size: 17
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2671 	/* result of communication results*/
// 2672 	s32 com_rslt = ERROR;	
// 2673 	   
// 2674          SPI_routine(bme280);
        ; Setup parameters for call to function SPI_routine
        LCALL   `??SPI_routine::?relay`; Banked call to: SPI_routine
// 2675        
// 2676 	
// 2677 	com_rslt = bme280_init(bme280);
        ; Setup parameters for call to function bme280_init
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??bme280_init::?relay`; Banked call to: bme280_init
        MOV     A,R1
        MOV     ?V0,A
// 2678    
// 2679         
// 2680 	  /* Set the power mode as SLEEP*/
// 2681 	com_rslt += bme280_set_power_mode(BME280_SLEEP_MODE);
        ; Setup parameters for call to function bme280_set_power_mode
        MOV     R1,#0x0
        LCALL   `??bme280_set_power_mode::?relay`; Banked call to: bme280_set_power_mode
        MOV     A,R1
        MOV     ?V4,A
// 2682    
// 2683          
// 2684 	/*	For reading the pressure, humidity and temperature data it is required to
// 2685 	 *	set the OSS setting of humidity, pressure and temperature
// 2686 	 * The "BME280_CTRLHUM_REG_OSRSH" register sets the humidity
// 2687 	 * data acquisition options of the device.
// 2688 	 * changes to this registers only become effective after a write operation to
// 2689 	 * "BME280_CTRLMEAS_REG" register.
// 2690 	 * In the code automated reading and writing of "BME280_CTRLHUM_REG_OSRSH"
// 2691 	 * register first set the "BME280_CTRLHUM_REG_OSRSH" and then read and write
// 2692 	 * the "BME280_CTRLMEAS_REG" register in the function
// 2693 	 */
// 2694 	com_rslt += bme280_set_oversamp_humidity(BME280_OVERSAMP_1X);
        ; Setup parameters for call to function bme280_set_oversamp_humidity
        MOV     R1,#0x1
        LCALL   `??bme280_set_oversamp_humidity::?relay`; Banked call to: bme280_set_oversamp_humidity
        MOV     A,R1
        MOV     ?V8,A
// 2695   
// 2696          
// 2697 	/* set the pressure oversampling */
// 2698 	com_rslt += bme280_set_oversamp_pressure(BME280_OVERSAMP_2X);
        ; Setup parameters for call to function bme280_set_oversamp_pressure
        MOV     R1,#0x2
        LCALL   `??bme280_set_oversamp_pressure::?relay`; Banked call to: bme280_set_oversamp_pressure
        MOV     A,R1
        MOV     R6,A
// 2699 	 
// 2700          
// 2701         
// 2702         /* set the temperature oversampling */
// 2703 	com_rslt += bme280_set_oversamp_temperature(BME280_OVERSAMP_4X);
        ; Setup parameters for call to function bme280_set_oversamp_temperature
        MOV     R1,#0x3
        LCALL   `??bme280_set_oversamp_temperature::?relay`; Banked call to: bme280_set_oversamp_temperature
        MOV     A,R1
        MOV     R7,A
// 2704 	
// 2705          
// 2706         
// 2707         /* This API used to Write the standby time of the sensor input
// 2708 	 *	value have to be given
// 2709 	 *	Normal mode comprises an automated perpetual cycling between an (active)
// 2710 	 *	Measurement period and an (inactive) standby period.
// 2711 	 *	The standby time is determined by the contents of the register t_sb.
// 2712 	 *	Standby time can be set using BME280_STANDBYTIME_125_MS.
// 2713 	 *	Usage Hint : bme280_set_standbydur(BME280_STANDBYTIME_125_MS)
// 2714 	 */
// 2715   com_rslt += bme280_set_standby_durn(BME280_STANDBY_TIME_125_MS);
        ; Setup parameters for call to function bme280_set_standby_durn
        MOV     R1,#0x2
        LCALL   `??bme280_set_standby_durn::?relay`; Banked call to: bme280_set_standby_durn
        MOV     A,R1
        MOV     R2,A
// 2716 	 
// 2717         
// 2718   /* Set the power mode as NORMAL*/
// 2719 	com_rslt += bme280_set_power_mode(BME280_NORMAL_MODE);
// 2720 	// HalLcdWriteString("9 ",0);
// 2721        //   WriteHex((char)com_rslt);
// 2722         // HalLcdWriteString("",0);
// 2723          
// 2724         
// 2725         return com_rslt;
        MOV     A,?V0
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_209:
        MOV     A,?V4
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_392:
        LCALL   ?L_ADD
        MOV     A,?V8
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_395:
        LCALL   ?L_ADD
        MOV     A,R6
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_396:
        LCALL   ?L_ADD
        MOV     A,R7
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_397:
        LCALL   ?L_ADD
        MOV     A,R2
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_398:
        LCALL   ?L_ADD
        ; Setup parameters for call to function bme280_set_power_mode
        MOV     R1,#0x3
        LCALL   `??bme280_set_power_mode::?relay`; Banked call to: bme280_set_power_mode
        MOV     A,R1
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_399:
        LCALL   ?L_ADD
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     R7,#0x9
        LJMP    ?BANKED_LEAVE_XDATA
// 2726 }// s32 bme280_set(struct bme280_t *bme280, struct value *val);
          CFI EndBlock cfiBlock1029

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond1030 Using cfiCommon0
          CFI Function bme280_data_readout
          CFI Conditional ??CrossCallReturnLabel_208
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1031 Using cfiCommon0
          CFI (cfiCond1031) Function bme280_set
          CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1031) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1031) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1031) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1031) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1031) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1031) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1031) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1031) CFA_SP SP+-2
          CFI (cfiCond1031) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker1032 Using cfiCommon1
          CFI (cfiPicker1032) NoFunction
          CFI (cfiPicker1032) Picker
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V1,A
        MOV     ?V2,A
        MOV     ?V3,A
        RET
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiCond1031
          CFI EndBlock cfiPicker1032
// 2727 
// 2728 /*
// 2729  *	Func display values via UART interface on RealTerm
// 2730  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2731 void bme280_display(struct value *val)
bme280_display:
          CFI Block cfiBlock1033 Using cfiCommon0
          CFI Function bme280_display
        CODE
// 2732 {/*
        ; Saved register size: 0
        ; Auto size: 0
// 2733 	char buffer[64];
// 2734 	
// 2735 	sprintf(buffer, "=============================");
// 2736 	UARTPrint(buffer);
// 2737 	UARTCharPut(UART0_BASE, 13);
// 2738 	UARTCharPut(UART0_BASE, 10);
// 2739 	
// 2740 	sprintf(buffer, "temperatura = %d.%d [C]", val->temp / 100, val->temp % 100);
// 2741 	UARTPrint(buffer);
// 2742 	UARTCharPut(UART0_BASE, 13);
// 2743 	UARTCharPut(UART0_BASE, 10);
// 2744 	
// 2745 	sprintf(buffer, "pritisak = %d.%d [mb]", val->press / 100, val->press % 100);
// 2746 	UARTPrint(buffer);
// 2747 	UARTCharPut(UART0_BASE, 13);
// 2748 	UARTCharPut(UART0_BASE, 10);
// 2749 	
// 2750 	sprintf(buffer, "vlaznost = %d [%%RH]", (val->humid >> 10));
// 2751 	UARTPrint(buffer);
// 2752 	UARTCharPut(UART0_BASE, 13);
// 2753 	UARTCharPut(UART0_BASE, 10);
// 2754 	
// 2755 	sprintf(buffer, "=============================");
// 2756 	UARTPrint(buffer);
// 2757 	UARTCharPut(UART0_BASE, 13);
// 2758 	UARTCharPut(UART0_BASE, 10);
// 2759 
// 2760 */
// 2761 
// 2762 
// 2763 }// end void bme280_display(struct value *val);
        LJMP    ?BRET
          CFI EndBlock cfiBlock1033
// 2764 
// 2765 //*****************************************************************************
// 2766 //
// 2767 //! Sending data from BME280 via UART
// 2768 //! temp, press and humid
// 2769 //
// 2770 //*****************************************************************************

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2771 void bme280_send_data(struct value *val)
bme280_send_data:
          CFI Block cfiBlock1034 Using cfiCommon0
          CFI Function bme280_send_data
        CODE
// 2772 {
        FUNCALL bme280_send_data, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 88, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 88, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_send_data, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 88, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 88, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_send_data, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 88, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 88, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL bme280_send_data, UARTPrint
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 84, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 84, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 64
        MOV     A,#-0x40
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 84)
        MOV     ?V0,R2
        MOV     ?V1,R3
// 2773 	char buff[64];
// 2774 	
// 2775         
// 2776         sprintf(buff, "%d", val->temp); 
        ; Setup parameters for call to function sprintf
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     R4,#`?<Constant "%d">` & 0xff
        MOV     R5,#(`?<Constant "%d">` >> 8) & 0xff
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??sprintf::?relay`  ; Banked call to: sprintf
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 84)
// 2777 	sprintf(buff + 5, "%d", val->press/100);
        ; Setup parameters for call to function sprintf
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R0,#?V4
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_64
        MOV     R0,#?V8
        LCALL   ?L_MOV_X
        MOV     R0,#?V4
        MOV     R1,#?V8
        LCALL   ?UL_DIV_MOD
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_FOUR
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     R4,#`?<Constant "%d">` & 0xff
        MOV     R5,#(`?<Constant "%d">` >> 8) & 0xff
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??sprintf::?relay`  ; Banked call to: sprintf
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 84)
// 2778         sprintf(buff + 5, "%d", val->humid);
        ; Setup parameters for call to function sprintf
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     R4,#`?<Constant "%d">` & 0xff
        MOV     R5,#(`?<Constant "%d">` >> 8) & 0xff
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   `??sprintf::?relay`  ; Banked call to: sprintf
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 84)
// 2779           
// 2780         UARTPrint(buff);
        ; Setup parameters for call to function UARTPrint
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??UARTPrint::?relay`; Banked call to: UARTPrint
// 2781 
// 2782 }// void bme280_send_data(struct value *val);
        MOV     A,#0x40
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock1034
// 2783 
// 2784 //*****************************************************************************
// 2785 //
// 2786 //! Printing string via UART on RealTerm
// 2787 //
// 2788 //*****************************************************************************

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2789 void UARTPrint(char *string)
UARTPrint:
          CFI Block cfiBlock1035 Using cfiCommon0
          CFI Function UARTPrint
        CODE
// 2790 {
        FUNCALL UARTPrint, HalLcdWriteString
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2791   
// 2792   HalLcdWriteString(string,0);
        ; Setup parameters for call to function HalLcdWriteString
        MOV     R1,#0x0
        LCALL   `??HalLcdWriteString::?relay`; Banked call to: HalLcdWriteString
// 2793 	/*int i = 0;
// 2794 	do
// 2795 	{
// 2796 		
// 2797 		//UARTCharPut(UART0_BASE, string[i]);
// 2798 		i++;
// 2799 	} while(string[i] != '\0');
// 2800 	*/
// 2801 }// end void UARTPrint(char *string);
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1035

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_init_struct::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_init_struct

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_init::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_read_uncomp_temperature::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_read_uncomp_temperature

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_compensate_temperature_int32::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compensate_temperature_int32

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??bme280_compensate_temperature_int32_sixteen_b:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compensate_temperature_int32_sixteen_bit_output

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_read_uncomp_pressure::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_read_uncomp_pressure

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_compensate_pressure_int32::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compensate_pressure_int32

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_read_uncomp_humidity::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_read_uncomp_humidity

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_compensate_humidity_int32::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compensate_humidity_int32

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??bme280_compensate_humidity_int32_sixteen_bit_:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compensate_humidity_int32_sixteen_bit_output

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??bme280_read_uncomp_pressure_temperature_humid:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_read_uncomp_pressure_temperature_humidity

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_read_pressure_temperature_humidity::?r`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_read_pressure_temperature_humidity

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_get_calib_param::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_get_calib_param

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_get_oversamp_temperature::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_get_oversamp_temperature

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_set_oversamp_temperature::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_set_oversamp_temperature

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_get_oversamp_pressure::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_get_oversamp_pressure

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_set_oversamp_pressure::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_set_oversamp_pressure

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_get_oversamp_humidity::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_get_oversamp_humidity

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_set_oversamp_humidity::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_set_oversamp_humidity

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_get_power_mode::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_get_power_mode

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_set_power_mode::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_set_power_mode

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_set_soft_rst::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_set_soft_rst

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_get_spi3::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_get_spi3

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_set_spi3::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_set_spi3

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_get_filter::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_get_filter

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_set_filter::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_set_filter

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_get_standby_durn::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_get_standby_durn

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_set_standby_durn::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_set_standby_durn

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??bme280_get_forced_uncomp_pressure_temperature:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_get_forced_uncomp_pressure_temperature_humidity

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_write_register::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_write_register

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_read_register::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_read_register

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_compensate_temperature_double::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compensate_temperature_double

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_compensate_pressure_double::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compensate_pressure_double

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_compensate_humidity_double::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compensate_humidity_double

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_compensate_pressure_int64::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compensate_pressure_int64

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??bme280_compensate_pressure_int64_twentyfour_b:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compensate_pressure_int64_twentyfour_bit_output

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_compute_wait_time::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_compute_wait_time

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_data_readout_template::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_data_readout_template

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??SPI_routine::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    SPI_routine

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??BME280_SPI_bus_read::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    BME280_SPI_bus_read

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??BME280_SPI_bus_write::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    BME280_SPI_bus_write

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??BME280_delay_msek::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    BME280_delay_msek

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_data_readout::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_data_readout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_set::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_set

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_display::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_display

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??bme280_send_data::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    bme280_send_data

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??UARTPrint::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    UARTPrint

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0, 0, 0}>`:
        DB 0
        DB 0
        DB 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0, 0, 0}>_1`:
        DB 0
        DB 0
        DB 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
`?<Constant {0, 0}>`:
        DATA8
        DB 0
        DB 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0, 0, 0, 0, 0, 0, 0, 0}>`:
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0`:
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0_1`:
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0
        DB 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%d">`:
        DB "%d"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3:
        DD 3

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_5:
        DD 5

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_80:
        DD 128

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_19:
        DD 25

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_ffd12080:
        DD -3071872

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_ffff0600:
        DD -64000

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_8000:
        DD 32768

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_c35:
        DD 3125

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_80000000:
        DD 2147483648

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_fffed400:
        DD -76800

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_4000:
        DD 16384

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_200000:
        DD 2097152

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_2000:
        DD 8192

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_0:
        DD 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_19000001:
        DD 419430401

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_38800000:
        DD 38800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3a800000:
        DD 3A800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_37000000:
        DD 37000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_39000000:
        DD 39000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_45a00000:
        DD 45A00000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f000000:
        DD 3F000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_c77a0000:
        DD 0C77A0000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_38000000:
        DD 38000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_40000000:
        DD 40000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e800000:
        DD 3E800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_47800000:
        DD 47800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_36000000:
        DD 36000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_2e800000:
        DD 2E800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f800000:
        DD 3F800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_1:
        DD 1H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_39800000:
        DD 39800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_45c35000:
        DD 45C35000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_30000000:
        DD 30000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3d800000:
        DD 3D800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_c7960000:
        DD 0C7960000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42800000:
        DD 42800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_37800000:
        DD 37800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_32800000:
        DD 32800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42c80001:
        DD 42C80001H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_fffe0c00:
        DD -128000

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_7e:
        DD 126

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_64:
        DD 100

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_32:
        DD 50

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_ffffffff:
        DD -1

        END
// 2802 
// 
// 9 215 bytes in segment BANKED_CODE
//   282 bytes in segment BANK_RELAYS
//     1 byte  in segment SFR_AN
//   247 bytes in segment XDATA_ROM_C
//     2 bytes in segment XDATA_Z
// 
//   282 bytes of CODE     memory
//    71 bytes of CONST    memory (+ 176 bytes shared)
//     0 bytes of DATA     memory (+   1 byte  shared)
// 9 215 bytes of HUGECODE memory
//     2 bytes of XDATA    memory
//
//Errors: none
//Warnings: 7
